{
  "comments": [
    {
      "key": {
        "uuid": "9c9b07e5_1ab5ed16",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 805,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-10T05:06:20Z",
      "side": 1,
      "message": "If we have an invalid value, we need to publish invalid, not simply clamp it to something reasonable.  I really forget how this calculation works, but if we\u0027re getting an incorrect fan tach reading, that needs fixed, not this.",
      "range": {
        "startLine": 805,
        "startChar": 7,
        "endLine": 805,
        "endChar": 69
      },
      "revId": "93155e7b9cc6fece86649b33d7bab22974a2ce11",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fcbfe87_e8a9f5a0",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 805,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-10T18:54:12Z",
      "side": 1,
      "message": "Agreed, fan sensor issue should be fixed to detect and report fan errors correctly.\nBut having a check here is still advantageous, similar to null pointer or divide by zero check even when parameters are not expected to be null or zero.\nIs there particular concern for adding check here?",
      "parentUuid": "9c9b07e5_1ab5ed16",
      "range": {
        "startLine": 805,
        "startChar": 7,
        "endLine": 805,
        "endChar": 69
      },
      "revId": "93155e7b9cc6fece86649b33d7bab22974a2ce11",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1ca5152_d768fe9e",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 805,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-11T20:58:25Z",
      "side": 1,
      "message": "\u003e Agreed, fan sensor issue should be fixed to detect and report fan errors correctly.\n\u003e But having a check here is still advantageous, similar to null pointer or divide by zero check even when parameters are not expected to be null or zero.\n\nThe difference there is that we can\u0027t do a valid calculation in that case.  If something is nullptr, and we deference it, we crash.  If we divide by zero, we crash.  If we produce the mathematically expected result because another sensor gave us bad data, we shouldn\u0027t be covering up for it, we should give the \"correct\" result, and expecting fan sensor to hold up its gaurantees.  If we assume that we have to cover up bad sensor values, we\u0027d probably double the size of this file with the number of sanity checks we\u0027d need.\n\n\u003e Is there particular concern for adding check here?\n\nMy concern is that we\u0027re covering up an issue, rather than root causing it to the thing that cause the issue in the first place.  Maybe we don\u0027t need this code at all if the fan sensor is correct all the time, and therefore we can simplify this code as a result.\n\nIf fan sensors are giving bad values at startup, that should be fixed.  If fan sensors are giving correct data, and cfm sensor is producing the wrong result, then we can consider clamping/fixing things in the algorithm.",
      "parentUuid": "3fcbfe87_e8a9f5a0",
      "range": {
        "startLine": 805,
        "startChar": 7,
        "endLine": 805,
        "endChar": 69
      },
      "revId": "93155e7b9cc6fece86649b33d7bab22974a2ce11",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c36c46fe_4dc27119",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 852,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-10T05:06:20Z",
      "side": 1,
      "message": "I\u0027m not following why this can happen;  I suspect we should be clamping sooner.  alphaDT is time duration * alpha.  If time duration is negative, something is really broken in this app, and we shouldn\u0027t be clamping it.\n\nIf alpha is negative, that seems reasonable to clamp it, but we should clamp on line 838, not after the negative number has been multiplied through.\n\nSorry, i really should\u0027ve caught this the first time around.",
      "range": {
        "startLine": 852,
        "startChar": 0,
        "endLine": 852,
        "endChar": 44
      },
      "revId": "93155e7b9cc6fece86649b33d7bab22974a2ce11",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6624ae1_3fc460fa",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 852,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-10T18:54:12Z",
      "side": 1,
      "message": "You are right, alpha is not going to be negative, but the time duration could be if system_clock is adjusted.\nUsing steady_clock is another option.  Will that be better?",
      "parentUuid": "c36c46fe_4dc27119",
      "range": {
        "startLine": 852,
        "startChar": 0,
        "endLine": 852,
        "endChar": 44
      },
      "revId": "93155e7b9cc6fece86649b33d7bab22974a2ce11",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}