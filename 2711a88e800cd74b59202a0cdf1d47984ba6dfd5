{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9b8fadd_abe06639",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "Generally openbmc communicates configurations via dbus.  Previous versions of entity-manager/reactors relied on filesystems, and proved to cause significant issues in atomic updates, or single property updates.  Any reason we\u0027re going back to them here?",
      "range": {
        "startLine": 9,
        "startChar": 10,
        "endLine": 9,
        "endChar": 29
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ba2d5a_1698ed8e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "This seems like a confusion in terms.  A SENSOR is never a battery.  A battery might be monitored by a sensor, and have an inventory item behind it, but the sensor itself is an ADC.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 28
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1a63eab_8200da08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "Please don\u0027t reinvent thresholds.  There are already threshold event interfaces published to dbus.  At most we would add another severity to the interface rather than create a whole new one.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 19,
        "endChar": 11
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b449796e_23be91ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "nothing in this patchset explains WHY you\u0027re doing this.  Creating a dbus interface clearly isn\u0027t the goal, what is?",
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e6db7ae_27baf8a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "Before you start making fixes, lets get a discussion about what you\u0027re trying to accomplish.  Your commit message mentions writing files, and exposing something that\u0027s a \"Battery\", but makes no mention as to WHY.  I suspect there\u0027s a far simpler solution.\n\nNote, there are LOTS of examples of batteries in openbmc ADC entries already, most of which can be found by searching for the BridgeGPIO stanza in the EM configs.  I\u0027m not against having a unique \"battery\" entry for EM that\u0027s unique from ADC, because it\u0027s more descriptive, but the rest of the changes making heavy changes to the base class need to go in the subclass, and we need to document what we\u0027re actually trying to accomplish.\n\nTo reiterate what I said earlier, there is no such thing as a \"Battery\" sensor type.  There is a sensor that produces a voltage.  If it\u0027s monitoring a battery, it needs to be attached to a Battery entry which can be added using a new EM file with Probe \u003d Found(\"My baseboard\").",
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fbdafb6_30871972",
        "filename": "src/ADCSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "This would normally be checking batteryStatusInterface for validity, not another property.",
      "range": {
        "startLine": 95,
        "startChar": 8,
        "endLine": 95,
        "endChar": 17
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dfe7341_35f8ad71",
        "filename": "src/ADCSensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "like we do for other sensors that have multiple types, lets just store the type (ideally as an enum, but other sensors use a string).",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 19
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a2419b_4d65adee",
        "filename": "src/ADCSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "Remove, not need to construct an empty string.  That is the default.",
      "range": {
        "startLine": 117,
        "startChar": 34,
        "endLine": 117,
        "endChar": 51
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22958046_90f8562e",
        "filename": "src/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "You should not be overriding the sensor base class with whether or not it\u0027s a battery.  At most that should go into AdcSensor.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 25
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "700655cd_c74d0fe2",
        "filename": "src/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 374,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 374,
        "startChar": 0,
        "endLine": 374,
        "endChar": 42
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33571c17_9e987d96",
        "filename": "src/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "This change wasn\u0027t documented in your commit message, and we really shouldn\u0027t be allowing a SET of the Functional interface from outside of the sensor itself.  That inverts control compared to the existing PowerState parameter handling.",
      "range": {
        "startLine": 390,
        "startChar": 36,
        "endLine": 397,
        "endChar": 13
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2803dfa_703e0754",
        "filename": "src/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 481,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:10:57Z",
      "side": 1,
      "message": "More things that shouldn\u0027t go in the general sensor class.",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 30
      },
      "revId": "2711a88e800cd74b59202a0cdf1d47984ba6dfd5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}