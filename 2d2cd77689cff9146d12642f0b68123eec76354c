{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "716f5a5d_3b95e285",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 857,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-30T01:20:11Z",
      "side": 1,
      "message": "Put sensorPathStr before labelHead can avoid adding nullptr in this call",
      "range": {
        "startLine": 857,
        "startChar": 55,
        "endLine": 857,
        "endChar": 78
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13695169_3a486ea3",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 857,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-08-02T04:30:43Z",
      "side": 1,
      "message": "parseThresholdsFromConfig is called in 12 other places. Adding sensorPathStr before labelHead will require changing arguments for few of these.\nCurrently only psu sensor is using sensorPathStr so nullptr argument is applicable only for psusensor. If we move sensorPathStr before labelHead then other callers will have to add nullptr. I think this will just shift problem(of having nullptr in arguments) from one place to another. Do you think it will be better to keep current way ?",
      "parentUuid": "716f5a5d_3b95e285",
      "range": {
        "startLine": 857,
        "startChar": 55,
        "endLine": 857,
        "endChar": 78
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65866b09_a2d7f1c0",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-30T01:20:11Z",
      "side": 1,
      "message": "duplicating part of function at https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/55956/1/src/Thresholds.cpp#524\n\nConsider refactor to avoid duplication",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2991b44e_1f411b46",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-08-02T04:30:43Z",
      "side": 1,
      "message": "parseThresholdFromAttr(in given link location) is taking sensor path as input and provides vector of thresholds. This threshold vector have one entry per sysfs file. This doesn\u0027t look to be suiting current use case where we want to use one sysfs file for generating two thresholds with different scaling factor.\nPlease advice if you think it is possible to reuse parseThresholdFromAttr here.",
      "parentUuid": "65866b09_a2d7f1c0",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e73342d7_7f41009c",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-30T01:20:11Z",
      "side": 1,
      "message": "move before use",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 51
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a21bb76_fa2f7f4e",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-08-02T04:30:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e73342d7_7f41009c",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 51
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de802068_194c7f1e",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-30T01:20:11Z",
      "side": 1,
      "message": "nit: switch if and else for easier diff and review",
      "range": {
        "startLine": 139,
        "startChar": 8,
        "endLine": 139,
        "endChar": 43
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db3c346f_cd9272fc",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-08-02T04:30:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "de802068_194c7f1e",
      "range": {
        "startLine": 139,
        "startChar": 8,
        "endLine": 139,
        "endChar": 43
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e58e8f1e_f70dcd8f",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-30T01:20:11Z",
      "side": 1,
      "message": "this can be checked before line 141",
      "range": {
        "startLine": 145,
        "startChar": 16,
        "endLine": 145,
        "endChar": 40
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11db7152_c77451e8",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-08-02T04:30:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e58e8f1e_f70dcd8f",
      "range": {
        "startLine": 145,
        "startChar": 16,
        "endLine": 145,
        "endChar": 40
      },
      "revId": "2d2cd77689cff9146d12642f0b68123eec76354c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}