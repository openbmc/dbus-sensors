{
  "comments": [
    {
      "key": {
        "uuid": "e50c8f7e_929e3f58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-25T11:09:55Z",
      "side": 1,
      "message": "In code change, if(sensorsChanged\u003d\u003dnullptr) we are calling \u0027continue;\u0027. This is in contradiction with this statement in commit message.\n\nAs per new code we make sensor object if(sensorsChanged!\u003dnullptr).",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 29
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c50383bd_3548f1dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-05-13T01:24:15Z",
      "side": 1,
      "message": "I am not sure this is true. What if sensor config is updated? What if threshold values are changed?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61667ca3_34863773",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-05-14T02:13:27Z",
      "side": 1,
      "message": "If the sensor config or threshold value are changed,PropertiesChanged signal will be set, createsensor will be called but \"sensorsChanged\" will be not nullptr, so the sensor could be get updated.",
      "parentUuid": "c50383bd_3548f1dd",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa86a77_b082a230",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-06-25T23:02:19Z",
      "side": 1,
      "message": "That is a fair point. After re-read the code more carefully, I think the root problem is propertyChanged \u003d\u003d nullptr is inferred as firstScan. It is reasonable for \"first scan\", all sensors should get a clean start including delete sensors that are removed. We need to clarify the match required to identify \"firstScan\" vs incremental changes/update.",
      "parentUuid": "61667ca3_34863773",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9cf185e_f5c3fb41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-05-13T01:24:15Z",
      "side": 1,
      "message": "the code should be designed to work reliably for all cases including the corner cases. Can you provide more detail on the corner cases? I am aware of timing race conditions and this patch is to fix them https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42737. It may not be bulletproof yet. If you have particular test cases, I can give them a try.",
      "range": {
        "startLine": 17,
        "startChar": 48,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58e61a70_71da0101",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-05-14T02:13:27Z",
      "side": 1,
      "message": "It\u0027s also necessary enhance the code from the perspective of performance or robustness, that\u0027s the current patch is trying to do.\n\nThe corner case I met was sensor P12V_AUX\u0027s value was down across the lcr in a particular board, it introduces the timing race condition that ThresholdTimer::startTimer was not expired while the sensor was destroyed.\n\nI thought there should be a solution for this corner case like https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42737. But the current patch is to enhance the code performance and robustness.",
      "parentUuid": "a9cf185e_f5c3fb41",
      "range": {
        "startLine": 17,
        "startChar": 48,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52ba90cb_fe55f0c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-06-25T23:02:19Z",
      "side": 1,
      "message": "Please do not add this corner case discussion if it is not affecting why this patch is made and/or how the patch is implemented. It is confusing IMO.",
      "parentUuid": "58e61a70_71da0101",
      "range": {
        "startLine": 17,
        "startChar": 48,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "db28823fa2fcc285739126854e77f65634a36041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}