{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "820c035a_5b37e67b",
        "filename": "src/FanMain.cpp",
        "patchSetId": 22
      },
      "lineNbr": 108,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:21:27Z",
      "side": 1,
      "message": "nit, you probably didn\u0027t intend for this whitespace change in your patchset.",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4121d94_7a1b3b35",
        "filename": "src/FanMain.cpp",
        "patchSetId": 22
      },
      "lineNbr": 108,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "820c035a_5b37e67b",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "621a252e_cf2b91ca",
        "filename": "src/FanMain.cpp",
        "patchSetId": 22
      },
      "lineNbr": 447,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "This code doesn\u0027t look right to me.\n\nI\u0027m reading it as \"Attempt to make an event driven presence sensor, then if it fails for any reason, build a polling presence sensor.\"\n\nWe should be looking at some kind of capabilities flag to know which type of these to init, not just blindly falling back to polling.  A platform might support gpio interrupts on a device, but fail for a different reason (missing gpio, hardware failure, etc). in that case falling back to polling will cover up the error in a bad way.  Worst case, we should be keying off the Type flag in the EM config to know what type of polling we support.",
      "range": {
        "startLine": 437,
        "startChar": 0,
        "endLine": 447,
        "endChar": 25
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f0f15a4_a80a2def",
        "filename": "src/FanMain.cpp",
        "patchSetId": 22
      },
      "lineNbr": 447,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "621a252e_cf2b91ca",
      "range": {
        "startLine": 437,
        "startChar": 0,
        "endLine": 447,
        "endChar": 25
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a557c3d_36039d35",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 300,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "This is doubling up the map lookup.  Use staticGpioMap.find()\n\n\nalso, isn\u0027t this making a copy of gpioLine?  That doesn\u0027t seem like what you intended.",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 300,
        "endChar": 43
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a12e57f4_36250896",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 300,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a557c3d_36039d35",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 300,
        "endChar": 43
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82ad502e_4443d067",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 340,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "For presence sensors that have shared this entry, won\u0027t this erase them for all, even if only one is destroyed?  Maybe the map needs to be a list of weak_ptrs?",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 340,
        "endChar": 34
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0c62ecf_f6cd101f",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 340,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T21:34:26Z",
      "side": 1,
      "message": "Actually, I don\u0027t think it needs to be erased. If the GPIO was found, it can stay in the map if the presence sensor is removed.  From what I see, the TachSensors (and PSensors) would not get removed until the fansensor app is stopped.",
      "parentUuid": "82ad502e_4443d067",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 340,
        "endChar": 34
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e22ad077_2b211eeb",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 346,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "nit, auto makes it difficult to determine the type here.  I\u0027m assuming it\u0027s int based on the line below, but that\u0027s a guess.",
      "range": {
        "startLine": 346,
        "startChar": 4,
        "endLine": 346,
        "endChar": 8
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe8692a1_5f6d9488",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 346,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e22ad077_2b211eeb",
      "range": {
        "startLine": 346,
        "startChar": 4,
        "endLine": 346,
        "endChar": 8
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fed6df1_265192d6",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 362,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "check your error codes.  If the timer errored out, this shouldn\u0027t be restarting, it should be stopping and logging the error.",
      "range": {
        "startLine": 362,
        "startChar": 37,
        "endLine": 362,
        "endChar": 69
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5646a39d_8dd1b83f",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 22
      },
      "lineNbr": 362,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fed6df1_265192d6",
      "range": {
        "startLine": 362,
        "startChar": 37,
        "endLine": 362,
        "endChar": 69
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bc82cbe_49c6c40d",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "Does PollingPresenceSensor and Psensor need their own hpp/cpp files?  throwing them into tach sensor doesn\u0027t seem right now that they\u0027re opaque interfaces.",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "342379b9_1baff438",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bc82cbe_49c6c40d",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49ed56fb_f438d65a",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:32:50Z",
      "side": 1,
      "message": "Put this timer last in the declaration of this class, and you no longer need the shared_ptr stuff.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 42
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49ff5366_e97561ab",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 62,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49ed56fb_f438d65a",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 42
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e92d94_b875308c",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:16:16Z",
      "side": 1,
      "message": "can you clean up the formatting on this please?  trailing line comments don\u0027t make a ton of sense if they drop the variable definition to the next line.\n\n\nAlso, unordered_map here would be better",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68a9deb8_5e2615b3",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:19:14Z",
      "side": 1,
      "message": "also, based on the name, was this static at one point?  That would make a ton more sense than what I\u0027m seeing now, which is each PollingPresenceSensor has its own map of gpios.",
      "parentUuid": "15e92d94_b875308c",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "988f0cae_a3933006",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T00:43:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68a9deb8_5e2615b3",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cab66910_375317f2",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-24T01:26:28Z",
      "side": 1,
      "message": "Please answer questions.  Don\u0027t just mark things \"Done\"",
      "parentUuid": "988f0cae_a3933006",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96a90ddc_2c5cbcac",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 65,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2024-03-06T20:34:15Z",
      "side": 1,
      "message": "I did move this to PresenceSensor.hpp and made it static (patch set 31 line 82)",
      "parentUuid": "cab66910_375317f2",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 65,
        "endChar": 65
      },
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36ce26c9_dc50da9b",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T23:32:50Z",
      "side": 1,
      "message": "This interface class is only called in two places.  I\u0027m not sure if that really justifies the added complexity of doing the shared/weak_pointer trick for this individually, as well as defining an opaque interface, when TachSensor itself is already tracked by a shared_ptr.\n\nShould we just host two values here instead of an opaque interface?\n\nSomething like:\n\nstd::optional\u003cPolledPresence\u003e\nstd::optional\u003cEventPresence\u003e\n\nThat seems a lot simpler to me, even if it results in a couple extra branches.\n\nother option would be to store this as a\n\nstd::variant\u003cstd::monotonic, PolledPresence, EventPresence\u003e",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c4a7229_0e830060",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-12-08T21:34:26Z",
      "side": 1,
      "message": "It was a unique_ptr before, but had to change to shared_ptr to account for the repeatTimer callback from a lambda function.\nYou mentioned moving the repeatTimer to the end of class declaration would remove the need for the shared/weak ptr.  I did move it, but I am not positive if that really resolves the issue.\nIf it does, then I can change this back to a unique_ptr again and remove the weak_ptr code that was added and it should resolve this issue.\nNote: the classes got moved into GpioPresence.* files.",
      "parentUuid": "36ce26c9_dc50da9b",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1e271b0_89bba7c3",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2024-01-03T16:51:29Z",
      "side": 1,
      "message": "I don\u0027t think the issue with the shared/weak pointers is related to having a opaque interface. Even if we kept them as two separate classes, the object is created in FanMain.cpp (based on config) and it would still need the std:move() call that is done in TachSensor constructor. \nThe restartRead() function would still be the same in that case (async_wait call/lambda on waitTimer).",
      "parentUuid": "7c4a7229_0e830060",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80af73cf_4a30af83",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-24T01:26:28Z",
      "side": 1,
      "message": "\u003e I don\u0027t think the issue with the shared/weak pointers is related to having a opaque interface. \n\nSo we\u0027ve taken out the opaque interface?",
      "parentUuid": "c1e271b0_89bba7c3",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6930ff71_6acfb1b9",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2024-03-07T23:29:38Z",
      "side": 1,
      "message": "Consolidating some of the discussion for clarity. I picked up this change and began addressing comments starting with patchset 19.\n\nOriginally, presence was a unique_ptr, but it was pointed out that there is a lambda/callback (now in PresenceSensor), so if the object gets destroyed before the callback we have a problem.\n\nThe solution was to make it a shared ptr and use weak_ptr for the callback. (see https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/54740/4..31/src/TachSensor.cpp#b289)\n\nI am not sure what you mean by an opaque interface.\nThe ptr is already abstracted by using the PresenseSensor base class (which can be either Polling or Event). The shared_ptr is used to handle the issue with callback (not so it can handle Polling vs Event).",
      "parentUuid": "80af73cf_4a30af83",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "873777ee_e465bb6b",
        "filename": "src/TachSensor.hpp",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2024-06-14T17:02:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6930ff71_6acfb1b9",
      "revId": "4fdf7ef56040c228c8288e8a76f44376a83fc4ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}