{
  "comments": [
    {
      "key": {
        "uuid": "524cb690_a8871e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T16:47:23Z",
      "side": 1,
      "message": "My only concern here is that we\u0027re putting hwmon specific terminology into the config file, which is supposed to stand alone from hwmon.  I realize that PSUsensor kind of broke this design point, but it\u0027s been on my list to fix for a while now.\n\nI\u0027d say we should probably replace this with an integer, something like \"Index\", similar to how FanSensor maps tacho indexes into this file.  That keeps the linux-specific bits out of the config file, making it more self-describing.\n\n\nAlso, rather than this, I wonder if we should just have two completely disparate config spaces, something like.\n\n\nThresholds1: [\n   ....\n]\n\nThresholds2: [\n   ....\n]\n\nTo keep the internals somewhat the same, and make it more clear that those are the thresholds for the other sensor.  At this point I\u0027m thinking out loud a little.",
      "range": {
        "startLine": 22,
        "startChar": 18,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59bb028c_e02334ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T18:19:24Z",
      "side": 1,
      "message": "When entity-manager converts the JSON to D-Bus, it\u0027s already adding numbers to the threshold interface names, like\nxyz.openbmc_project.Configuration.TMP75.Thresholds0.  I haven\u0027t looked at that area of entity-manager closely yet, but it could probably name the new interface something like ThresholdsX-Y, where X is taken from the JSON as you have above and Y is the index it was in the array.\n\nThe schema would also have to be updated to allow the new names.  I haven\u0027t looked at json-schema details in a while but I imagine there\u0027s a way to have regular expressions for element names.",
      "parentUuid": "524cb690_a8871e6d",
      "range": {
        "startLine": 22,
        "startChar": 18,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f0bf76f_a69112c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "Code will match Label with \"tempX\". May want clarify what is accepted Label.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca1b8b9d_0dbfe35f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "Could you elaborate?  I don\u0027t quite follow what you\u0027re requesting.",
      "parentUuid": "2f0bf76f_a69112c6",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "440f3c61_3b9d9bb4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T16:47:23Z",
      "side": 1,
      "message": "I think she\u0027s pointing out that you should document what label names are expected here.  I suspect if we go to integer indexes, this problem goes away.",
      "parentUuid": "ca1b8b9d_0dbfe35f",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6c881ae_c8536b38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-22T18:20:09Z",
      "side": 1,
      "message": "Ed is right, I meant to document clearly what are valid Labels. I like the idea of making it more generic, less tied to hwmon. Index would work.",
      "parentUuid": "440f3c61_3b9d9bb4",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "112d02b3_43ac3120",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T18:34:28Z",
      "side": 1,
      "message": "I will proceed with using Index instead as recommended.",
      "parentUuid": "b6c881ae_c8536b38",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9b15a59_784f5743",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T21:50:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "112d02b3_43ac3120",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 37,
        "endChar": 17
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9868f6ea_35f492f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "Is it using the above JSON example? What happens when there are only two labeled threshold, but there are actually 4 sensors?",
      "range": {
        "startLine": 46,
        "startChar": 64,
        "endLine": 47,
        "endChar": 57
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "288c2e1e_2293b7fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "It would only put the thresholds on the two sensors, and still create the other two sensors without thresholds.  (parseThresholdsFromConfig just returns no threshold interfaces when a label is passed in but there isn\u0027t a match)",
      "parentUuid": "9868f6ea_35f492f9",
      "range": {
        "startLine": 46,
        "startChar": 64,
        "endLine": 47,
        "endChar": 57
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8949a1_bd7c8965",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-03-19T06:18:15Z",
      "side": 1,
      "message": "Why is this hard-coded to `temp1`?",
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acac2d69_15a866b4",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "This is for the first sensor. Label is expected to use \"tempX\", where X is the sensor number.\nLine 282 is doing essentially the same",
      "parentUuid": "6a8949a1_bd7c8965",
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b63d9ee_ac35907b",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "As Zhikui said, this code path is always for temp1.  It\u0027s also hardcoded on line 251 below.",
      "parentUuid": "acac2d69_15a866b4",
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4dd6209_8b8e03f8",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "Since only accepted Label is in \"tempX\" format, may want add expected label if any here.",
      "range": {
        "startLine": 222,
        "startChar": 20,
        "endLine": 223,
        "endChar": 52
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "658fe4cb_03380d75",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "This function only fails if the value, direction, or severity wasn\u0027t found in the D-Bus configuration put out by entity-manager, so it doesn\u0027t involve the label value at all.  Would you still like me to add it?",
      "parentUuid": "f4dd6209_8b8e03f8",
      "range": {
        "startLine": 222,
        "startChar": 20,
        "endLine": 223,
        "endChar": 52
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16a5bb13_a851bd5c",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-22T18:20:09Z",
      "side": 1,
      "message": "I see your point, it might be misleading if it failed for other reason. My main concern is to make it obvious and provide helpful information for ill-formatted configurations. Maybe if Index is used, it is less an issue.",
      "parentUuid": "658fe4cb_03380d75",
      "range": {
        "startLine": 222,
        "startChar": 20,
        "endLine": 223,
        "endChar": 52
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee99af05_e836123d",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "Add expected label",
      "range": {
        "startLine": 288,
        "startChar": 28,
        "endLine": 289,
        "endChar": 60
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74705c87_41501816",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "Same comment as above.  Would you still like me to add it?",
      "parentUuid": "ee99af05_e836123d",
      "range": {
        "startLine": 288,
        "startChar": 28,
        "endLine": 289,
        "endChar": 60
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "698aba33_f637a2db",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-19T18:00:03Z",
      "side": 1,
      "message": "Should this be moved to after line 139?",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f2ef01_e0207250",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T15:26:26Z",
      "side": 1,
      "message": "My intent was to return false if Label was missing from any entry in the config, meaning that the code wouldn\u0027t look for Labels in that case when making threshold interfaces.  If the break was moved to 139, it would only check the first Thresholds entry it finds which is a slightly different behavior.\n\nI\u0027m fine either way, since really that is a mistake in the config if it isn\u0027t on all of them. would you like me to move it?",
      "parentUuid": "698aba33_f637a2db",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "741a6508_2d3d91a0",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T16:47:23Z",
      "side": 1,
      "message": "\u003e My intent was to return false if Label was missing from any entry in the config, meaning that the code wouldn\u0027t look for Labels in that case when making threshold interfaces.  If the break was moved to 139, it would only check the first Thresholds entry it finds which is a slightly different behavior.\n\nCould we instead have behavior where, if the Label isn\u0027t present, we assume temp1.  If the label is present, we use its index?  That seems like it would be more helpful, and would avoid cases where someone adds one threshold with a Label, and breaks another threshold that they never touched.\n\n\u003e \n\u003e I\u0027m fine either way, since really that is a mistake in the config if it isn\u0027t on all of them.\n\nI\u0027d like to see that avoided if possible.\n\n\u003e would you like me to move it?",
      "parentUuid": "a9f2ef01_e0207250",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81f5c74f_7029a4e9",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-22T18:20:09Z",
      "side": 1,
      "message": "+1 for Ed\u0027s suggestion. If Label/Index is used, all thresholds are required to have Label/Index including temp1_input, i.e. only Thresholds have Label/Index will be used and tempX_input without such thresholds defined will  not have Thresholds created for them. This should constrain the new or updated configs. But if no Label/Index is used, Threshold will be created for temp1_input only, rest of sensors will not have Thresholds. This should preserve current behavior.",
      "parentUuid": "741a6508_2d3d91a0",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f559212_fd4b1d6a",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-22T21:50:33Z",
      "side": 1,
      "message": "If I understand these comments, I think my code is giving this behavior.  This function just checks if every threshold has a label (soon to be index) so it can be used by other code.",
      "parentUuid": "81f5c74f_7029a4e9",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "045d5730_33569913",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-03-23T19:10:58Z",
      "side": 1,
      "message": "I think there is a subtle difference.  If one threshold has Index\u003d2, one does not have Index, the current implementation is to use the one without Index for temp1_input and Index\u003d2 for temp2_input, others will not have threshold. My initial thought was that this configuration should be rejected because it is likely a mistake. \nBut I can be convinced that maybe what we want to support. If that is the case, the only remaining question in my mind is what should be the \"correct behavior\" when there are multiple thresholds defined without index and some with index. Sorry for nit-picking here,",
      "parentUuid": "0f559212_fd4b1d6a",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a7e5d85_e8d47b8d",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-03-24T13:28:57Z",
      "side": 1,
      "message": "My latest patch set will do:\n\ntemp1: \n* if all thresholds have Index, use index, otherwise look for threshold without index\n\ntemp1+n:\n* if all thresholds have Index, use index, otherwise don\u0027t even look for a threshold\n\nI guess ideally the JSON schema would enforce them all using Index, but I don\u0027t think how the current Thresholds array is structured that that is possible.\n\nI\u0027m not sure what dbus-sensors could do if it notices missing Indexes.  Crash?  Print a warning?",
      "parentUuid": "045d5730_33569913",
      "range": {
        "startLine": 138,
        "startChar": 1,
        "endLine": 138,
        "endChar": 22
      },
      "revId": "ad156bb7e879f01a306cd6095f094455c89855aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}