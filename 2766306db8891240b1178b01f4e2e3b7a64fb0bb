{
  "comments": [
    {
      "key": {
        "uuid": "6b868df7_a1458752",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "Is there a spec for all the different bytes? What is ID?\nHow are they related to PMBus?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 41
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e987cd07_5c5500ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "NM External Interface Spec\nID is the mapping of sensor in NM.",
      "parentUuid": "6b868df7_a1458752",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 41
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60bfeff_c9924587",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "not used?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 26
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99dbb332_5127daa4",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Yes, not used. Will remove it.",
      "parentUuid": "e60bfeff_c9924587",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 26
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15cc52b_33bc9ecb",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "coding standard please",
      "range": {
        "startLine": 53,
        "startChar": 10,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61403f50_438fa22b",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "b15cc52b_33bc9ecb",
      "range": {
        "startLine": 53,
        "startChar": 10,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "975ff0ba_f47db385",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "this can overflow",
      "range": {
        "startLine": 64,
        "startChar": 21,
        "endLine": 64,
        "endChar": 56
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bf05f58_fcf42d20",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will make offset uint16_t",
      "parentUuid": "975ff0ba_f47db385",
      "range": {
        "startLine": 64,
        "startChar": 21,
        "endLine": 64,
        "endChar": 56
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e3f09bd_1599e352",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "nit: static_cast",
      "range": {
        "startLine": 66,
        "startChar": 23,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe98d09_b8cccc4a",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address.",
      "parentUuid": "4e3f09bd_1599e352",
      "range": {
        "startLine": 66,
        "startChar": 23,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e9a0de_3fecad7f",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "Log a message if this fails and IPMI is ignored, proxy mode is used?",
      "range": {
        "startLine": 250,
        "startChar": 16,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e618ef_a160e00c",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Yes we will default to proxy. \nWill log error.",
      "parentUuid": "a6e9a0de_3fecad7f",
      "range": {
        "startLine": 250,
        "startChar": 16,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e3f698_abd87cd3",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "default value can be moved to hpp file, reduce the length here",
      "range": {
        "startLine": 70,
        "startChar": 32,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8e58e47_4a3e83b0",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "In hpp file there is only the class declaration. We are initializing the member variables.",
      "parentUuid": "c4e3f698_abd87cd3",
      "range": {
        "startLine": 70,
        "startChar": 32,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d55f38a_7ade55dc",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2021-10-08T15:25:19Z",
      "side": 1,
      "message": "Can this be changed to a std::chrono value?",
      "range": {
        "startLine": 73,
        "startChar": 37,
        "endLine": 73,
        "endChar": 70
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98bc9313_ffab0210",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-09T07:22:15Z",
      "side": 1,
      "message": "sensorPollMs is of type int, that is why we are using static_cast\u003cint\u003e.\n\nAnd if you want me to change type of sensorPollMs, we can do that. \nAnd a better choice will be boost::posix_time::milliseconds. \nAs sensorPollMs is used in waitTimer.expires_from_now. \nBut can I push it as separate review? As I think it has nothing to do with the current patch.",
      "parentUuid": "0d55f38a_7ade55dc",
      "range": {
        "startLine": 73,
        "startChar": 37,
        "endLine": 73,
        "endChar": 70
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85225c27_238b3a31",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2021-10-11T14:22:12Z",
      "side": 1,
      "message": "I did not notice the sensorPollMs init was identical.\nLeave the code as is.\n\nI\u0027m not sure I understand your assertion though.\nstd::chrono::milliseconds is an int type.\nFrom BMCWeb there is this example code:\ncreateTimer-\u003eexpires_after(std::chrono::milliseconds(500));\n\nIt appears to my eye the code I flagged could be changed to std::chrono::milliseconds(pollRate) without causing any issues. I don\u0027t understand why there would be a need to involve boost.",
      "parentUuid": "98bc9313_ffab0210",
      "range": {
        "startLine": 73,
        "startChar": 37,
        "endLine": 73,
        "endChar": 70
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a8dd4fd_e2b6d5db",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-11T14:34:43Z",
      "side": 1,
      "message": "I said that looking at the usage of sensorPollMs\nwaitTimer.expires_from_now(boost::posix_time::milliseconds(sensorPollMs));\nin line 368",
      "parentUuid": "85225c27_238b3a31",
      "range": {
        "startLine": 73,
        "startChar": 37,
        "endLine": 73,
        "endChar": 70
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ab99dc7_3dfc917c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-17T18:31:58Z",
      "side": 1,
      "message": "\u003e sensorPollMs is of type int, that is why we are using static_cast\u003cint\u003e.\n\u003e \n\u003e And if you want me to change type of sensorPollMs, we can do that.\n\nI agree, using a std::chrono type would be better here;  Some of the reason this is the way it is is because of history;  Old asio timers couldn\u0027t take a std::chrono for a time value, so int milliseconds was an ok compromise.\n\n\u003e And a better choice will be boost::posix_time::milliseconds. \n\nPer the coding standard, please prefer the std implementations of this, so std::chrono::milliseconds.\n\n\u003e As sensorPollMs is used in waitTimer.expires_from_now. \n\u003e But can I push it as separate review? As I think it has nothing to do with the current patch.\n\nAgreed, that should be done in a different patchset.  This patch is making no changes to the types of this value, it\u0027s just in the diff because of how it\u0027s initialized.",
      "parentUuid": "98bc9313_ffab0210",
      "range": {
        "startLine": 73,
        "startChar": 37,
        "endLine": 73,
        "endChar": 70
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05494a7f_a1b5a7ed",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "This is common, can be moved outside if, else",
      "range": {
        "startLine": 186,
        "startChar": 12,
        "endLine": 186,
        "endChar": 59
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abec22c2_91c31ab7",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "05494a7f_a1b5a7ed",
      "range": {
        "startLine": 186,
        "startChar": 12,
        "endLine": 186,
        "endChar": 59
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "270577b8_b5af1f46",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "same as line 246",
      "range": {
        "startLine": 252,
        "startChar": 12,
        "endLine": 252,
        "endChar": 49
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09811f84_fb61094d",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "270577b8_b5af1f46",
      "range": {
        "startLine": 252,
        "startChar": 12,
        "endLine": 252,
        "endChar": 49
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1653239a_218fcfc8",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "Can we make this to return empty data so, this error handling @ line 419 can be used and does not have to be repeated here",
      "range": {
        "startLine": 400,
        "startChar": 25,
        "endLine": 401,
        "endChar": 72
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4182f1f5_0e42c7cc",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "1653239a_218fcfc8",
      "range": {
        "startLine": 400,
        "startChar": 25,
        "endLine": 401,
        "endChar": 72
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5ee65f9_18fdb183",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 426,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-07T23:32:11Z",
      "side": 1,
      "message": "this can be combined with line 419 to avoid repeating the below 3 lines",
      "range": {
        "startLine": 426,
        "startChar": 15,
        "endLine": 426,
        "endChar": 47
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37dc13eb_1e5d004e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 426,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-08T06:29:08Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "a5ee65f9_18fdb183",
      "range": {
        "startLine": 426,
        "startChar": 15,
        "endLine": 426,
        "endChar": 47
      },
      "revId": "2766306db8891240b1178b01f4e2e3b7a64fb0bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}