{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7dc67ec_6bc505b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-17T23:14:34Z",
      "side": 1,
      "message": "Have you thought about have different service instance for different host, i.e. have psusensor0.service, psusensor1.service etc? I am not suggesting it, rather just would like to know if you considered the option or not.",
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46501ac2_83587970",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-19T04:06:34Z",
      "side": 1,
      "message": "Hi Zhikui,\nNo, I didn\u0027t consider the option you pointed. Does it need multiple configs if there\u0027re different service instances?",
      "parentUuid": "a7dc67ec_6bc505b5",
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3873332_e03ecc25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-20T17:37:15Z",
      "side": 1,
      "message": "I assume each host has the same set of sensors. Some examples in openbmc projects here:\nhttps://github.com/openbmc/x86-power-control/blame/master/service_files/xyz.openbmc_project.Chassis.Control.Power%40.service\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-state-manager/+/51465",
      "parentUuid": "46501ac2_83587970",
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d33b4a_da2e0861",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 582,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-17T23:14:34Z",
      "side": 1,
      "message": "which slotId is this newState for?",
      "range": {
        "startLine": 582,
        "startChar": 8,
        "endLine": 582,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "037819f2_6f336b23",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 582,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-19T04:06:34Z",
      "side": 1,
      "message": "The newState is from the callback function of each slot. But I found HwmonTempSensor didn\u0027t get slotId in createSensors(), let me fix it and re-push patch.",
      "parentUuid": "36d33b4a_da2e0861",
      "range": {
        "startLine": 582,
        "startChar": 8,
        "endLine": 582,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0855848_b02ede8d",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 582,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-20T03:04:46Z",
      "side": 1,
      "message": "Fixed by patchset13.",
      "parentUuid": "037819f2_6f336b23",
      "range": {
        "startLine": 582,
        "startChar": 8,
        "endLine": 582,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a01f182_2f41844f",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-17T23:14:34Z",
      "side": 1,
      "message": "Why are these not replaced by vector below?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 71
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8ad197b_b1568bb5",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-19T04:06:34Z",
      "side": 1,
      "message": "I think it can be replaced, I\u0027ll modify it and push the patch. Thanks!",
      "parentUuid": "8a01f182_2f41844f",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 71
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0efa695a_065f0b60",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-20T03:04:46Z",
      "side": 1,
      "message": "Modified by patchset13.",
      "parentUuid": "f8ad197b_b1568bb5",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 71
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0a72bd4_6f289e50",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 431,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-17T23:14:34Z",
      "side": 1,
      "message": "need to test it is valid. Multiple places in this patch",
      "range": {
        "startLine": 431,
        "startChar": 12,
        "endLine": 431,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05f8f16a_f29d20c6",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 431,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-19T04:06:34Z",
      "side": 1,
      "message": "Do you have suggestion that we can test if it is valid?",
      "parentUuid": "e0a72bd4_6f289e50",
      "range": {
        "startLine": 431,
        "startChar": 12,
        "endLine": 431,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f8172d0_be50fbc4",
        "filename": "src/Utils.cpp",
        "patchSetId": 12
      },
      "lineNbr": 431,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-20T17:37:15Z",
      "side": 1,
      "message": "if (it !\u003d powerStatusOn.end())",
      "parentUuid": "05f8f16a_f29d20c6",
      "range": {
        "startLine": 431,
        "startChar": 12,
        "endLine": 431,
        "endChar": 16
      },
      "revId": "dfabd1f47c9e3e71954b65be763a6cfc530c86d1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}