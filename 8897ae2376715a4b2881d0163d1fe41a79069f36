{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "49989cf4_69afedfd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-27T21:09:10Z",
      "side": 1,
      "message": "on?",
      "range": {
        "startLine": 28,
        "startChar": 45,
        "endLine": 28,
        "endChar": 48
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae7c3466_66a1cfce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-10-01T16:00:40Z",
      "side": 1,
      "message": "Done, thanks for the notice.ðŸ˜Š",
      "parentUuid": "49989cf4_69afedfd",
      "range": {
        "startLine": 28,
        "startChar": 45,
        "endLine": 28,
        "endChar": 48
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a27ff860_3dbd02c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001195
      },
      "writtenOn": "2024-09-28T11:40:01Z",
      "side": 1,
      "message": "*Entity-Manager",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89185a35_43ff99cb",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 558,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-27T21:09:10Z",
      "side": 1,
      "message": "Why? I think you want to skip when the match has already been created for the slotNumber. But I don\u0027t think this logic is correct",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 558,
        "endChar": 0
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6ec18c2_35b6132f",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 558,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-30T03:01:03Z",
      "side": 1,
      "message": "I assume the match vector should be created in order, I think if the slotNumber is less than vector size, it means the corresponding element is created.",
      "parentUuid": "89185a35_43ff99cb",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 558,
        "endChar": 0
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "073fceb2_26780e2a",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 558,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-30T14:21:20Z",
      "side": 1,
      "message": "This is a poor assumption because we can have less slots populated than the slot you are checking for.  (what if only slot 8 has a device in it?)",
      "parentUuid": "d6ec18c2_35b6132f",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 558,
        "endChar": 0
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4328bdc2_b16eaa55",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 558,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-10-01T16:00:40Z",
      "side": 1,
      "message": "hi @Zhikui @Patrick,\nInstead of previous logic, checking the slotNumber is exist.\n```c++\n        auto matchIt \u003d findPowerMatchByPath(path, powerMatchVec);\n        if (matchIt !\u003d powerMatchVec.end())\n        {\n            continue;\n        }\n```",
      "parentUuid": "073fceb2_26780e2a",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 558,
        "endChar": 0
      },
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75cb721_6bd7e444",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 570,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-09-27T21:09:10Z",
      "side": 1,
      "message": "can we captured the slotId als, so you can add slotId as a parameter to hostStatusCallback",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d8c9ca9_d0b783b7",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 570,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-09-30T03:01:03Z",
      "side": 1,
      "message": "I don\u0027t think we need slotId in hostStatusCallback. Following is my opinion: we add a property slotId in sensor class so that we can get slotId directly.\n```c++\nstatic void powerStateChanged(\n    PowerState type, bool newState,\n    boost::container::flat_map\u003cstd::string, std::shared_ptr\u003cPSUSensor\u003e\u003e\u0026\n        sensors)\n{\n    if (newState)\n    {\n        for (auto\u0026 [path, sensor] : sensors)\n        {\n            if (sensor !\u003d nullptr \u0026\u0026 sensor-\u003ereadState \u003d\u003d type)\n            {\n                if ((type \u003d\u003d PowerState::chassisOn) \u0026\u0026\n                    (isChassisOn(sensor-\u003eslotId)))\n                {\n                    sensor-\u003eactivate();\n                }\n            }\n        }\n    }\n    else\n```\nIf there\u0027re any omissions, please provide your guidance. Let me know if there\u0027s anything needed to be modified, thanks!",
      "parentUuid": "f75cb721_6bd7e444",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "561c1b40_ad66cd77",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 570,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-10-08T06:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d8c9ca9_d0b783b7",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62e2e143_cc72f54c",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 570,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-10-08T18:39:26Z",
      "side": 1,
      "message": "Ideally \"newState\" here is for a host with a particular \"slotId\", there is no need to do isChassisOn(sensor-\u003eslotId), only need to find all sensors with the slotId.\n\nAnd your logic is not quite right: for exaample chassis1 powerState changed to be on while chassis2 powerState was on already, but did not change, activate should be called only for chassis1 sensor. But, if I read it correctly, your logic here will call sensor-\u003eactivate for both chassis1 and chassis2 sensors.",
      "parentUuid": "561c1b40_ad66cd77",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47b6cde3_c71dc1f8",
        "filename": "src/Utils.cpp",
        "patchSetId": 14
      },
      "lineNbr": 570,
      "author": {
        "id": 1000552
      },
      "writtenOn": "2024-10-09T02:33:38Z",
      "side": 1,
      "message": "Got it, if add slotId as a parameter to hostStatusCallback, then activate() will be called if slotId \u003d\u003d sensor-\u003eslotId. Did I understand correctly?\nBesides, there\u0027s a judgement in activate() to avoid repetition.\n```\nvoid PSUSensor::activate()\n{\n    if (isActive())\n    {\n        // Avoid activating an active sensor\n        return;\n    }\n\n    inputDev.open(path, boost::asio::random_access_file::read_only);\n    markAvailable(true);\n    setupRead();\n}\n```",
      "parentUuid": "62e2e143_cc72f54c",
      "revId": "8897ae2376715a4b2881d0163d1fe41a79069f36",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}