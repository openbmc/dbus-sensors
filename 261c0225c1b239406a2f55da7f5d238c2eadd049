{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7bd143bb_8c9da988",
        "filename": "include/Utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-12T00:58:27Z",
      "side": 1,
      "message": "I realize the old code didn\u0027t do this, but this code is wrong, and should be\n\n\nif (!std::isfinite(pollRate) || pollRate \u003c\u003d 0.0F)\n\nUp to you if you want to fix it in this patch.",
      "range": {
        "startLine": 204,
        "startChar": 24,
        "endLine": 204,
        "endChar": 28
      },
      "revId": "261c0225c1b239406a2f55da7f5d238c2eadd049",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21b9c1c4_f82a739c",
        "filename": "include/Utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-10-12T04:52:53Z",
      "side": 1,
      "message": "Sure, seems like as good a time as any...and might as well check for NaN as well I\u0027d think?",
      "parentUuid": "7bd143bb_8c9da988",
      "range": {
        "startLine": 204,
        "startChar": 24,
        "endLine": 204,
        "endChar": 28
      },
      "revId": "261c0225c1b239406a2f55da7f5d238c2eadd049",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd9c580a_63575587",
        "filename": "include/Utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-12T14:58:15Z",
      "side": 1,
      "message": "isfinite() checks for NaN",
      "parentUuid": "21b9c1c4_f82a739c",
      "range": {
        "startLine": 204,
        "startChar": 24,
        "endLine": 204,
        "endChar": 28
      },
      "revId": "261c0225c1b239406a2f55da7f5d238c2eadd049",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}