{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fd26f24e_2cdc6317",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-09T18:20:36Z",
      "side": 1,
      "message": "\"SMBPBI\" or \"SMB-PBI\"?  Can we avoid RanDOmcAse for an acronym?\n\nhttps://github.com/openbmc/docs/blob/d886ce89fe66c128b3ab492e530ad48fa0c1b4eb/cpp-style-and-conventions.md?plain\u003d1#L281",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f07cfd80_e9be5c44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T01:00:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd26f24e_2cdc6317",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15951f10_e4246ee5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-17T19:43:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f07cfd80_e9be5c44",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b037a964_6c9eef7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-22T19:35:38Z",
      "side": 1,
      "message": "SmbpbiEeprom is what we would use to match camel case with the other EM types.",
      "parentUuid": "15951f10_e4246ee5",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f078f254_65845906",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-22T20:08:29Z",
      "side": 1,
      "message": "Changed to `SmbpbiVirtualEeprom`",
      "parentUuid": "b037a964_6c9eef7f",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12eca93f_c09d19de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-09T18:20:36Z",
      "side": 1,
      "message": "(Seems like outstanding feedback is still unaddressed anyhow.  Didn\u0027t do a very exhaustive review of this revision.)",
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e478b4_b3d03d87",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-09T18:20:36Z",
      "side": 1,
      "message": "Why do we have this if we have SPDX?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03faf63b_46bcd10a",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-17T19:43:10Z",
      "side": 1,
      "message": "it\u0027s something that\u0027s part of our process.  If it matters we can change it, but might take some time.",
      "parentUuid": "89e478b4_b3d03d87",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12484b14_b378d923",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-17T22:44:00Z",
      "side": 1,
      "message": "Who\u0027s process?  Most files in the openbmc org don\u0027t have any copyright notice at all.",
      "parentUuid": "03faf63b_46bcd10a",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dd61f04_2709995c",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-17T23:14:08Z",
      "side": 1,
      "message": "sorry, should\u0027ve specified.  Nvidia process for new files in open source (we have internal CI checks).  Intel had a very similar requirement which resulted in much the same in other files in this repo:\n\nhttps://github.com/openbmc/dbus-sensors/blob/master/src/adc/ADCSensor.cpp#L1\n\n\nFWIW, I\u0027d rather openbmc just document that SPDX will be accepted and nothing else, but I don\u0027t think we\u0027re there in terms of consistency.",
      "parentUuid": "12484b14_b378d923",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e58e2247_0371ea7a",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T23:35:20Z",
      "side": 1,
      "message": "Changed to SPDX only",
      "parentUuid": "03faf63b_46bcd10a",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10a0a070_121f7791",
        "filename": "src/smbpbi/SmbpbiSensor.hpp",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-21T18:05:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e58e2247_0371ea7a",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 16,
        "endChar": 33
      },
      "revId": "f0b21f9a1c57785c38c04c731f203d462c35266e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}