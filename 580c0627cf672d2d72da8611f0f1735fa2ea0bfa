{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99ee2507_e946e66d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T04:08:52Z",
      "side": 1,
      "message": "Hi Potin, I think some more justification of the strategy is required. Otherwise I\u0027ve made a suggestion that feels cleaner to me.",
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dde5cc3_d61999df",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T04:08:52Z",
      "side": 1,
      "message": "Why is it necessary to deactivate the sensor first? Can we not do this:\n\n```\nif (sensor !\u003d nullptr \u0026\u0026 !sensor-\u003eisActive())\n{\n    sensor-\u003eactivate(sensorPathStr, i2cDev);\n}\n```",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "381bd1e5_833abaab",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-02-05T09:09:42Z",
      "side": 1,
      "message": "```\nvoid PSUSensor::activate(const std::string\u0026 newPath,\n                         const std::shared_ptr\u003cI2CDevice\u003e\u0026 newI2CDevice)\n{\n    path \u003d newPath;\n    i2cDevice \u003d newI2CDevice;\n    inputDev.open(path, boost::asio::random_access_file::read_only);\n    markAvailable(true);\n    setupRead();\n}\n```\nWhen calling activate(), it will pass \"newPath\" \u0026 \"newI2CDevice\" into sensor, although I don\u0027t see there two params are changed in my testing, but I think it better to do deactivate() before activate().",
      "parentUuid": "3dde5cc3_d61999df",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb76e890_84f9d2db",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T02:47:29Z",
      "side": 1,
      "message": "I\u0027m not convinced that the data should change across those two events. I\u0027ll defer to one of the other dbus-sensors maintainers.",
      "parentUuid": "381bd1e5_833abaab",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b42da75_950029bd",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T00:21:31Z",
      "side": 1,
      "message": "IMO, the core problem stems from the commit below going waaaaaay beyond what it should, destroying sensor objects on a power cycle:\n\nhttps://github.com/openbmc/dbus-sensors/commit/cafd72f6b9ebb6d3be02a8733489a7221d339e18\n\nThe sensor object itself, and the dbus entries should ALWAYS instantiate, regardless of the power state.  Turning the power on/off shouldn\u0027t create/destroy the sensor itself, it should only modify the underlying interfaces on the activate() call.  If we need an activate() call, it needs to be handled from within the sensor object, so that when we destroy it on a config change, it does the right thing.\n\n\nThis code needs to be\n\n// destroy the old sensor\nsensor \u003d nullptr;\n\n// Create the new sensor.\nsensors[sensorName] \u003d std::make_shared\u003cPSUSensor\u003e(...)\n\n\nThis line needs to go away, and become just \"sensor-\u003eactivate()\"\nhttps://github.com/openbmc/dbus-sensors/blame/16d6f17bec38b6c095dfb6bed224f17d941fb9b3/src/PSUSensorMain.cpp#L1191\n\nThen PSUSensor itself should be internally consistent that it can cancel outstanding operations and restart them (including if it require reiniting the device).",
      "parentUuid": "fb76e890_84f9d2db",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19bb7279_9c62dbab",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1001023
      },
      "writtenOn": "2024-02-08T02:07:36Z",
      "side": 1,
      "message": "Will changing the createSensors to an activate call fix the double activate call issue?  We\u0027re passing activateOnly as true, so what should be happening in createSensors is just another activate.  We could add a loop like what we\u0027re doing just below for deactivate, and check the readState for each sensor and decide if we want to activate it.  That said it\u0027s likely best/easiest to check for isActive() before trying to activate.",
      "parentUuid": "0b42da75_950029bd",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd488918_e3bc655a",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-02-09T01:43:14Z",
      "side": 1,
      "message": "I think the change should be in \nactivate()\n{\n  if (isActive()) return;\n  //active code below\n}",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 56
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4b54d8a_ee7a8198",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2024-02-16T02:56:39Z",
      "side": 1,
      "message": "If a sensor is already activated. Why deactivate and then activate it again?\n\nThe deactive() task should be powerStateChanged responsible for, right?\n\nThe powerStateChanged() callback will deactivate a sensor if it\u0027s not in their power state.\nhttps://github.com/openbmc/dbus-sensors/blob/master/src/PSUSensorMain.cpp#L1199",
      "parentUuid": "fd488918_e3bc655a",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 56
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada974e1_b6b7e5dd",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-02-23T21:32:11Z",
      "side": 1,
      "message": "@Yung-sheng can you explain your comment. My suggestion was to make activate() more  robust, i.e. do not crash if it is called more than once.",
      "parentUuid": "c4b54d8a_ee7a8198",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 56
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54851182_a8f65e2c",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-02-23T21:40:51Z",
      "side": 1,
      "message": "\u003e We\u0027re passing activateOnly as true, so what should be happening in createSensors is just another activate.\n\nIt may need to be refactored not to use createSensors() API to do activateOnly. But call sensor-\u003eactivate explicitly. \n\nActivate still need to be updated to prevent crash when it is called twice.",
      "parentUuid": "19bb7279_9c62dbab",
      "range": {
        "startLine": 926,
        "startChar": 0,
        "endLine": 930,
        "endChar": 24
      },
      "revId": "580c0627cf672d2d72da8611f0f1735fa2ea0bfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}