{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dcdf003a_38458fe0",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 9
      },
      "lineNbr": 167,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-19T21:06:50Z",
      "side": 1,
      "message": "How about:\n\n  auto operator\u003c\u003d\u003e(const SensorConfigKey\u0026) const \u003d default;",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 167,
        "endChar": 5
      },
      "revId": "1ad12c30ca80855126859432b49a8e1545b9ebb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee0987d8_636a23ed",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-19T21:06:50Z",
      "side": 1,
      "message": "This seems really fancy for what you\u0027re doing.  Is it necessary to use a reference_wrapper on all these or can you just use a copy?",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 175,
        "endChar": 61
      },
      "revId": "1ad12c30ca80855126859432b49a8e1545b9ebb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1556babc_0b041df2",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 9
      },
      "lineNbr": 201,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-19T21:06:50Z",
      "side": 1,
      "message": "Can you use std::holds_alternative / std::get in order to avoid having to deal with pointers?\n\nif (!std::holds_alternative\u003cuint64_t\u003e(busCfg-\u003esecond) || std::holds_alternative\u003cuint64_t\u003e(addrCfg-\u003esecond))\n{\n    ... continue;\n}\n\nSensorConfigKey key \u003d { std::get\u003cuint64_t\u003e(busCfg-\u003esecond), std::get\u003cuint64_t\u003e(addrCfg-\u003esecond) };",
      "range": {
        "startLine": 201,
        "startChar": 12,
        "endLine": 201,
        "endChar": 50
      },
      "revId": "1ad12c30ca80855126859432b49a8e1545b9ebb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cee73628_86d74cab",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 9
      },
      "lineNbr": 210,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-19T21:06:50Z",
      "side": 1,
      "message": "std::move on both of these?",
      "range": {
        "startLine": 210,
        "startChar": 52,
        "endLine": 210,
        "endChar": 60
      },
      "revId": "1ad12c30ca80855126859432b49a8e1545b9ebb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a04c3012_9cf7266e",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 9
      },
      "lineNbr": 304,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-19T20:41:30Z",
      "side": 1,
      "message": "With https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/50204 I removed the trace for when there is a tempX_input file in sysfs but no config for it, so I think you can just remove this trace too.",
      "revId": "1ad12c30ca80855126859432b49a8e1545b9ebb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}