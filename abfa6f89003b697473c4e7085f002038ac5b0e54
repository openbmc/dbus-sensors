{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f390e4_d0b47776",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-07T22:51:05Z",
      "side": 1,
      "message": "To clarify, your architecture is\n\nOpenBMC -\u003e IPMB -\u003e Other BMC -\u003e SMPro -\u003e Processor?",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80aa260b_f78ae84e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-07T23:04:28Z",
      "side": 1,
      "message": "The SMPro _is_ the processor. I\u0027m actually not sure the MMC should be referred to as another BMC, but it responds to some IPMI commands. I\u0027ll change it.\n\nOtherwise, that\u0027s correct.",
      "parentUuid": "d6f390e4_d0b47776",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48dd4c04_5452816b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-08T18:29:25Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "80aa260b_f78ae84e",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6483023_05541c2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-07T23:23:49Z",
      "side": 1,
      "message": "Also, I realize the process function doesn\u0027t currently have unit tests, but it would be good to start.  Would it be possible to write a couple unit tests for a positive and error number smpro might give?  It doesn\u0027t have to be extensive, but something is better than notching.",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c6f1f9b_8b88de49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T19:25:24Z",
      "side": 1,
      "message": "I agree that adding unit tests would be good, but I\u0027m not sure where to start given the size of `main()` in src/IpmbSensor.cpp and how much setup appears to be needed. It doesn\u0027t help that I\u0027m most familiar with C, and very unfamiliar with Boost and modern C++.\n\nIs there anybody who might be able to help?",
      "parentUuid": "d6483023_05541c2f",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2f67673_59278f7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T22:58:50Z",
      "side": 1,
      "message": "Also, it looks like src/IpmbSensor.cpp would need quite a bit of restructuring to be able to be unit tested - so if it\u0027s okay I\u0027d prefer to leave that to someone who\u0027s more familiar with dbus-sensors.",
      "parentUuid": "3c6f1f9b_8b88de49",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5409b75_3bec7057",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-30T23:46:28Z",
      "side": 1,
      "message": "processReading() looks like it only takes arguments that would be representative in a unit test.  I\u0027m not following why it would require significant restructuring?\n\n\u003e so if it\u0027s okay I\u0027d prefer to leave that to someone who\u0027s more familiar with dbus-sensors.\n\nWith respect, nobody else likely has an smpro system, so it\u0027s unlikely they could craft a unit test that isn\u0027t just reverse engineering your code, and writing unit tests so the code passes isn\u0027t a great strategy.  Ideally we\u0027d be pulling values that you actually saw in hardware and put it into the unit test.\n\nPlease at least make an attempt.  If you need help, there\u0027s lots of help available.",
      "parentUuid": "c2f67673_59278f7c",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7346e477_de15a95d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T23:55:08Z",
      "side": 1,
      "message": "Good point.\nI\u0027ve been trying to instantiate an instance of IpmbSensor, but that\u0027s the wrong approach. It\u0027s been far too long since I did unit testing - so it\u0027ll be a good exercise to remind myself how it works.",
      "parentUuid": "c5409b75_3bec7057",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56b69329_693b5724",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-02-10T23:07:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7346e477_de15a95d",
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395d0e8a_c02ab4e7",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-07T22:51:05Z",
      "side": 1,
      "message": "Can we get more clarity on this?  Are values of 127 or 255 special in the smpro spec?  If so, we should handle them explicitly.  This makes me think that smpro is setting an \"error\" bit that we should be checking (bit 7 or bit8 on byte 0 it looks like), rather than comparing explicit values.",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 336,
        "endChar": 37
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3123fb5e_1e64122c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-07T23:04:28Z",
      "side": 1,
      "message": "I\u0027ll check with my colleagues. The BMC Interface Specification at https://amperecomputing.com/customer-connect/products/altra-family-software---firmware doesn\u0027t mention an error bit, but hopefully that\u0027s what\u0027s happening.",
      "parentUuid": "395d0e8a_c02ab4e7",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 336,
        "endChar": 37
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5ad012_861191a3",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-08T18:52:17Z",
      "side": 1,
      "message": "Reading the spec, it looks like the value is signed?  \n\n\"9-bit temperature in °C, ranging from -255 to +256.\"\n\nLooking at your code, it doesn\u0027t handle that signing correctly.  that might be part of the issue?  The spec doesn\u0027t specify if it\u0027s twos complement or something else for negative values.  We can probably assume twos complement for the moment, as I think that\u0027s what lm75s do, and this spec was based on lm75.",
      "parentUuid": "3123fb5e_1e64122c",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 336,
        "endChar": 37
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a4fd327_dab61c63",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-08T18:53:57Z",
      "side": 1,
      "message": "Looks like your implementation also missed this section:\n\n\"• It is not present (such as a missing DIMM) or if the sensor is not supported by the (replaceable) device (such as lack of\nsupport by the DIMM type for temperature reading). Reading this sensor returns the value 0xFFFF.\"\n\n\n...\n\n\"If the sensor is supported, 0xFFFF value of the corresponding sensor register indicates whether the\nvalue is valid (0) or invalid (1).\"",
      "parentUuid": "9d5ad012_861191a3",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 336,
        "endChar": 37
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f8c70f9_37252484",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T22:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a4fd327_dab61c63",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 336,
        "endChar": 37
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f236ab_d26ac358",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 342,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-07T22:51:05Z",
      "side": 1,
      "message": "Please remove.  There\u0027s nowhere else that tries to identify a \"bogus\" value and log it.  Also, this will spam logs if that value ever occurs.",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 342,
        "endChar": 13
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8ec0f61_cfaefbf5",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 342,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-07T23:04:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "17f236ab_d26ac358",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 342,
        "endChar": 13
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c76a872_bfcf7580",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-07T22:51:05Z",
      "side": 1,
      "message": "Are you certain this isn\u0027t signed 16 bit LSB first?  Usually these kinds of APIs do have to handle negative numbers.",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "966890ef_749506a0",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-07T23:04:28Z",
      "side": 1,
      "message": "It\u0027s listed in the specification as \"15-bit voltage in mV\".",
      "parentUuid": "9c76a872_bfcf7580",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d45fd68d_7fb5cecc",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T22:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "966890ef_749506a0",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1d686db_e8546c5a",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-30T23:46:28Z",
      "side": 1,
      "message": "Then why is it being read out in volts then?  I would expect handing the millivolt to volt conversion in this code?\n\nACK on the fact that it is truly unsigned.",
      "parentUuid": "d45fd68d_7fb5cecc",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca3c7e0a_2ce04e85",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-01-30T23:55:08Z",
      "side": 1,
      "message": "I\u0027m scaling it in the entity-manager, which I now realize is the wrong way to do it.",
      "parentUuid": "b1d686db_e8546c5a",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c887688_a825fdd6",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-31T00:44:23Z",
      "side": 1,
      "message": "Arguably IPMBDevice shoudn\u0027t even support scaling (I\u0027m a little surprised it does).  We have scaling parameters in all the protocols that it uses.  There should be no need to explicitly scale anything in an EM config.",
      "parentUuid": "ca3c7e0a_2ce04e85",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60dddb24_a99c9d36",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 412,
      "author": {
        "id": 1001967
      },
      "writtenOn": "2024-02-10T23:07:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c887688_a825fdd6",
      "range": {
        "startLine": 412,
        "startChar": 29,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "abfa6f89003b697473c4e7085f002038ac5b0e54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}