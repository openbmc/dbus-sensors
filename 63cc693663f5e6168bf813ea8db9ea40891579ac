{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fbaeaaa3_a09cfa04",
        "filename": "src/FanMain.cpp",
        "patchSetId": 18
      },
      "lineNbr": 398,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "We want to catch all exceptions here?",
      "range": {
        "startLine": 398,
        "startChar": 31,
        "endLine": 398,
        "endChar": 54
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f61f066c_465a7d0f",
        "filename": "src/FanMain.cpp",
        "patchSetId": 18
      },
      "lineNbr": 398,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-08-15T08:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbaeaaa3_a09cfa04",
      "range": {
        "startLine": 398,
        "startChar": 31,
        "endLine": 398,
        "endChar": 54
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b5a81da_1d0e98b1",
        "filename": "src/FanMain.cpp",
        "patchSetId": 18
      },
      "lineNbr": 401,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "Please don\u0027t log this.  THis is expected on systems that need to poll.",
      "range": {
        "startLine": 400,
        "startChar": 0,
        "endLine": 401,
        "endChar": 46
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d82f610b_9507f1a6",
        "filename": "src/FanMain.cpp",
        "patchSetId": 18
      },
      "lineNbr": 401,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-08-15T08:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b5a81da_1d0e98b1",
      "range": {
        "startLine": 400,
        "startChar": 0,
        "endLine": 401,
        "endChar": 46
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6449b25_c753ebec",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "Please don\u0027t make this a global.\n\nhttps://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Ri-global\n\nPlease find a way to structure your code such that global variables like this are not required.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 61
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3228af8a_39f76cc3",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 42,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-11-21T23:34:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6449b25_c753ebec",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 61
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db5d07c_4ef6ab44",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "Why is this anything other than 1?  Are the lines not debounced?",
      "range": {
        "startLine": 43,
        "startChar": 21,
        "endLine": 43,
        "endChar": 37
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e6ee39_3f0d47dd",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 43,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-08-15T08:12:40Z",
      "side": 1,
      "message": "The original intention of adding this is to reduce the impact of frequent manual  plugging and unplugging in a short period of time.",
      "parentUuid": "7db5d07c_4ef6ab44",
      "range": {
        "startLine": 43,
        "startChar": 21,
        "endLine": 43,
        "endChar": 37
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10cb7f6b_4166bbaa",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-15T14:22:59Z",
      "side": 1,
      "message": "Shouldn\u0027t the delay time cover that?",
      "parentUuid": "66e6ee39_3f0d47dd",
      "range": {
        "startLine": 43,
        "startChar": 21,
        "endLine": 43,
        "endChar": 37
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f2a857f_6c9de2e3",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 43,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-11-21T23:34:48Z",
      "side": 1,
      "message": "I agree",
      "parentUuid": "10cb7f6b_4166bbaa",
      "range": {
        "startLine": 43,
        "startChar": 21,
        "endLine": 43,
        "endChar": 37
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6af68603_d39d5861",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 301,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "this is the equivalent of find(), but is duplicating the lookup.",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 301,
        "endChar": 46
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f1c3979_da4ab2cc",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 301,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-08-15T08:12:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6af68603_d39d5861",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 301,
        "endChar": 46
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0eef2a_d6c7e70a",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 322,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-01T14:25:29Z",
      "side": 1,
      "message": "?  If the GPIO fails to read, the fan isn\u0027t inserted?  That doesn\u0027t seem right.",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 322,
        "endChar": 28
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e6a3b74_34fa8082",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 322,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-08-15T08:12:40Z",
      "side": 1,
      "message": "The default property is true. Can\u0027t keep the default property doing nothing, right? At least modify its status to let users know that this fan is having problems.",
      "parentUuid": "ed0eef2a_d6c7e70a",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 322,
        "endChar": 28
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2525420_c30ef49a",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 322,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-15T14:22:59Z",
      "side": 1,
      "message": "This isn\u0027t modifying the status though, it\u0027s saying the fan got unplugged.  I would expect this to be a shutdown.",
      "parentUuid": "6e6a3b74_34fa8082",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 322,
        "endChar": 28
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac4ed7c_48747bb0",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 322,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-11-21T23:34:48Z",
      "side": 1,
      "message": "This is the same behavior as the original event driven code. The event driven code will not call monitorPresence() in that state.  This polling code will continue calling monitorPresence(), so it could potentially recover.\nNot sure what you mean by \"expect this to be a shutdown\". If a fan is not present, that would not not necessarily mean the system is not safe. Some fans could be redundant and/or other fans could compensate.\n(presence sensors are optional according to FanMain.cpp)",
      "parentUuid": "f2525420_c30ef49a",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 322,
        "endChar": 28
      },
      "revId": "63cc693663f5e6168bf813ea8db9ea40891579ac",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}