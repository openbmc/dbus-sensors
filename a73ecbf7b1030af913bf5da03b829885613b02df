{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c6329ed6_1cc62333",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "What do you mean by the \"MuxChannel interface\"? There\u0027s no such type in the codebase. Are you referring to an EM property?\n\nIf so, can you provide a link to the EM schema or change introducing it in the commit message so it is clear what you\u0027re discussing?",
      "range": {
        "startLine": 10,
        "startChar": 50,
        "endLine": 10,
        "endChar": 70
      },
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a5d119_fb1b1ebf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "Please avoid describing the implementation details in the commit message. Prefer to comment the code instead, if that\u0027s necessary.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e8170c_2639b00d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "What sensors plan on this? Can you unpack in the commit message when this alternative is necessary?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 27
      },
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d465f26_03694809",
        "filename": "src/Utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 890,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2024-10-27T04:59:25Z",
      "side": 1,
      "message": "Because EM has a replacement of spaces in \"Name\" value (https://github.com/openbmc/entity-manager/blob/2826f40187e4090acd761b59bc4c6f0036b7be8c/src/overlay.cpp#L241), mux name in the symlink can be different from the config. I think you should do it too here to ensure consistency, as users can use space-separated strings in \"Name\" of a mux, and \"MuxName\".",
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec52f2f0_55c43e50",
        "filename": "src/Utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2024-10-27T04:59:25Z",
      "side": 1,
      "message": "I think this should be predefined as constexpr or something.",
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b37ec5_969ca428",
        "filename": "src/Utils.hpp",
        "patchSetId": 3
      },
      "lineNbr": 413,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "Why `uint64_t`? Seems excessive?",
      "range": {
        "startLine": 413,
        "startChar": 64,
        "endLine": 413,
        "endChar": 77
      },
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "466608ab_430eaa9d",
        "filename": "src/Utils.hpp",
        "patchSetId": 3
      },
      "lineNbr": 413,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "This has no documentation or tests. Can you please add both?",
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "300f7ffc_dcab6ca3",
        "filename": "src/Utils.hpp",
        "patchSetId": 3
      },
      "lineNbr": 413,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T00:07:09Z",
      "side": 1,
      "message": "My preference is that we don\u0027t add yet more free functions to Utils.h. It\u0027s not a maintainable path forward.\n\nRather, keeping things that are together together via a coherent object model makes this all much more comprehensible, and allows us to encode relationships between concepts in the type system. I\u0027d much prefer we create a `I2CMux` object that has a `const` `bus()` method that returns an `I2CBus` object, from which you can retrieve the bus index (... because it\u0027s a property of a Linux I2C bus ...).",
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e8694d2_b08ef1c4",
        "filename": "src/Utils.hpp",
        "patchSetId": 3
      },
      "lineNbr": 413,
      "author": {
        "id": 1001538
      },
      "writtenOn": "2024-11-05T17:08:54Z",
      "side": 1,
      "message": "`uint64_t` was used since entity-manager and most of the sensors in dbus-sensors uses `uint64_t` when it comes to describing the bus. However, looking into the kernel, it looks like `int` is used:\nhttps://github.com/torvalds/linux/blob/6c52d4da1c742cd01a797a4d0a2d3c5a60dc9bfe/drivers/i2c/i2c-core-base.c#L1644\n\n`int` could be used instead, but perhaps a separate CL to change all the variables that describe bus in dbus-sensors and entity-manager to `int`.",
      "parentUuid": "a9b37ec5_969ca428",
      "range": {
        "startLine": 413,
        "startChar": 64,
        "endLine": 413,
        "endChar": 77
      },
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af4bc319_bcf352ba",
        "filename": "src/Utils.hpp",
        "patchSetId": 3
      },
      "lineNbr": 413,
      "author": {
        "id": 1001538
      },
      "writtenOn": "2024-11-05T17:08:54Z",
      "side": 1,
      "message": "What if I moved it into DeviceMgmt.cpp as it seems more fitting to have a function that retrieves the bus in that file. I don\u0027t think we need to create an `I2CMux` and `I2CBus` object for a function, but perhaps I don\u0027t see what you are trying to illustrate.",
      "parentUuid": "300f7ffc_dcab6ca3",
      "revId": "a73ecbf7b1030af913bf5da03b829885613b02df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}