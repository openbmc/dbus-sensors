{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e32db08_abb5c2d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-21T21:05:04Z",
      "side": 1,
      "message": "Lei indicated that (at least initially, haven\u0027t heard further) this fixed the problem he\u0027d been hitting.  It\u0027s still not exactly a thing of beauty, but perhaps tolerable as is?",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5381202_64bef2e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-21T22:52:33Z",
      "side": 1,
      "message": "Yeah, my immediate feeling is that this is clunky and points to the code having the wrong shape more broadly. Given master is broken we should probably submit it, but I\u0027d prefer this doesn\u0027t stick around for too long. Can you simmer thoughts in the background about how we might refactor to get rid of it?",
      "parentUuid": "6e32db08_abb5c2d4",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be521f8e_99b225c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-22T00:11:22Z",
      "side": 1,
      "message": "Yeah, I think I\u0027d tend to agree on the \"wrong shape\" thing, but having had similar thoughts while staring at this code over the past few weeks or so and not seeing any obvious great options for small incremental improvements to make I\u0027m not sure offhand...a wholesale reimplementation is kinda tempting, but that would of course drag in all the problems of rewrites (though it would provide an opportunity for switching to a more appealing language...).\n\nThere are a couple recurring, pervasive issues with the codebase as a whole that I keep stumbling over and not really feeling like I have time to dig in and try to address properly (and I fear the potential depth of the rabbit holes)...\n\nOne is the lack of proper purpose-built data structures, leading to everything ending up internally represented with nested `{string: {string: variant}}` maps and such, which (a) throws away a lot of advantages of static typing, and (b) makes the code really awkward and tedious to read/write (feels like writing python with an extra order of magnitude of boilerplate overhead tacked on because it\u0027s manually reimplementing a lot of stuff the interpreter would be doing automatically in a dynamically-typed language).  Readability suffers a lot; I often end up spending inordinate amounts of time tracking down just _what_ a given string somewhere really represents (dbus path?  sysfs path?  sensor name?  dbus interface name?  who knows?).\n\nAnother is the amount of duplication between sensor daemons.  A lot of them have chunks of code that are...say between 50% and 95% percent duplicated with another daemon (e.g. the various createSensors() functions).  Comparing them often turns up small discrepancies that make it hard to see what commonality could potentially be extracted and deduplicated; sometimes it seems like the differences might not actually be semantically significant, but it\u0027s often hard to tell (especially with the general code-readability challenges).\n\nGranted, neither of those are all that directly related to the problem at hand here, but it sorta seems like an attempt to seriously address any one of them would likely end up tangled in the others...",
      "parentUuid": "b5381202_64bef2e7",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfc3fa81_1014ebeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-22T03:14:02Z",
      "side": 1,
      "message": "\u003e Another is the amount of duplication between sensor daemons.\n\nI agree. Although there are common code for threshold/sensors/utils, there are still quite a log of duplicated/similar code in different deaemons.\nAnd some different daemons support different configs from json, that\u0027s a another problem.\n\nHopefully these could be addressed in future (if we have better unit test cases).",
      "parentUuid": "be521f8e_99b225c9",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a88d8a23_6b3afc48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-22T03:40:16Z",
      "side": 1,
      "message": "@zev can you raise those points on the mailing list? I think they deserve visibility outside of this patch - I agree with everything there.\n\n@lei can you give this a CR+1 / V+1 if you\u0027ve experiemented with it?",
      "parentUuid": "bfc3fa81_1014ebeb",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3612ee07_3788f095",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-22T03:14:02Z",
      "side": 1,
      "message": "Probably use `auto devices \u003d xxx` here.",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6b596bb_5d257469",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-22T03:14:02Z",
      "side": 1,
      "message": "Better to add a comment here to explain the case for `continue`.",
      "revId": "5ec765de5edf136c135c558a9e4e0f451f6b312d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}