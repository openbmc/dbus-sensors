{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9d8fc215_cbe0559e",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-12T22:10:19Z",
      "side": 1,
      "message": "Why is all this boilerplate being needed in the meson.build now, rather than in the wrap file, \"better\"?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b7980e0_51e5d8eb",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-13T00:04:19Z",
      "side": 1,
      "message": "Because it uses the newer cmake build instead of the B2 build, which has some nice properties in that only the things used are compiled, instead of compiling all of boost.  Functionally this means that builds start faster.",
      "parentUuid": "9d8fc215_cbe0559e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed6f997a_79dd34a5",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-13T00:07:40Z",
      "side": 1,
      "message": "it should be noted that boost forced us this direction for a couple of libraries that they no longer support the header only versions of as of boost 1.85 (might not effect the 2 libraries here, but it does seem to be the trend).  I had a discussion with the boost maintainers after they did it, and basically got told that the cmake build is the \"right\" way and that the header only build is never coming back.",
      "parentUuid": "3b7980e0_51e5d8eb",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8f264bc_b10bbac0",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-13T02:58:52Z",
      "side": 1,
      "message": "Would we be able to put this boilerplate in a patches file under subprojects/packagefiles/boost/meson.build then?  That\u0027s how we use to do it (and in fact you also would need to delete that file if you don\u0027t plan on doing it that way with this commit).  It seems like putting it under a meson.build stub separately allows us to replicate this to other projects much easier.",
      "parentUuid": "ed6f997a_79dd34a5",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d25a33e_4aea05e6",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T14:52:27Z",
      "side": 1,
      "message": "I tried at one point, and couldn\u0027t make that work.  From what I remember (it was a while ago) it was because the cmake build returns multiple dependencies and the built-in meson finder returns one for the whole package.\n\nIt\u0027s likely possible to combine them, but I must\u0027ve been missing something in the syntax.  I agree packagefiles is probably the right way to do this if someone can make it work.  I was probably just missing something trivial in the syntax.",
      "parentUuid": "a8f264bc_b10bbac0",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ca5c883_b52e7817",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-15T15:26:14Z",
      "side": 1,
      "message": "\u003e I tried at one point, and couldn\u0027t make that work. From what I remember (it was a while ago) it was because the cmake build returns multiple dependencies and the built-in meson finder returns one for the whole package.\n\nThe trick there should be the `[provide]` section in the wrap file.  sdbusplus also provides multiple dependencies and the extra ones are elevated through the `[provide]`.  See `phosphor-dbus-interface/subprojects/sdbusplus.wrap` as an example.",
      "parentUuid": "1d25a33e_4aea05e6",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e532aba7_4432327a",
        "filename": "meson.build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T15:31:21Z",
      "side": 1,
      "message": "Yep, I\u0027m aware of the provide section, but it looks like sdbusplus is also a single dependency object that gets returned:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/phosphor-dbus-interfaces/+/69292c29dfe991512141f5063b4d3ed8679f567f/subprojects/sdbusplus.wrap\n\nI\u0027ll take a deeper look again today.  This was all months ago and I threw a couple of hours at it and gave up.  I can give it another shot.",
      "parentUuid": "5ca5c883_b52e7817",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "23199402b3cee659e244541d2f8ec4bbf23b0b0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}