{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4b1e568f_03f08220",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-06-22T09:51:38Z",
      "side": 1,
      "message": "Hi Ed / Zhikui Ren,\n\nCould you please provide your suggestions on this patchset.\n\nThanks",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "759adbae_ff42531a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-06-30T07:01:57Z",
      "side": 1,
      "message": "Hi Ed / Zhikui Ren,\n\nCould you please provide your suggestions on this patchset.\n\nThanks",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "628d567e_d2133376",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1001292
      },
      "writtenOn": "2022-07-06T19:52:50Z",
      "side": 1,
      "message": "Does patchset 20 resolve the remaining comments from Ed and Zhikui?  It is difficult to determine the current state of this patch set.",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27963081_f1d30adf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Yes, now working on the recent comments gave by Ed and Zhikui.",
      "parentUuid": "628d567e_d2133376",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b80ac42d_43d5a154",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "This struct looks like it had endian issues, that you\u0027ve resolved by just declaring any non-trivial structure as std::array.  We shouldn\u0027t mix parsing types.  Either:\n\n1. This struct needs to use pragma packed, and handle endian issues properly.\n2. We shouldn\u0027t rely on reinterpret_cast.  from cppcoreguidelines: \"Donâ€™t use reinterpret_cast; A strict version of Avoid casts and prefer named casts.\"\n\nas a general rule, and because we need to parse this structure into something this code can reasonably process anyway, I suspect this structure needs to just use the base, typesafe versions.",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e99fee5_c96d3a24",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack\n\nAs a named cast, can I use static_cast instead of reinterpret_cast ?",
      "parentUuid": "b80ac42d_43d5a154",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875b441e_8d9a8a3b",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-14T15:03:04Z",
      "side": 1,
      "message": "Static cast would not solve the endian issues.  If it were me, I would make this struct use the c++ types, and do the unpacking in code.",
      "parentUuid": "3e99fee5_c96d3a24",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d962685_eec6a790",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "I have used std::bit_cast\u003c\u003e for the structure and it is pragma packed.",
      "parentUuid": "875b441e_8d9a8a3b",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d23c6c7e_c1f39011",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T14:38:17Z",
      "side": 1,
      "message": "I don\u0027t think std::bit_cast works around endian issues.",
      "parentUuid": "6d962685_eec6a790",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f60e607_d8d9b00a",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 37,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-27T08:36:23Z",
      "side": 1,
      "message": "Removed structure and assigned values from vector to variables directly.",
      "parentUuid": "d23c6c7e_c1f39011",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0b4cf01_c4690d55",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "A number of these are  only used in one place.  Please inline.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 41
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9ef86b6_0c5ee891",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b0b4cf01_c4690d55",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 41
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c39defe_f1cd82d7",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9ef86b6_0c5ee891",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 41
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2af1d707_26bee8e0",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "These are only used in one place.  Please inline to make the code more clear.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 112,
        "endChar": 31
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3f96cf3_5f162317",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2af1d707_26bee8e0",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 112,
        "endChar": 31
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91523a46_32164b04",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3f96cf3_5f162317",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 112,
        "endChar": 31
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f70e074c_c318322e",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:02:39Z",
      "side": 1,
      "message": "Each of these things is per-sdr.  This will have bugs if more than one IpmiSdrDevice is instantiated.",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb0bc23_b7175032",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-09T18:26:46Z",
      "side": 1,
      "message": "+1\nMultiple devices are expected, here\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/52160/21/src/IpmbSensor.cpp#59",
      "parentUuid": "f70e074c_c318322e",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72a85573_2eaa25ab",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "To avoid the issue, can this be declared in IpmbSDRSensor.cpp file ?",
      "parentUuid": "7eb0bc23_b7175032",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312e5ce1_8a664408",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-14T15:03:04Z",
      "side": 1,
      "message": "No, that does not resolve the bug, as a global has the same problem (state is shared between controller).  These need to be made non-static.",
      "parentUuid": "72a85573_2eaa25ab",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52ef4a15_597302c6",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done\n\nThe below maps are used in IpmbSensor class, therefore, declared in IpmbSDRSensor.hpp file as non-static.\n\n    inline std::map\u003cint, std::vector\u003cSensorInfo\u003e\u003e sensorRecord;\n    inline std::map\u003cint, std::map\u003cuint8_t, SensorValConversion\u003e\u003e\n        sensorValRecord;",
      "parentUuid": "312e5ce1_8a664408",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "301faba6_5f8acbb2",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T14:38:17Z",
      "side": 1,
      "message": "Just making them a global (if I\u0027m understanding properly what you did) still has the same problem.",
      "parentUuid": "52ef4a15_597302c6",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "963dc22d_9a187428",
        "filename": "include/IpmbSDRSensor.hpp",
        "patchSetId": 20
      },
      "lineNbr": 120,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-08-10T10:32:27Z",
      "side": 1,
      "message": "sensorRecord Map is used in createSensor function to populate the sensor dbus path, therefore, it is declared globally.\nIf we declare the map inside IpmbSDRDevice class, then we need to access the map using static in createSensors function.\n\nBefore, it was used in the IpmbSDRDevice member function to read the entity objects separately for SDR and calling the IpmbSensor constructor. Since the code is somewhat similar to existing createSensors function, you have suggested to merge the code with existing createSensors function.\n\nTherefore, to access the map which is in non-class member function, I have declared the map globally.\n\n Could you please provide your suggestion on this global declaration ?",
      "parentUuid": "301faba6_5f8acbb2",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d21f3d3_bfc9cecc",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "this same variable is declared in two places with the same name.  I suspect it can just be inlined into IpmbSDRDevice.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76a67c36_3b2afadf",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 7,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3d21f3d3_bfc9cecc",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1d470f8_4cdcabbb",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 7,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76a67c36_3b2afadf",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a14fa90b_73cedb8f",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "You\u0027\u0027re shifting to the right by a variable called \"leftShift\" I suspect we need some naming reconciliation here.",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "027f50db_72beb495",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 14,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a14fa90b_73cedb8f",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc1a4a60_f6c88d70",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 14,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "027f50db_72beb495",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a56f8e51_d4369e80",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 46,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "?  You\u0027re using bind_front, then immediately calling the callback?  Just call it directly?\n\nAlso, in the way you\u0027ve abstracted this, you\u0027re completely ignoring error responses here, and continuing even if the call has returned an error",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e826baac_a15ecfc7",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 46,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-09T18:26:46Z",
      "side": 1,
      "message": "+1\nMake validateStatus return pass/fail, If it failed, not continue",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb54a993_67adeb09",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 46,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e826baac_a15ecfc7",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17a755a4_a5aff2bb",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 46,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a56f8e51_d4369e80",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f2a4f13_2ba26d1f",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 46,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb54a993_67adeb09",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ad44ffe_e8c4399a",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "unintentional copy.",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d5fa6e5_de1e5dcc",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ad44ffe_e8c4399a",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce4852c5_04099c29",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d5fa6e5_de1e5dcc",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a2e7274_9ed35e94",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 82,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Same thing here.  This code is likely not doing what you think it\u0027s doing.",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "229a06aa_d3ca658b",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 82,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a2e7274_9ed35e94",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a82614c_b6498239",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 82,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "229a06aa_d3ca658b",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbb6d152_eefb2e27",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "another copy.",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2af9e031_2e6969c5",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 84,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dbb6d152_eefb2e27",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b4d0f55_c0b035d8",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 84,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2af9e031_2e6969c5",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f719a83_35c665ac",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Please declare variables like this in the scope they\u0027re used, in this case, on line 127  There\u0027s no need to declare it here, then copy it into the lambda.",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 40
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65ee7ca0_750a30bd",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 107,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7f719a83_35c665ac",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 40
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2c60a6e_d6654c3b",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 107,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65ee7ca0_750a30bd",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 40
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33be4d49_644426aa",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 149,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Talked about earlier in this patch, sdrData cannot be static.  I suspect you need more specific data structures.",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 149,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90722ad8_92287906",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 149,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T04:01:55Z",
      "side": 1,
      "message": "Nevmind.  I was looking at the wrong variable.",
      "parentUuid": "33be4d49_644426aa",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 149,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c284c3c_138a6742",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 150,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "I have no idea what this check is doing.  Can you make it more clear?  cntType is 3.\n\n\nI suspect what you should be doing is checking to see if sdrData.size() \u003e sizeof(type 1 sdr)\n\nYou shouldn\u0027t be measuring loops this way.",
      "range": {
        "startLine": 150,
        "startChar": 68,
        "endLine": 150,
        "endChar": 74
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa9c9905_b6d1ca0b",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 150,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6c284c3c_138a6742",
      "range": {
        "startLine": 150,
        "startChar": 68,
        "endLine": 150,
        "endChar": 74
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "007fdafd_0a3447e6",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 150,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done.\nChanged the condition to check based on SDR data size.",
      "parentUuid": "aa9c9905_b6d1ca0b",
      "range": {
        "startLine": 150,
        "startChar": 68,
        "endLine": 150,
        "endChar": 74
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1293214_89bb9e82",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 174,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "I\u0027ve read the above code block several times over the course of a number of patches.  I don\u0027t understand what it\u0027s doing, can you add some comments to make it more clear.  So far as I can tell, the first branch is checking if we\u0027re in the middle of a record, and adds 1 to iCnt.  This doesn\u0027t track for me, as it assumes that you will only ever get type 1 records, and you can rely on count.  Shouldn\u0027t this rely on bytes received?",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94cf6673_4228f7fe",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 174,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-09T18:26:46Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c1293214_89bb9e82",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ff19ede_da72f076",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 174,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack\n\nI will add comments and change this func based on the data received.",
      "parentUuid": "94cf6673_4228f7fe",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "866bc908_31dd1818",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 174,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ff19ede_da72f076",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28e8106d_5a884301",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 180,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Isn\u0027t this check incorrect?  SDRs don\u0027t have one length, isn\u0027t it variable based on the string name.  We should be checking this against the minimum size.",
      "range": {
        "startLine": 180,
        "startChar": 38,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "479c49fe_02e692b6",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 180,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "28e8106d_5a884301",
      "range": {
        "startLine": 180,
        "startChar": 38,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb7e31b8_4ffd49b1",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 180,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "479c49fe_02e692b6",
      "range": {
        "startLine": 180,
        "startChar": 38,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be584efe_a8b52057",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 183,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "This is not an error.  IPMB hosts are allowed in the spec to have non type1 records.",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 26
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b08f9db_4f28ca7a",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 183,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "be584efe_a8b52057",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 26
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0ec46a7_349ab28d",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 183,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b08f9db_4f28ca7a",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 26
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b73f92_7938b0ef",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 187,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "See prior comment this has endian issues that are unaccounted for.",
      "range": {
        "startLine": 187,
        "startChar": 4,
        "endLine": 187,
        "endChar": 75
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d77cc17e_1903df24",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 187,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "As a named cast, can I use static_cast instead of reinterpret_cast ?",
      "parentUuid": "27b73f92_7938b0ef",
      "range": {
        "startLine": 187,
        "startChar": 4,
        "endLine": 187,
        "endChar": 75
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f48412a_6b55b1cc",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 187,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "I have used std::bit_cast\u003c\u003e and pragma packed the structure.",
      "parentUuid": "d77cc17e_1903df24",
      "range": {
        "startLine": 187,
        "startChar": 4,
        "endLine": 187,
        "endChar": 75
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a5a5957_916a3220",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 190,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "nit, please call this sdrType.  \"sensor type\" is a different field.",
      "range": {
        "startLine": 190,
        "startChar": 12,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09dd7847_03c2a73e",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 190,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5a5a5957_916a3220",
      "range": {
        "startLine": 190,
        "startChar": 12,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09d38e00_42986dcf",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 190,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09dd7847_03c2a73e",
      "range": {
        "startLine": 190,
        "startChar": 12,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d550e986_91c15edd",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 213,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Please simplify this.  Do not copy bytes one at a time into a vector, then copy them one at a time into a string.  Just copy the span directly out.",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 213,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5050ff95_66d9bd1a",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 213,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d550e986_91c15edd",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 213,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d0ce8d8_e38287d8",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 213,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5050ff95_66d9bd1a",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 213,
        "endChar": 0
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6073357_0df17ce9",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 221,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "uninitialized struct.  Please just declare it on line 295 where you construct the values for it.",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3bfb563_61f79ce9",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 221,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d6073357_0df17ce9",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78eac9c8_a9c0d7b6",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 221,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3bfb563_61f79ce9",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eff18269_40e5bf20",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "This is also not an error.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 60
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "897f91a3_6f70ad95",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 227,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eff18269_40e5bf20",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 60
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f653831_a0bdeb61",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 227,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "897f91a3_6f70ad95",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 60
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f860380_1ed2ed5e",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 237,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "See above, you\u0027re mixing parsing styles.  I actually prefer this style here, but you shouldn\u0027t start with a reinterpret cast",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 237,
        "endChar": 48
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a81122e9_ac4048a7",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 237,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4f860380_1ed2ed5e",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 237,
        "endChar": 48
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb2e8b87_f4875e59",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 240,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "This can be seen by reading the code, no need to comment.",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 240,
        "endChar": 59
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0f3d0ef_03ba8ac4",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 240,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fb2e8b87_f4875e59",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 240,
        "endChar": 59
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08c934f1_1c1e2352",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 240,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0f3d0ef_03ba8ac4",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 240,
        "endChar": 59
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5de004c4_5c5ffa76",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 243,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "don\u0027t shift right then left.  Just shift once, and mask where appropriate.\n\n(0x3 \u0026 resp-\u003emTolDataByte) \u003c\u003c 8",
      "range": {
        "startLine": 243,
        "startChar": 8,
        "endLine": 243,
        "endChar": 67
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7b0c482_62c41e4e",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 243,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "mTolDataByte - 2 bits MSB [7-6]\n(0xC0 \u0026 resp-\u003emTolDataByte) \u003c\u003c 2\n\nMasked with 0xC0, since it is last 2 bits and shifted by 2 to the left.",
      "parentUuid": "5de004c4_5c5ffa76",
      "range": {
        "startLine": 243,
        "startChar": 8,
        "endLine": 243,
        "endChar": 67
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4d86d5d_265c1d6c",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 243,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7b0c482_62c41e4e",
      "range": {
        "startLine": 243,
        "startChar": 8,
        "endLine": 243,
        "endChar": 67
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "135f2ebb_1839219b",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 255,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "same as above.",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09d66153_040f6ebd",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 255,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "bAcuDataByte - 2 bits MSB [7-6]\n(0xC0 \u0026 resp-\u003ebAcuDataByte) \u003c\u003c 2\n\nMasked with 0xC0, since it is last 2 bits and shifted by 2 to the left.",
      "parentUuid": "135f2ebb_1839219b",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "439316a1_ee6add38",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 255,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09d66153_040f6ebd",
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f34efb74_97c7673a",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 304,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "emplace_back(std::move(temp));",
      "range": {
        "startLine": 304,
        "startChar": 41,
        "endLine": 304,
        "endChar": 42
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4cd32ce_318ee409",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 304,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f34efb74_97c7673a",
      "range": {
        "startLine": 304,
        "startChar": 41,
        "endLine": 304,
        "endChar": 42
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15076d98_48c40e82",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 304,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4cd32ce_318ee409",
      "range": {
        "startLine": 304,
        "startChar": 41,
        "endLine": 304,
        "endChar": 42
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd87fb45_49f8be31",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 311,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "If you want to construct values this way, please use named construction\n\nSensorValConversion val {\n  .mValue \u003d mdata;\n  .bVlalue \u003d bDataVal;\n\n}\n\nect.",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 311,
        "endChar": 37
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fc7deb7_6ae8e358",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 311,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-10T13:47:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fd87fb45_49f8be31",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 311,
        "endChar": 37
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13e3d89d_fb706c6f",
        "filename": "src/IpmbSDRSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 311,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fc7deb7_6ae8e358",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 311,
        "endChar": 37
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1223dfa2_a8dd167d",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "So now we\u0027re going with two different config types, one for a full \"device\" and one for a sensor.  I guess that\u0027s reasonable to me.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 44,
        "endChar": 51
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "276ae5ca_9fdd73c5",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 604,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "I\u0027m really not following this code.  Why is \"Bus\" special?  Are all the other properties optional?",
      "range": {
        "startLine": 600,
        "startChar": 0,
        "endLine": 604,
        "endChar": 5
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b176ded8_ace28a2a",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 604,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Other properties will be same for all IPMB devices except BUS, since this will provide the information on which channel the command needs to be send in IPMB SendRequest to identify the SDR records.",
      "parentUuid": "276ae5ca_9fdd73c5",
      "range": {
        "startLine": 600,
        "startChar": 0,
        "endLine": 604,
        "endChar": 5
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d6dd627_c3674f0a",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 610,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "We should not be bitpacking entity-manager config parameters like this.  Use two parameters if you need to support both channel and bus index.",
      "range": {
        "startLine": 607,
        "startChar": 0,
        "endLine": 610,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1c229c9_2c7b454e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 610,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d6dd627_c3674f0a",
      "range": {
        "startLine": 607,
        "startChar": 0,
        "endLine": 610,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fe4ae2_281de81c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 616,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "Given that this takes no arguments, can it just be called in the IpmbSDRDevice constructor?",
      "range": {
        "startLine": 616,
        "startChar": 12,
        "endLine": 616,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1103f5b_8848e603",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 616,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-27T08:36:23Z",
      "side": 1,
      "message": "It cannot be passed from constructor, since weakRef object is getting out of scope.",
      "parentUuid": "b7fe4ae2_281de81c",
      "range": {
        "startLine": 616,
        "startChar": 12,
        "endLine": 616,
        "endChar": 32
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf2a3a5b_409f2833",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 706,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T03:46:22Z",
      "side": 1,
      "message": "why unique_ptr?",
      "range": {
        "startLine": 706,
        "startChar": 9,
        "endLine": 706,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e0f77f_c3d29931",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 706,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:15:21Z",
      "side": 1,
      "message": "I thought unique_ptr will not make copy, since this will be called from the entity-manager dbus signal.\n\nPlease provide your suggestion on this.",
      "parentUuid": "bf2a3a5b_409f2833",
      "range": {
        "startLine": 706,
        "startChar": 9,
        "endLine": 706,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ced2b3b1_0677af52",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 706,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T14:38:17Z",
      "side": 1,
      "message": "it\u0027s a variable on stack, it won\u0027t be a copy either way.",
      "parentUuid": "19e0f77f_c3d29931",
      "range": {
        "startLine": 706,
        "startChar": 9,
        "endLine": 706,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d65e13cb_d2ba9bd4",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 20
      },
      "lineNbr": 706,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-27T08:36:23Z",
      "side": 1,
      "message": "I changed this to shared_ptr. Is that acceptable ?",
      "parentUuid": "ced2b3b1_0677af52",
      "range": {
        "startLine": 706,
        "startChar": 9,
        "endLine": 706,
        "endChar": 19
      },
      "revId": "e3abf701133ad9040165c0274524bd9424ab2704",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}