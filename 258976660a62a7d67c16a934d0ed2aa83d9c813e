{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e334fe0f_0d97d850",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-02-22T04:51:22Z",
      "side": 1,
      "message": "Thanks. I am still concerned about the fact this changes the location of objects already well-established in the field.",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fce9f0e5_451f4f30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-12T18:06:10Z",
      "side": 1,
      "message": "I am still concerned by this. Was this addressed?",
      "parentUuid": "e334fe0f_0d97d850",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387f29bb_d0d744f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:17:46Z",
      "side": 1,
      "message": "Can you be more specific on the concern with object_paths changing?  Shouldn\u0027t everyone be using mapper?  Or are there some config files in openbmc/openbmc pointing to \"old\" paths that may also need to be updated?",
      "parentUuid": "fce9f0e5_451f4f30",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a7be429_47ba676e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-12T18:23:07Z",
      "side": 1,
      "message": "There\u0027s a lot of people, especially testers performing thermal tuning with ovens and chambers, who might be unfamiliar with Object Mapper and are relying on example `busctl` command lines given to them by the software developers. There\u0027s probably a lot of scripts also in the field. I am concerned about changing everybody\u0027s paths suddenly.",
      "parentUuid": "387f29bb_d0d744f9",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2527aff1_ab6f0b14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-12T18:43:50Z",
      "side": 1,
      "message": "While I understand and sympathize with the concern, we can\u0027t prevent making open source changes due to scripts people have downstream, right?  The object paths have never been intended to be an external API.\n\nIs there any possibility for the open source project to satisfy your concerns?",
      "parentUuid": "5a7be429_47ba676e",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f9982aa_e11c6a4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2023-12-12T18:46:22Z",
      "side": 1,
      "message": "Makes sense. I just think they need to be changed for a good reason. Is this a good reason, merely to add a convenience feature to change all the fan settings at once, instead of changing each fan setting individually?",
      "parentUuid": "2527aff1_ab6f0b14",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f03d227c_13f0ac9a",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 258,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-23T20:41:11Z",
      "side": 1,
      "message": "Don\u0027t early declare variables.  You defined this 20+ lines earlier than the first use.\n\nWhy not this?\n\n  std::vector\u003cstd::string\u003e pwmPaths({ pwmPathStr });",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b81c1bda_a8d1a355",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 258,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-02-24T01:44:26Z",
      "side": 1,
      "message": "Change to std::vector\u003cstd::string\u003e pwmPaths({ pwmPathStr }); and moved to line 280.",
      "parentUuid": "f03d227c_13f0ac9a",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6160da81_27fa6abf",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 283,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-23T20:41:11Z",
      "side": 1,
      "message": "Or just change it to `{ pwmPaths }` here.",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bcec8d4_7cd752f5",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 283,
      "author": {
        "id": 1001618
      },
      "writtenOn": "2023-02-24T01:44:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6160da81_27fa6abf",
      "revId": "258976660a62a7d67c16a934d0ed2aa83d9c813e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}