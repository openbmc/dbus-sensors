{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fefb3326_f520fb9f",
        "filename": "src/Utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "Why are we using system_clock here?  That\u0027s almost certainly incorrect.  We should be using a monotonic clock.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "76d9978d0bc7ce41ae330c210e72953554ae741d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8752b32a_92466180",
        "filename": "src/Utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "Please don\u0027t add more global variables.  I suspect these need to be in each sensor.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 55,
        "endChar": 0
      },
      "revId": "76d9978d0bc7ce41ae330c210e72953554ae741d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ba8445c_7e43aa8d",
        "filename": "src/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "Why uint32_t?  Generally we would use something like std::chono::seconds for time values.",
      "range": {
        "startLine": 66,
        "startChar": 54,
        "endLine": 66,
        "endChar": 62
      },
      "revId": "76d9978d0bc7ce41ae330c210e72953554ae741d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9a238d5_0cc6d623",
        "filename": "src/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "This constructor is already VERY long, going from 10 parameters to 11.  Should we roll this out into a \"SensorData\" class?",
      "range": {
        "startLine": 66,
        "startChar": 11,
        "endLine": 66,
        "endChar": 74
      },
      "revId": "76d9978d0bc7ce41ae330c210e72953554ae741d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05a6e91f_8bc3ead6",
        "filename": "src/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 429,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "Putting this in readingStateGood seems a little odd to me.  It\u0027s going to result in the sensor being polled, but the thresholds ignored.\n\nWouldn\u0027t we rather just use delayMs as the initial value on waitTimer.asyncWait (it would replace sensorPollMs on the initial read?).\n\nThat way, we\u0027re not reading the sensor until it\u0027s ready.",
      "range": {
        "startLine": 429,
        "startChar": 17,
        "endLine": 429,
        "endChar": 33
      },
      "revId": "76d9978d0bc7ce41ae330c210e72953554ae741d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}