{
  "comments": [
    {
      "key": {
        "uuid": "6c759c92_e84c79c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-01T23:13:58Z",
      "side": 1,
      "message": "I\u0027m not quite following.  Considering your temperature control loops are now invalidated, why wouldn\u0027t you disable PSUSensor, run your tests, then reenable it once?  There\u0027s no need to do it every time a VR is changed.\n\nI\u0027m a little worried that this change is going to cover up real failures in a production scenario.  By design, PSUSensor intends to \"OWN\" the VR, so if that\u0027s not true, the design is going to be problematic.  Given that PSUsensor is \"in charge\" of the VR, I\u0027d expect at least some kind of control handoff that\u0027s more robust than \"the FD returned an error\".",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4facfb74_8fa51688",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-11-02T00:10:57Z",
      "side": 1,
      "message": "I would tend to agree here. This appears to behave like a bandaid for poorly behaved PSUs that keep getting errors (like if you didn\u0027t want the errors to show up in logs). By simply restarting the sensor whenever it goes awol, it hides any real errors.",
      "parentUuid": "6c759c92_e84c79c0",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "959842ed_6d5f5089",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 190,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-11-02T00:10:57Z",
      "side": 1,
      "message": "fd is valid if it is \u003e\u003d 0\n\nwhile 0,1,2 are commonly assigned to stdin, stdout, stderr, it is possible to close those and get them assigned as new file handles.",
      "range": {
        "startLine": 190,
        "startChar": 11,
        "endLine": 190,
        "endChar": 12
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}