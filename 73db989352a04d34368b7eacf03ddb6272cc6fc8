{
  "comments": [
    {
      "key": {
        "uuid": "6c759c92_e84c79c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-01T23:13:58Z",
      "side": 1,
      "message": "I\u0027m not quite following.  Considering your temperature control loops are now invalidated, why wouldn\u0027t you disable PSUSensor, run your tests, then reenable it once?  There\u0027s no need to do it every time a VR is changed.\n\nI\u0027m a little worried that this change is going to cover up real failures in a production scenario.  By design, PSUSensor intends to \"OWN\" the VR, so if that\u0027s not true, the design is going to be problematic.  Given that PSUsensor is \"in charge\" of the VR, I\u0027d expect at least some kind of control handoff that\u0027s more robust than \"the FD returned an error\".",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4facfb74_8fa51688",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-11-02T00:10:57Z",
      "side": 1,
      "message": "I would tend to agree here. This appears to behave like a bandaid for poorly behaved PSUs that keep getting errors (like if you didn\u0027t want the errors to show up in logs). By simply restarting the sensor whenever it goes awol, it hides any real errors.",
      "parentUuid": "6c759c92_e84c79c0",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "090e82a2_8183a801",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-11-02T00:23:35Z",
      "side": 1,
      "message": "\u003eConsidering your temperature control loops are now invalidated, why wouldn\u0027t you disable PSUSensor, run your tests, then reenable it once?\n\nFlow is to change the voltage on a rail, read the voltage from some other device rinse and repeat.\n\n@Vernon\n\n\u003eThis appears to behave like a bandaid for poorly behaved PSUs that keep getting errors (like if you didn\u0027t want the errors to show up in logs). By simply restarting the sensor whenever it goes awol, it hides any real errors.\n\nDon\u0027t quite follow. If you\u0027re talking about the part where we restart PSUSensors - we only do that because PSUSensors doesn\u0027t deal well with a /sys/class/hwmon/**/ path disappearing and then reappearing. This patch would make it so that you no longer have to restart PSUSensors to achieve this behavior.\n\nIf you\u0027re talking about unbinding/rebinding drivers to hide errors - that\u0027s not what the use-case is about. We\u0027re unbinding drivers to allow a hardware test have exclusive access to the device and rebinding them to give the device back to PSUSensors.",
      "parentUuid": "4facfb74_8fa51688",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10ace64e_8a86d60b",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 185,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-11-02T23:55:36Z",
      "side": 1,
      "message": "Since this is only called once in one place, suggest not to use a function. It would be easier to follow (IMO)",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 1
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b2ec1cf_54a3650a",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 185,
      "author": {
        "id": 1001162
      },
      "writtenOn": "2021-11-03T18:58:06Z",
      "side": 1,
      "message": "I think by keeping this code in a separate function it keeps handleResponse a little cleaner and more compact. Following the code path in handleResponse to the recover logic will require reading the neighboring functions anyways.",
      "parentUuid": "10ace64e_8a86d60b",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 1
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ffa743b_4711c4b0",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 185,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-11-04T17:29:41Z",
      "side": 1,
      "message": "That is fair.\n(really) nit: what do you think move restartAttemptRecover() after attemptRecover() so it is easier to follow the flow: setupAttemptRecover()-\u003eattemptRecover()-\u003erestartAttemptRecover-\u003eattemptRecover()-\u003e\n                                              ^                                         |\n                                              |-----------------------------------------|",
      "parentUuid": "1b2ec1cf_54a3650a",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 1
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "959842ed_6d5f5089",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 190,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2021-11-02T00:10:57Z",
      "side": 1,
      "message": "fd is valid if it is \u003e\u003d 0\n\nwhile 0,1,2 are commonly assigned to stdin, stdout, stderr, it is possible to close those and get them assigned as new file handles.",
      "range": {
        "startLine": 190,
        "startChar": 11,
        "endLine": 190,
        "endChar": 12
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feac60dc_0f51cee5",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 190,
      "author": {
        "id": 1001162
      },
      "writtenOn": "2021-11-03T18:58:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "959842ed_6d5f5089",
      "range": {
        "startLine": 190,
        "startChar": 11,
        "endLine": 190,
        "endChar": 12
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff9e9995_8409d07e",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 246,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-11-02T23:55:36Z",
      "side": 1,
      "message": "Maybe move errno\u003d\u003dENODEV case inside else (line 23) after line 245. log msg and incrementError() do not have to be repeated.",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 246,
        "endChar": 5
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9acf8756_3de86cc7",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 246,
      "author": {
        "id": 1001162
      },
      "writtenOn": "2021-11-03T18:58:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff9e9995_8409d07e",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 246,
        "endChar": 5
      },
      "revId": "73db989352a04d34368b7eacf03ddb6272cc6fc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}