{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21c5317f_2fd35284",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:10:23Z",
      "side": 1,
      "message": "So this is more of a percentage than a scale factor.  In this case, should these be made a percentage, with a parameter like:\n\nThresholdPercentageOfMax: 80.0\n\nI think that\u0027s a lot more clear what\u0027s going on in the calculation than a scale factor.",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 21,
        "endChar": 30
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b547ff4e_c3a779c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:10:23Z",
      "side": 1,
      "message": "Is there any other use case of determining this from anything other than max?  I can\u0027t really think of one, so I wonder if we can make this more explicit.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cfefc1d_fde5e8ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:10:23Z",
      "side": 1,
      "message": "What does \"high\" and \"low\" mean?  220V versus 120V?",
      "range": {
        "startLine": 28,
        "startChar": 28,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c59d08de_e6fe3ac1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-13T22:54:09Z",
      "side": 1,
      "message": "@Ed, what do you think about the latest patch and reply to your question. Have you concerns been addressed?",
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cd83679_81c8b995",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:19:24Z",
      "side": 1,
      "message": "Left comments.  some things have been addressed;  I\u0027d like the naming conventions in the config files updated to what the code now does, and secure coding violations addressed.",
      "parentUuid": "c59d08de_e6fe3ac1",
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "164d9400_d0d63aa5",
        "filename": "include/Thresholds.hpp",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:18:38Z",
      "side": 1,
      "message": "This is the wrong place to be putting this logic.  Lots of sensors have no path string, so adding it here is breaking the abstraction.  What needs to happen here is for the thresholds::Threshold object to be updated with the new params being supported in this case, and then have the individual implementations inside PSUSensor read and fill those thresholds in when that config comes.\n\nThat also prevents us from having to declare an intentionally default parameter in every call site, as you\u0027ve done.",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 120,
        "endChar": 46
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "754828cf_c97291e3",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 862,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:18:38Z",
      "side": 1,
      "message": "I\u0027m a little surprised this passed CI.  the spacing is wrong.",
      "range": {
        "startLine": 862,
        "startChar": 52,
        "endLine": 862,
        "endChar": 55
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7392b373_d245d405",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:18:38Z",
      "side": 1,
      "message": "Please don\u0027t construct static maps like this.  They use memory at all times, are slower, and increase startup times.  In this case, I\u0027m pretty sure you want\n\nconstexpr std::array\u003cstd::string_view, 2\u003e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 57
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "977d10b0_0f7aecaf",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 12
      },
      "lineNbr": 80,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-23T18:18:38Z",
      "side": 1,
      "message": "Secure coding violation.  ScaleFactor: 0.0 will make this code seg-fault.  If we go to percentages, I think this problem gets solved.",
      "range": {
        "startLine": 79,
        "startChar": 37,
        "endLine": 80,
        "endChar": 72
      },
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3997c27_cd058720",
        "filename": "src/Thresholds.cpp",
        "patchSetId": 12
      },
      "lineNbr": 132,
      "author": {
        "id": 1001194
      },
      "writtenOn": "2022-10-18T20:36:10Z",
      "side": 1,
      "message": "should be in Camel case?",
      "revId": "51d459c3e18fc438eaa3a8f0aaf5fc3d9ec83e26",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}