{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9ab92603_43c4b8b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:35:47Z",
      "side": 1,
      "message": "Overall, IMO this is the wrong place for this code.  dbus-sensors is about reading hardware sensors, and pulling in TCP/http based sensors breaks quite a few things, and duplicates quite a big chunk of code that already exists in the aggregation feature, that should not be duplicated.  Reiterating what I said in the design review, this needs to be more tightly integrated with the existing features, rather than just rewriting them, given that significant effort has been put into tuning, debugging things like keepalive, supporting features HTTPS (which is technically a requirement of redfish) and other stuff that this patchset chooses to ignore.  When things like authentication, mutual TLS, and other are added, had we accepted this feature as written, we would have to duplicate those features as well, which would add significantly more engineering compared to integrating a solution in the first place.  This is roughly the same position that was taken when the aggregation feature was originally added, in that it re-implemented significant portions of EventService, so this is not feedback that is unique to this patchset.\n\nAs written, this patchset also seems to ignore some important required parts about the redfish specification, like walking the Redfish tree, ownership of the odata.id parameters, checking odata.type, error codes, handling 202 accepted, and other things.  While those could certainly be improved, it would have to start with a reading of the specification, and a rebuild of the polling loops and parameter sets to match what the specification states.\n\nIf other dbus-sensors and Redfish maintainers disagree with this opinion, I\u0027m happy to have a discussion about if this is the right place for this code, and who will maintain it.  We already have two redfish client libraries (libredfish, and http_client.hpp in bmcweb).  I\u0027m not interested in maintaining a third, especially one that\u0027s based on the same core libraries (beast/asio) as the http_client.hpp, and only implements a subset of its capabilities and specification correctness.  If we need to break that section of bmcweb out into a library, that\u0027s fine, lets get that done.",
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0c38145_fea0b10f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "I would also mention, this patchset is 4000 lines, which is far more than can be reviewed effectively in one review, if it proceeds, it needs broken up a bit so it\u0027s effectively reviewable.\n\nI\u0027ve left a few comments on general coding practices that need fixed across the patch just to help make progress.",
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0ca8481_94796098",
        "filename": "src/RedfishSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:35:47Z",
      "side": 1,
      "message": "In EM configs, we wouldn\u0027t split up these three things into three config entries.  a device \"supports redfish\" as a single feature, and redfish is introspectable, so we shouldn\u0027t duplicate things in the EM config file that we can determine from the server itself by simply walking the tree.",
      "range": {
        "startLine": 17,
        "startChar": 22,
        "endLine": 17,
        "endChar": 55
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d99aa530_028e3122",
        "filename": "src/RedfishSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 418,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:35:47Z",
      "side": 1,
      "message": "Per the Redfish specification, IDs need to come from walking the tree, and are at the control of the server, not the client.",
      "range": {
        "startLine": 418,
        "startChar": 66,
        "endLine": 418,
        "endChar": 75
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "342e30b2_1796540f",
        "filename": "src/RedfishSensorQuery.cpp",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:35:47Z",
      "side": 1,
      "message": "This is duplicating code that already exists in bmcweb in http_client.hpp for handling Redfish transactions.  Please don\u0027t duplicate what already exists and has been debugged.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 80
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "171e1845_eac450b0",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "Please make these kinds of lookup tables constexpr, per the coding standard.  As-written, they will be required to allocate on startup.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac9326c_fc816ec5",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "It can be used today.  The classes just need crafted to allow it.  Take a look at the registry implementation in bmcweb for an example that\u0027s similar, and I\u0027m happy to help you if you could use more direct help.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 65
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e033590f_ed7a10cb",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "This code is duplicating readJson in bmcweb, which handles more cases.",
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1683dbb_73d8a173",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "nit, extra parens.",
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7beee622_e31358da",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "please use nlohmann::json::get_ptr\u003cnlohmann:json::object_t\u003e\n\nThis advice needs repeated quite a bit for the generalized pattern this patch takes.  I\u0027ll comment once, all need fixed.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 46,
        "endChar": 5
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86059488_78b1fb4b",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "Yes, it\u0027s called from_chars.  There\u0027s lots of examples of it in bmcweb you can use.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 69
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1289503c_ccfe9bbe",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "I\u0027m not following this.  This isn\u0027t allowed in the standard, can you please explain (ideally in the commit message)?",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 184,
        "endChar": 57
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fe93189_ca51f10b",
        "filename": "src/RedfishSensorResponse.cpp",
        "patchSetId": 4
      },
      "lineNbr": 388,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-26T18:47:39Z",
      "side": 1,
      "message": "Please take a look at readJson in bmcweb.  It handles this in a much cleaner way, handles more errors, at at a minimum could be used as a model for this.",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 388,
        "endChar": 0
      },
      "revId": "f9c82aab778c82e4e4db1a8f29bd55f9f3dd0d14",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}