{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "040438d4_28d4cc24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T19:08:17Z",
      "side": 1,
      "message": "The PowerState parameter it intended to solve host-owned sensors.  Does that not work in this case?\n\nNeeding a delay here implies that the device driver is wrong and needs corrected.  Which sensors specifically are you applying this to?\n\nI really suspect this doesn\u0027t need to be a config item, but would be based on the device itself.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 40
      },
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c475f243_882c290f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-01-19T03:21:51Z",
      "side": 1,
      "message": "\u003e The PowerState parameter it intended to solve host-owned sensors.  Does that not work in this case?\n\nSometime the sensors do not take enough time to initialize after Chassis is On or Host is Running.\n\u003e \n\u003e Needing a delay here implies that the device driver is wrong and needs corrected.  Which sensors specifically are you applying this to?\n\nIn the 1 Socket system, I did not get the ADC sensors lower threshold event issue, but in the 2 Socket system, some ADC sensors of Socket2 are not ready after Host is running -\u003e lower threshold events are logged.\nAbout the FAN sensors issue: We are using SUNON FAN controller, it needs time to initialize FAN speed after Power is turned on, if the Chassis state changes to On before FAN controller is completely initialized, lower threshold events are logged.\n\u003e \n\u003e I really suspect this doesn\u0027t need to be a config item, but would be based on the device itself.\n\nI hope that, but that are the limitation of devices, we can not change or update them now.",
      "parentUuid": "040438d4_28d4cc24",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 40
      },
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9419c98_7012a7ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-17T23:17:39Z",
      "side": 1,
      "message": "Can you please link to the entity-manager commit where the `DelayMs` schema was accepted?",
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbd34f35_e3c1aa5e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-01-18T08:33:51Z",
      "side": 1,
      "message": "I created new commit to add \"DelayMs\" property to EM.\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/68926.\n\nI will update the commit message when that commit is merged.",
      "parentUuid": "f9419c98_7012a7ce",
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7998e27f_dadff23f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-01-17T04:38:05Z",
      "side": 1,
      "message": "This commit start from my question on Discord https://discord.com/channels/775381525260664832/1187158775438778408/1191629649189544006. Please help me to review this commit",
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a08976_5c78ebb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-01-17T09:36:09Z",
      "side": 1,
      "message": "Instead of using 3 time_point variables,\nwould it be possible to just set a single std::optional\u003c...::time_point\u003e\nwhen the sensor is enabled and then set it to std::nullopt when it\u0027s disabled? Then the \u0027good to read\u0027 function could perhaps check the elapsed time.\n\nOr the check could happen in the code that emits the threshold events. Since the sensor might be technically \u0027good to read\u0027 but not yet arrived at a stable reading.\n\n\nEven if it works now I\u0027m afraid the feature could break in the future due to lack of unit tests. But it\u0027s definitely needed to avoid the unwanted threshold events.",
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb8346bb_69eab2a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-01-18T08:33:51Z",
      "side": 1,
      "message": "\u003e Instead of using 3 time_point variables,\n\u003e would it be possible to just set a single std::optional\u003c...::time_point\u003e\n\u003e when the sensor is enabled and then set it to std::nullopt when it\u0027s disabled? Then the \u0027good to read\u0027 function could perhaps check the elapsed time.\n\nUsing std::optional\u003c...::time_point\u003e is unnecessary, in the readingStateGood function, we checked isPowerOn/hasBiosPost/isChassisOn, if they fail, we don\u0027t have to check time_points are std::nullopt or not.\n\u003e \n\u003e Or the check could happen in the code that emits the threshold events. Since the sensor might be technically \u0027good to read\u0027 but not yet arrived at a stable reading.\n\nI have plan to add other commit to prevent reading sensor when PowerState is not ready, but this commit is necessary to add small delay after Chassis is On or Host is Running.\n\u003e \n\u003e \n\u003e Even if it works now I\u0027m afraid the feature could break in the future due to lack of unit tests. But it\u0027s definitely needed to avoid the unwanted threshold events.",
      "parentUuid": "11a08976_5c78ebb0",
      "revId": "cc95203c057069e0549a8ec2337eb19b0adff11c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}