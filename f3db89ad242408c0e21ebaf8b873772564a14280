{
  "comments": [
    {
      "key": {
        "uuid": "73f4135d_bf8d9922",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-04-28T22:22:03Z",
      "side": 1,
      "message": "This can be an performance improvement, but shouldn\u0027t be the fix for the below problem you pointed out.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02e888d6_744db0cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-04-29T00:32:22Z",
      "side": 1,
      "message": "Yes, this fix has performance improvement and would bypass the below issue. I also uploaded another patch to fix the undefined behavior: https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42708.",
      "parentUuid": "73f4135d_bf8d9922",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e00f8823_0b4b05d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-04-29T00:42:39Z",
      "side": 1,
      "message": "This patch is focus on enhance the performance and the code robust.",
      "parentUuid": "02e888d6_744db0cb",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72af2ad7_755cc916",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-04-29T00:51:34Z",
      "side": 1,
      "message": "Again, I am not sure all ADCSensors are always CPU related",
      "parentUuid": "e00f8823_0b4b05d4",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8012d9fe_f3286ba4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-04-29T01:35:46Z",
      "side": 1,
      "message": "\u0027CPU related\u0027 sensors mean the sensors introduced by the cpuPresence event? In that case it\u0027s true that not all ADCSensors are CPU related.\nThe non-CPU related sensors have been created at the above steps already at https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42659/2/src/ADCSensorMain.cpp#343\n\nAnd all of the non-CPU related sensor are destructed and re-constructed at \nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42659/2/src/ADCSensorMain.cpp#392, that why we meet issues here.\n\nAnd if they\u0027re NOT created at https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42659/2/src/ADCSensorMain.cpp#343, the current patch also could create them later at https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42659/2/src/ADCSensorMain.cpp#392, since we would ensure all the non-created sensors to be created at createSensors()",
      "parentUuid": "72af2ad7_755cc916",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f01a031_673048c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-04-28T22:22:03Z",
      "side": 1,
      "message": "lifetime should be managed correctly that the objects can be destructed anytime and recreated without undefined behavior.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa4c2f5a_489b9179",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000904
      },
      "writtenOn": "2021-04-29T00:32:22Z",
      "side": 1,
      "message": "I also uploaded another patch to fix the undefined behavior: https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42708.",
      "parentUuid": "0f01a031_673048c4",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "676ebad7_e30eef8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-04-29T00:51:34Z",
      "side": 1,
      "message": "The mentioned patch should help, but does not fix the potential race condition completely. I have uploaded a patch to show some idea https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/42737",
      "parentUuid": "aa4c2f5a_489b9179",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "f3db89ad242408c0e21ebaf8b873772564a14280",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}