{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "376b0d0b_28efcfa8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-31T00:54:33Z",
      "side": 1,
      "message": "What is the behavior if there are multiple OperatingSystem interfaces?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 57
      },
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "303e38fe_a14ec561",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-02-02T06:53:26Z",
      "side": 1,
      "message": "I assign busname \u0026 objpath by the first result we get from GetSubTree command.\nThe implementation in this commit does not consider if there are multiple OperatingSystem interfaces.\n\nThis commit will work with single host system if sensors have PowerState set to biosPost, but not for multi-host system.\n\nFor multi-host system, there is no rule to define sensor belong to which host, so I think it needs more discussion at design level.",
      "parentUuid": "376b0d0b_28efcfa8",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 57
      },
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e6dcee4_c019bfd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T23:46:46Z",
      "side": 1,
      "message": "\u003e I assign busname \u0026 objpath by the first result we get from GetSubTree command.\n\nHow do you know the first result is the correct one?  We have this same problem in bmcweb, and we explicitly check that there is only 1 implementation, and error out if there isn\u0027t (size() \u003d\u003d 1).  I suspect we need to do the same thing here.\n\n\u003e The implementation in this commit does not consider if there are multiple OperatingSystem interfaces.\n\nit needs to at least log an error if that happens.  \"does not consider\" doesn\u0027t really help when we\u0027re relying on undefined behavior from the mapper.\n\n\u003e \n\u003e This commit will work with single host system if sensors have PowerState set to biosPost, but not for multi-host system.\n\u003e \n\u003e For multi-host system, there is no rule to define sensor belong to which host, so I think it needs more discussion at design level.\n\nWhat do sensors have to do with it?",
      "parentUuid": "303e38fe_a14ec561",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 57
      },
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55300e08_f0bf720e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-30T23:12:58Z",
      "side": 1,
      "message": "Hi Potin, thanks for updating the commit message. I have another concern about mixing asynchronous and synchronous calls. I\u0027ve left a comment inline.",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d25ae66d_afef2dd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-31T00:54:33Z",
      "side": 1,
      "message": "Blocking calls in an async context should be something we just disallow at some point, but for the moment, this code will definitely need reworked.",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d94bfb84_9dd69d76",
        "filename": "src/Utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-30T23:12:58Z",
      "side": 1,
      "message": "dbus-sensors is written around the sdbusplus::asio bindings, which are async. However, you have a synchronous call here. There\u0027s some concern that combining asynchronous and synchronous calls leads to unpredictable behaviour:\n\n[asio: Add async match](https://gerrit.openbmc.org/c/openbmc/sdbusplus/+/68860)\n\nI expect we need this to be async.",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67ce7fc_0cef0a4c",
        "filename": "src/Utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-31T00:54:33Z",
      "side": 1,
      "message": "FWIW, the discussion you linked is specifically about async matches, which are less of a concern (but still somewhat of a concern).\n\nThis is an async CALL, which has been known to cause deadlocking and performance issues, and has been disallowed since basically the beginning of the asio extensions..",
      "parentUuid": "d94bfb84_9dd69d76",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89070fbd_49579243",
        "filename": "src/Utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-31T04:31:25Z",
      "side": 1,
      "message": "I\u0027m aware of the contrast, I was just using the match situation as an example of the subtleties of mixing sync and async.",
      "parentUuid": "d67ce7fc_0cef0a4c",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0c2fca_e32b3275",
        "filename": "src/Utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-31T04:33:15Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "89070fbd_49579243",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47c229de_74a77387",
        "filename": "src/Utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-02-02T06:53:26Z",
      "side": 1,
      "message": "Done, change post related setup to async mothod call.",
      "parentUuid": "5d0c2fca_e32b3275",
      "revId": "d315f04292fee9e3f7f468c7ca5062e931f72480",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}