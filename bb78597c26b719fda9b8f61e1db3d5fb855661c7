{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1651da56_127c75ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-10T04:34:00Z",
      "side": 1,
      "message": "Couple of quick comments",
      "revId": "bb78597c26b719fda9b8f61e1db3d5fb855661c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762d8ff0_e86ece34",
        "filename": "src/NVMeBasicContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-10T04:34:00Z",
      "side": 1,
      "message": "No, this isn\u0027t right. The suggestion was it should be std::optional\u003cFileHandle\u003e\u003e to avoid the heap allocation.",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 73
      },
      "revId": "bb78597c26b719fda9b8f61e1db3d5fb855661c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb956ac2_854cc532",
        "filename": "src/NVMeBasicContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-10T04:34:00Z",
      "side": 1,
      "message": "Perhaps put this in the try block? And if we do that can we can get rid of the std::optional as well?",
      "revId": "bb78597c26b719fda9b8f61e1db3d5fb855661c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe650f95_e9f1adf2",
        "filename": "src/NVMeBasicContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-10T05:04:39Z",
      "side": 1,
      "message": "What I mean by that is put the body of the `if (fileHandle)` conditional in the try block and get rid of the `if (fileHandle)` condition, as you\u0027ll bail out with an exception if we can\u0027t create the FileHandle (AIUI).",
      "parentUuid": "cb956ac2_854cc532",
      "revId": "bb78597c26b719fda9b8f61e1db3d5fb855661c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d703179b_2b30c7c9",
        "filename": "src/NVMeBasicContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-08-10T08:43:35Z",
      "side": 1,
      "message": "Thank you Andrew. Is out-of-range exception enough to cover all fail cases of constructing FileHandle object, if so, we can remove the if(fileHandle) condition and directly process further when it passes the try. \nAnd I think we should only try-catch where the exception may happen, and should not put all the below processing inside try, do you think so? \nAbout std::optional, do we necessarily have to use it instead of just a normal object for this case. I think the object being null here is an error, not an option, so can we just use a normal unique pointer for it? I don\u0027t get it much about the allocation advantage of an optional pointer, can you please give some advice?",
      "parentUuid": "fe650f95_e9f1adf2",
      "revId": "bb78597c26b719fda9b8f61e1db3d5fb855661c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}