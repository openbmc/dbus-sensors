{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65985eeb_c5424145",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "This PR should now only include changes that clean up FanSensor handling for everyone without actually affecting any fan functionality.\n\nA child PR to this one adds the logic change required to support Tachless fan sensors in just a few lines -- but I thought it would easier to review if I kept this first part as free as possible of logic changes.\n\nAnd a child PR to *that* aims to depreciate the need for distinguishing between non-i2c fans like AspeedFan or HpeFan. Based on ideas \u0026 code Ed T had worked on previous.\n\nI\u0027ll probably be pushing on this more next week on Discord :)",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91905919_0f00cbb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-30T14:12:21Z",
      "side": 1,
      "message": "Added some additional commentary around some usages of \u0027pwm\u0027 and \u0027pwmPath\u0027 that are *not* affected by the fanN_input -\u003e pwmN change here.\n\nJust looking to cover some bases on why some changes were made (or not made).",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94af246c_7fe206d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T16:47:46Z",
      "side": 1,
      "message": "I\u0027ve realized this change would break 1:many pwm:tach configurations as coded today. \n\nI\u0027m going to rethink that part of my approach.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30f3bf7a_832d278b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "I\u0027m polishing things up now, but the new method should be even simpler to review, and less potential for disruption.\n\nThe old method changed all fans over to starting from \u0027hwmon/pwm\u0027 instea of \u0027hwmon/fan_input\u0027 -- but it turns out that would break handling for 1:many pwm:tach configurations.\n\nThe new method simply adds \u0027hwmon/pwm\u0027 to the lookup path, then discards any \u0027pwm\u0027 node that isn\u0027t isn\u0027t tachless, preserving existing behavior for all \u0027standard\u0027 (not tachless) hwmon fans.",
      "parentUuid": "94af246c_7fe206d4",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a9b7564_d6a5aeec",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "Used at the start of the \": fanOutputPaths\" loop to identify hwmon sub-directories with fan-associated nodes inside.\n\nThis change allows us to start scanning from file \u0027hwmon/pwmN\u0027 (all hwmon-controllable fans should have this) instead of from \u0027fanN_input\u0027 (not all fans expose this).\n\nString manipulation logic has been adjusted accordingly, and all objects are ultimately being passed the same paths as before -- it\u0027s should be easier to follow the code now.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "137b2a2d_dab9a39c",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "instead of path manipulation going from fanN_input -\u003e fanN_enable, we now go from pwmN -\u003e fanN_enable\n\nDoes not affect fan functionality.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45317cf3_95f2b42e",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "137b2a2d_dab9a39c",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3efb3bc1_15c63513",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "Handles path string manipulation from hwmon/pwmN -\u003e hwmon/fanN_input.\n\nNeeded so we can continue to pass the usual \u0027fanN_input\u0027 path(s) for TachSensor object init.\n\nNo changes to any fan functions expected as a result of this change.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "664563a9_0bbf9394",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "3efb3bc1_15c63513",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef355545_b2d5b647",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-09-08T04:02:43Z",
      "side": 1,
      "message": "I don\u0027t think pwm* index map to the fan*_input index for fan sensors all the time. In our platform, \"Pwm\" sometimes differs from \"Index\" of a fan sensor config. This inferring would break those config.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8afa7be_5ba2c2c7",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T16:47:46Z",
      "side": 1,
      "message": "Great point. I think this particular issue might solved by taking the \u0027index\u0027 value from the associated fan EntityManager record and using it here... \n\nbut while I was thinking about that, I realized that my current changes would also break fans for situations with 1 pwm for control, but multiple tach sensors.\n\nSo that\u0027s something else for me to think about before my next update. Thanks for the help!",
      "parentUuid": "ef355545_b2d5b647",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46954f9f_39a3a7db",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-09-08T04:02:43Z",
      "side": 1,
      "message": "How about pwmPaths for clarity?",
      "range": {
        "startLine": 313,
        "startChar": 23,
        "endLine": 313,
        "endChar": 37
      },
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9856d42_be092e5b",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T16:47:46Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "46954f9f_39a3a7db",
      "range": {
        "startLine": 313,
        "startChar": 23,
        "endLine": 313,
        "endChar": 37
      },
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472b4d7e_22dd9501",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "I thought this new statement made more sense since we\u0027re starting our checks from a fan control/output path (pwmN) now.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "956c3213_48305fb1",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "472b4d7e_22dd9501",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68e95c78_8a5c8c11",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 326,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "the modified regex from above is now used to match an output path (pwmN) instead of starting from an input path (fanN_input)",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b6b8df3_e561f1f2",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 326,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "68e95c78_8a5c8c11",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6e9160_9b92b6bb",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 327,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-09-08T04:02:43Z",
      "side": 1,
      "message": "With this change, you are mapping sysfs pwm* index with \"Index\" property in the config, which is supposed to be mapped to fan*_input index.\n\nInstead of treating this loop as a fan sensor config parsing, I recommend treating this as pwm sensor config parsing, and refactor the loop to cover this change.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "286f5516_32ff9e30",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 327,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T16:47:46Z",
      "side": 1,
      "message": "Good point. I\u0027ll keep this in mind for my next update (which will probably change things around a fair bit, now that I\u0027m thinking about 1:many pwm:tach relationships too...)",
      "parentUuid": "6f6e9160_9b92b6bb",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cee8245_343f483c",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-30T14:12:21Z",
      "side": 1,
      "message": "This is a sanity check whose logic is not affected by the hwmon/fanN_input -\u003e hwmon/pwmN changeover.\n\nIt essentially checks \"does the sensorConfiguration (Entity-Manager config fan record) path have a pwmN index that matches a hwmon/pwmN node that exists? If no, skip to next record.\n\nThe result of the sanity check is later used to handle for fans with pwm control, but no \u0027pwm sensor\u0027 offered.\n\nIt\u0027s likely I could simplify the logic if this PR is accepted, but it\u0027d be a separate PR for discussion, since it may end up adjusting more than just simple string/path logic.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09193073_8b01fb7f",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "8cee8245_343f483c",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d77011f0_27d2a0e8",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 642,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-29T21:04:35Z",
      "side": 1,
      "message": "we still want a fan sensor input path in the end to pass to TachSensor init, so we get it here.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0702cd11_bee0d09d",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 642,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-09-08T04:02:43Z",
      "side": 1,
      "message": "How do we assure that this fan path exist in sysfs? I see your next patch and I do think it should be within this patch to avoid impacts to normal fan configs.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a295899e_17835547",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 642,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T16:47:46Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0702cd11_bee0d09d",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a46b5d40_576b68f7",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 642,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-09-18T21:22:19Z",
      "side": 1,
      "message": "Done. No longer applies.",
      "parentUuid": "d77011f0_27d2a0e8",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd353c6e_b2405ec4",
        "filename": "src/fan/FanMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-08-30T14:12:21Z",
      "side": 1,
      "message": "The \u0027pwmPath\u0027 logic below is not affected by the changeover to starting from path hwmon/pwmN instead of hwmon/fanN_input.\n\nMy understanding is  that this handles cases where Entity-Manager config records defined info for fan pwm control, but not pwm sensor info for lookup.\n\nI suspect the logic could be simplified here, but as it\u0027s a parallel hwmon/pwmN lookup that uses the result in interesting ways, I\u0027ll see if this PR is successful before trying to touch up the (ain\u0027t broke) logic there.",
      "revId": "dc14ff36f668c242a758f4c5c7c467e9d875b2a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}