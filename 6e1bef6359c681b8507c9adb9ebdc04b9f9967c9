{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "103cad00_812a35ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001023
      },
      "writtenOn": "2023-05-05T20:25:41Z",
      "side": 1,
      "message": "This plus the other patch worked for me.",
      "revId": "6e1bef6359c681b8507c9adb9ebdc04b9f9967c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54dec7f2_4e2351bb",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 240,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-05-06T04:18:31Z",
      "side": 1,
      "message": "value is unsigned",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 13
      },
      "revId": "6e1bef6359c681b8507c9adb9ebdc04b9f9967c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17bf88e9_e33dffeb",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-05-06T04:18:31Z",
      "side": 1,
      "message": "move to after line 277",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 75
      },
      "revId": "6e1bef6359c681b8507c9adb9ebdc04b9f9967c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "784350e5_192e3df6",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-05-06T04:18:31Z",
      "side": 1,
      "message": "use this pattern:\n\nif (!self)\n{\n  return;\n}\n(continue with self is good)\nint value \u003d self-\u003ereadSensor()\n...",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "6e1bef6359c681b8507c9adb9ebdc04b9f9967c9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}