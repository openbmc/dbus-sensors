{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "80bcef6e_5c6530ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-10-08T01:03:14Z",
      "side": 1,
      "message": "What is the difference between ChassisOn and Always?",
      "range": {
        "startLine": 14,
        "startChar": 16,
        "endLine": 14,
        "endChar": 22
      },
      "revId": "ead44daf384512c60226773ec59f316162b9cef6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ca41e83_3863cf49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2022-10-08T14:56:26Z",
      "side": 1,
      "message": "Always is the default attribute in which sensors always have valid values. A sensor with PowerState: On means the sensor has valid value after Host state is Running.\n\nPowerState: ChassisOn is supported for the case of the Chassis state is Running (but Host state might be Running or not). After powering ON the Host, in case of Host boot fail for any reason, we still need to have sensor values for some ADC sensors (power rails, for example) but these sensors should be invalid to avoid threshold violation events when power off.",
      "parentUuid": "80bcef6e_5c6530ac",
      "range": {
        "startLine": 14,
        "startChar": 16,
        "endLine": 14,
        "endChar": 22
      },
      "revId": "ead44daf384512c60226773ec59f316162b9cef6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfc87b25_2e5a95c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2022-10-06T02:14:12Z",
      "side": 1,
      "message": "Verified on Ampere Mt.Jade with FAN and ADC sensors which have valid value after powering ON, don\u0027t need to have Host running.",
      "revId": "ead44daf384512c60226773ec59f316162b9cef6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "755122fa_36b162b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-10-11T20:38:13Z",
      "side": 1,
      "message": "This is what our system family would need too, since our host can have all sorts of states even when the chassis is on.\n\nI\u0027m not that familiar with x86-power-control, but I vaguely remember hearing that chassisState\u003d\u003dhostState with that code.  If that is indeed the case, I wonder if it would be possible to just replace the host state On check with your chassis state On check.",
      "revId": "ead44daf384512c60226773ec59f316162b9cef6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "037ebe47_8c80062f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-10-14T10:35:22Z",
      "side": 1,
      "message": "As my opinion, ChassisState and HostState is difference. Chassis state will identify the state of the chassis. In chassis can have multiple hosts. The host state will identify the status of one host.\nBecause the role of host state and chassis state is difference so I don\u0027t think we should change host state by chassis state.",
      "parentUuid": "755122fa_36b162b6",
      "revId": "ead44daf384512c60226773ec59f316162b9cef6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}