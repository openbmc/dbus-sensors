{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8638a9b8_5d2045ea",
        "filename": "src/ChassisIntrusionSensor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-24T03:21:10Z",
      "side": 1,
      "message": "I think it is better if this method is not virtual. I expect that all of the sensor have the same behavior for this.",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33b9b440_ce766251",
        "filename": "src/ChassisIntrusionSensor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2023-04-24T03:43:36Z",
      "side": 1,
      "message": "Are you think about having timer polling for all the method?",
      "parentUuid": "8638a9b8_5d2045ea",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd653c99_f1c934d6",
        "filename": "src/ChassisIntrusionSensor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-24T04:28:51Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "33b9b440_ce766251",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63219949_57700759",
        "filename": "src/ChassisIntrusionSensor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-24T03:21:10Z",
      "side": 1,
      "message": "Why the default value is \"pch\"?",
      "range": {
        "startLine": 49,
        "startChar": 53,
        "endLine": 49,
        "endChar": 56
      },
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57b9e5df_01fe7e8b",
        "filename": "src/ChassisIntrusionSensor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2023-04-24T03:43:36Z",
      "side": 1,
      "message": "This is the expectation from the old design, pch is the first element in the enum which is zero and can be automatically assigned to mType without explicitly doing so, but I have to do this because of the CI failure asking for initial value setting.",
      "parentUuid": "63219949_57700759",
      "range": {
        "startLine": 49,
        "startChar": 53,
        "endLine": 49,
        "endChar": 56
      },
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "404f2c1c_c1f3a453",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-24T03:21:10Z",
      "side": 1,
      "message": "I think you should not dynamic cast from ChassisIntrusionSensor to ChassisIntrusionGpioSensor. You can define a new method compareSensor in the ChassisIntrusionSensor class. If you do that, you don\u0027t have to define getGpioInverted, getBusId and getSlaveAddr methods",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d32df0ca_7ac9b769",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2023-04-24T03:43:36Z",
      "side": 1,
      "message": "If compareSensor function is used, it has to take different type and number of params for each derived class which is I think not neccessary.",
      "parentUuid": "404f2c1c_c1f3a453",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f10bbf4e_3c2d5e8a",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-24T04:28:51Z",
      "side": 1,
      "message": "you can pass baseConfiguration to this method.",
      "parentUuid": "d32df0ca_7ac9b769",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f15e2b_f1f58500",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2023-04-24T05:01:01Z",
      "side": 1,
      "message": "Then it has to extract configs which I think is not suitable to be executed in the sensor class.",
      "parentUuid": "f10bbf4e_3c2d5e8a",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a1af9a9_574bcfe8",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-04-25T06:57:01Z",
      "side": 1,
      "message": "I don\u0027t think it is ok to pass configuration to a function. If you don\u0027t want to do that, you can pass a variant argument.",
      "parentUuid": "69f15e2b_f1f58500",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d09f9b2_9a927dce",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 10
      },
      "lineNbr": 109,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2023-04-25T10:29:13Z",
      "side": 1,
      "message": "Somehow I think this is a little cumbersome, and I also wonder if we do need to handle rescaning intrusion sensor config. Because this is a sensor on BMC, we won\u0027t have a chance to rescan if the BMC is replaced...?!",
      "parentUuid": "9a1af9a9_574bcfe8",
      "revId": "d6b76a2cf77af58612dcb1b1d675e276ebc39d1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}