{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "53e9848d_1dc4c29d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-03-31T07:08:30Z",
      "side": 1,
      "message": "Iwona, can you please recommend the best way to check for the new code and whether you think it\u0027s the right way to proceed here? So far it looks like the new API is a subset of the old one, and with this patch the daemon tries a no longer supported operation as a way to differentiaite.",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ba3cbe_30c9912d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2023-03-31T08:46:39Z",
      "side": 1,
      "message": "The old one doesn\u0027t exist.\nFrom upstream kernel perspective, we\u0027re committed to maintain backwards compatibility, but only for the code that exist in upstream. We can\u0027t ever remove existing uAPI, so there\u0027s no dedicated mechanism to discover uAPI \"version\".\n\nI think what Andrew suggested is simply to invert the logic here.\nIf we wish to maintain userspace compatibility with the old out-of-tree module, we can simply test for /sys/bus/peci/rescan presence first.",
      "parentUuid": "53e9848d_1dc4c29d",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89960162_41867da5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-03-31T09:21:36Z",
      "side": 1,
      "message": "Hi Iwona,\n\nThank you for answering.\n\n\u003e The old one doesn\u0027t exist.\n\nOf course in never existed in upstream, no doubt. But it exists and is relied upon by downstream forks so and I assume IntelCPUSensor maintainers would prefer to continue supporting it, hence I\u0027m asking for the most practical way given the situation.\n\n\u003e I think what Andrew suggested is simply to invert the logic here.\n\nSo with the patch as it currently is, the daemon tries opening /dev/peci-0 , and right there if it fails tries to continue doing a \"rescan\" in case it might be needed. The new code is above the old code and is run as soon as it\u0027s discovered /dev/peci-0 doesn\u0027t exist.\n\nI\u0027ve just checked and indeed the old code doesn\u0027t have rescan at all (that surprised me), so I\u0027ll just check for it first, agreed. Thank you for the feedback.",
      "parentUuid": "b5ba3cbe_30c9912d",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35186181_f8bf3826",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-03-31T11:03:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89960162_41867da5",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71663b49_cbd5cc13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-03-31T11:03:47Z",
      "side": 1,
      "message": "Now the new rescan file presence is checked first.",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8137e1d_9af5af42",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-03-31T02:41:12Z",
      "side": 1,
      "message": "We should be testing the presence of the new ABI first before falling back to the original device path. That way the new code paths are tried first now that we have them, not used only only once we remove the old paths.",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f65acd7_6d8965af",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-03-31T11:03:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8137e1d_9af5af42",
      "revId": "83947997df106bc68273d908002a68d8422eb0fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}