{
  "comments": [
    {
      "key": {
        "uuid": "936c1397_1b4e5ba4",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "In terms of design, I\u0027d like to use this as an opportunity to discuss some further cleanups.  It\u0027s much easier if each device is being accessed by a single application.  Having NodeManagerProxy and IPMBSensor both accessing ME is causing some messy things to happen like duplication of this code between them.  Is there an eventual plan there between those two?",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98587492_1c17d013",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "It\u0027s a either or situation. We read the sensor either using proxy or using ME.  \n\nA situation of having NodeManagerProxy and IPMBSensor reading the same sensor data is redundant as will not but supported by exiting code.  \n\nAnd I am happy to take up clean up suggestions, but can we get this merged? and take up clean on top of this?",
      "parentUuid": "936c1397_1b4e5ba4",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "887cd815_52313569",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "Does this need to log an error or return an error, given that the operation failed?",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55a4d44c_24654a54",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "We return result with no data in case if failure. \nAnd if (data.empty()) is used in read function to incrementError (one time logging is done in when number of error cross errorThreshold, and sensor object is marked as not functional).",
      "parentUuid": "887cd815_52313569",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5001979a_426aa949",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "input.size()\u003d\u003doffset+1 will pass line 70, this is undefined",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53387b5f_b193b389",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "We have a check for that in line 70.",
      "parentUuid": "5001979a_426aa949",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5edc388_d7336720",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T17:42:31Z",
      "side": 1,
      "message": "My point is - if input.size() \u003d\u003d (offset+1)\n1. Line 70 will be false\n2. line 84 will get executed, but input[offset+1] is invalid",
      "parentUuid": "53387b5f_b193b389",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7808041b_cff3119e",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T18:09:01Z",
      "side": 1,
      "message": "Understood. I will add \u003c\u003d at line 70.",
      "parentUuid": "a5edc388_d7336720",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9b1d3f_210957c1",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "+1.  Also input[2] is possible to be invalid if fixed_offset is 0, and registerToRead is 0, and input.size() is 2.",
      "parentUuid": "a5edc388_d7336720",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d81db3be_ee08fe0f",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "Fixed offset is defined in line 62 and will not be zero until someone mess with the code.",
      "parentUuid": "fa9b1d3f_210957c1",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322416d2_8d3bdfd2",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 148,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "nit: since you refer new method as read_me, I would flip the logic here, make a flag isReadMe",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcab7435_deae9750",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 148,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "322416d2_8d3bdfd2",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57a263a4_4a134e1e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 157,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "This could just modify class member commandData directly to avoid an extra creation and copy of vector",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 47
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9054f37_dd5db651",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 157,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "57a263a4_4a134e1e",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 47
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e814853e_50cc907c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 291,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "repeating the same code for IpmbType::PXE1410CVR.\nOnly difference is readingFormat\n\nconsider combine them",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 291,
        "endChar": 5
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "469ac293_e8ed28bd",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 291,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "I have split this patch, and there is one rebased on top of this for code clean up. \nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/49718\nCan you please go through that, and I will address the clean up comments there.",
      "parentUuid": "e814853e_50cc907c",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 291,
        "endChar": 5
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac09055d_3fbe711e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 477,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "This is only needed for certain sensor type. Current implementation would call this for all sensors.\nI feel like it can be optimized.",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 477,
        "endChar": 75
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55705ae1_326420c5",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 477,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "ac09055d_3fbe711e",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 477,
        "endChar": 75
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d7d3e97_5520978c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 486,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "need update to match the code",
      "range": {
        "startLine": 485,
        "startChar": 45,
        "endLine": 486,
        "endChar": 16
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66cdbf62_3dd44ee7",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 486,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "8d7d3e97_5520978c",
      "range": {
        "startLine": 485,
        "startChar": 45,
        "endLine": 486,
        "endChar": 16
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}