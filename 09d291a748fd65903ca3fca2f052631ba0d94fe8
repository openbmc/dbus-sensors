{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "936c1397_1b4e5ba4",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "In terms of design, I\u0027d like to use this as an opportunity to discuss some further cleanups.  It\u0027s much easier if each device is being accessed by a single application.  Having NodeManagerProxy and IPMBSensor both accessing ME is causing some messy things to happen like duplication of this code between them.  Is there an eventual plan there between those two?",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98587492_1c17d013",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "It\u0027s a either or situation. We read the sensor either using proxy or using ME.  \n\nA situation of having NodeManagerProxy and IPMBSensor reading the same sensor data is redundant as will not but supported by exiting code.  \n\nAnd I am happy to take up clean up suggestions, but can we get this merged? and take up clean on top of this?",
      "parentUuid": "936c1397_1b4e5ba4",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef036e96_fbaeddc2",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-24T01:18:49Z",
      "side": 1,
      "message": "\u003e It\u0027s a either or situation. We read the sensor either using proxy or using ME.  \n\u003e \n\u003e A situation of having NodeManagerProxy and IPMBSensor reading the same sensor data is redundant as will not but supported by exiting code.  \n\nThis is my point.  Why are two different services managing the resources behind the ME.  This is an ME specific command here, it should probably be going in node manager proxy eventually.\n\n\u003e \n\u003e And I am happy to take up clean up suggestions, but can we get this merged? and take up clean on top of this?\n\nOnce it has made the other required changes that were asked for, that\u0027s fine, but given you have an interest, and this is going the wrong direction in terms of design abstractions, I\u0027d like to understand the path to getting to the appropriate design before merging this, even if it\u0027s not done right away.",
      "parentUuid": "98587492_1c17d013",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4fc3240_9ad3905a",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-24T08:57:26Z",
      "side": 1,
      "message": "Why are two different services managing the resources behind the ME.\n- In porxy method ME is acting as a bridge and the command send from BMC is directly going to sensor. This has some security related concerns, as ME is blindly forwarding the command. \nIn some cases because of security concerns proxy is disabled. That is when we use getPmbusReadings method.\n- In getPmbusReadings sensor data is read from ME, not from actual sensor. And ME is able to give this data as it has read from sensor and stored it (periodic polling). \n\nI\u0027d like to understand the path to getting to the appropriate design before merging this.\n- The current design to incorporate getPmbusReadings into IpmbSensor class was under the idea that even though these are two methods we are reading the same sensor data. \n\nRegarding abstractions, I have two suggestions\n1) We could inherit a class from IpmbSensor, and only override read method in it.\n2) Make a separate sensor class which inherit from Sensor structure and move all getPmbusReadings related code there. Treating it as a separate sensor.",
      "parentUuid": "ef036e96_fbaeddc2",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38ccc42f_6d5aee40",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-01-06T01:44:29Z",
      "side": 1,
      "message": "I think the question is ,long term, whether it make sense to encapsulate the ME specific commands and processing of data inside NodeManagerProxy service. Or in other words, let NodeManagerProxy to decide which command to send to ME when reading these sensors.",
      "parentUuid": "f4fc3240_9ad3905a",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9929c1b5_0ec31ac9",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38ccc42f_6d5aee40",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887cd815_52313569",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "Does this need to log an error or return an error, given that the operation failed?",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a4d44c_24654a54",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "We return result with no data in case if failure. \nAnd if (data.empty()) is used in read function to incrementError (one time logging is done in when number of error cross errorThreshold, and sensor object is marked as not functional).",
      "parentUuid": "887cd815_52313569",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5665114b_e0a5ef92",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-24T01:18:49Z",
      "side": 1,
      "message": "I meant log an error to stderr, but sure, that\u0027s fine.",
      "parentUuid": "55a4d44c_24654a54",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2a2e8a5_fb5a8bca",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5665114b_e0a5ef92",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5001979a_426aa949",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "input.size()\u003d\u003doffset+1 will pass line 70, this is undefined",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53387b5f_b193b389",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "We have a check for that in line 70.",
      "parentUuid": "5001979a_426aa949",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5edc388_d7336720",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T17:42:31Z",
      "side": 1,
      "message": "My point is - if input.size() \u003d\u003d (offset+1)\n1. Line 70 will be false\n2. line 84 will get executed, but input[offset+1] is invalid",
      "parentUuid": "53387b5f_b193b389",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7808041b_cff3119e",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T18:09:01Z",
      "side": 1,
      "message": "Understood. I will add \u003c\u003d at line 70.",
      "parentUuid": "a5edc388_d7336720",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa9b1d3f_210957c1",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T18:09:16Z",
      "side": 1,
      "message": "+1.  Also input[2] is possible to be invalid if fixed_offset is 0, and registerToRead is 0, and input.size() is 2.",
      "parentUuid": "a5edc388_d7336720",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d81db3be_ee08fe0f",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T19:14:23Z",
      "side": 1,
      "message": "Fixed offset is defined in line 62 and will not be zero until someone mess with the code.",
      "parentUuid": "fa9b1d3f_210957c1",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb3194c_8a9a2f97",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-24T01:18:49Z",
      "side": 1,
      "message": "Please just range check this against the largest fixed or variable indexes you use to make it VERY clear the code can\u0027t walk over the end of the range.  As written, it might be correct, but it isn\u0027t clear.",
      "parentUuid": "d81db3be_ee08fe0f",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df905005_3c9df8ef",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-24T08:57:26Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "9cb3194c_8a9a2f97",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6784e45_fa9660ba",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 84,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df905005_3c9df8ef",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 40
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "322416d2_8d3bdfd2",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 148,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "nit: since you refer new method as read_me, I would flip the logic here, make a flag isReadMe",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcab7435_deae9750",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 148,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "322416d2_8d3bdfd2",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c3a5a18_a53d7e54",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 18
      },
      "lineNbr": 148,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcab7435_deae9750",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 28
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57a263a4_4a134e1e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 157,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "This could just modify class member commandData directly to avoid an extra creation and copy of vector",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 47
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9054f37_dd5db651",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 157,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "57a263a4_4a134e1e",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 47
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c11ab630_81a10613",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 157,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9054f37_dd5db651",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 47
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e814853e_50cc907c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 291,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "repeating the same code for IpmbType::PXE1410CVR.\nOnly difference is readingFormat\n\nconsider combine them",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 291,
        "endChar": 5
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "469ac293_e8ed28bd",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 291,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "I have split this patch, and there is one rebased on top of this for code clean up. \nhttps://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/49718\nCan you please go through that, and I will address the clean up comments there.",
      "parentUuid": "e814853e_50cc907c",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 291,
        "endChar": 5
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "977e8087_3106b643",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 291,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "469ac293_e8ed28bd",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 291,
        "endChar": 5
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac09055d_3fbe711e",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 477,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "This is only needed for certain sensor type. Current implementation would call this for all sensors.\nI feel like it can be optimized.",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 477,
        "endChar": 75
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55705ae1_326420c5",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 477,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address it.",
      "parentUuid": "ac09055d_3fbe711e",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 477,
        "endChar": 75
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "664ac591_71ffba40",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 477,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-13T01:09:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "55705ae1_326420c5",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 477,
        "endChar": 75
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7d3e97_5520978c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 486,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-17T00:47:26Z",
      "side": 1,
      "message": "need update to match the code",
      "range": {
        "startLine": 485,
        "startChar": 45,
        "endLine": 486,
        "endChar": 16
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66cdbf62_3dd44ee7",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 486,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-17T04:37:55Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "8d7d3e97_5520978c",
      "range": {
        "startLine": 485,
        "startChar": 45,
        "endLine": 486,
        "endChar": 16
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01709647_0ad4c2c8",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 486,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-16T16:31:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66cdbf62_3dd44ee7",
      "range": {
        "startLine": 485,
        "startChar": 45,
        "endLine": 486,
        "endChar": 16
      },
      "revId": "09d291a748fd65903ca3fca2f052631ba0d94fe8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}