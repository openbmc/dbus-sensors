{
  "comments": [
    {
      "key": {
        "uuid": "a09d2757_614cd811",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-27T18:26:38Z",
      "side": 1,
      "message": "Technically this is wrong.  This is \"we got aborted\" which can happen if we\u0027re shutting down.  We really shouldn\u0027t print in this case.",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 50
      },
      "revId": "3567b3a20adcb668ab940196284c5f01972f48f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa01f9fa_9fa19ffc",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-27T18:26:38Z",
      "side": 1,
      "message": "We should return in all cases if our timer fails, not just on aborted.",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 19
      },
      "revId": "3567b3a20adcb668ab940196284c5f01972f48f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07dcb0e9_0476c6c8",
        "filename": "src/Utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 249,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-27T02:30:53Z",
      "side": 1,
      "message": "Not something you have to change, but this would be more readable to me if it were\n\n if (powerState \u003d\u003d PowerState::biosPost \u0026\u0026 !(isPowerOn() \u0026\u0026 hasBiosPost()))\n {\n   return false;\n }\n\nHaving said that, do we have to test `isPowerOn()` here? Is `hasBiosPost()` not enough? Or is it not reset if power is removed?",
      "range": {
        "startLine": 249,
        "startChar": 46,
        "endLine": 249,
        "endChar": 78
      },
      "revId": "3567b3a20adcb668ab940196284c5f01972f48f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b82b0133_148b1584",
        "filename": "src/Utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 249,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2021-07-27T07:53:01Z",
      "side": 1,
      "message": "It is hard for me to say anything about `hasBiosPost()` because my system (AMD x86) doesn\u0027t really implement it.\nAt this time this code is just a copy of a Sensor class method:\nhttps://github.com/openbmc/dbus-sensors/blob/master/include/sensor.hpp#L346\n\nIn a subsequent commit we should drop Sensor class method and replace it with this function. So I think we should stick with the same code for now, and make all the necessary modification later. This would make the next patch easier to read.\n\nAnyway, this code was added in a commit https://github.com/openbmc/dbus-sensors/commit/961bf09a2c89585601175e74ec3cb2590b911aa8\n\nI think in some cases `isPowerOn()` can change its state before `hasBiosPost()` changes, and that is what this code was trying to cover.",
      "parentUuid": "07dcb0e9_0476c6c8",
      "range": {
        "startLine": 249,
        "startChar": 46,
        "endLine": 249,
        "endChar": 78
      },
      "revId": "3567b3a20adcb668ab940196284c5f01972f48f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5539aa7c_0fa0924d",
        "filename": "src/Utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 249,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-27T11:08:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b82b0133_148b1584",
      "range": {
        "startLine": 249,
        "startChar": 46,
        "endLine": 249,
        "endChar": 78
      },
      "revId": "3567b3a20adcb668ab940196284c5f01972f48f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}