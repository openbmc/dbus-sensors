{
  "comments": [
    {
      "key": {
        "uuid": "87b31d49_5e3f90ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-07T07:14:48Z",
      "side": 1,
      "message": "Done this way, this is going to require a change to phosphor-dbus-interfaces, but I suspect you don\u0027t actually need it.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa22ef0e_bbc87d3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T04:38:51Z",
      "side": 1,
      "message": "Hmm, interesting. Curious why it would need a change to that module also.",
      "parentUuid": "87b31d49_5e3f90ba",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d2c0533_afa3864b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-08T05:10:44Z",
      "side": 1,
      "message": "Because phosphor-dbus-interfaces is the projects documentation for DBus APIs.  Also, as written, I\u0027m guessing it\u0027s not going to be accepted, as you\u0027d have to implement it in all sensors (given that you\u0027ve made it non-optional).  I suspect it needs to go into its own API.",
      "parentUuid": "fa22ef0e_bbc87d3d",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e78a4654_b134f9ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T16:55:36Z",
      "side": 1,
      "message": "Cool, thanks for telling me about phosphor-dbus-interfaces, didn\u0027t know about that one. I\u0027m happy to add it to the YAML documentation there, it looks straightforward. Also, it\u0027s completely optional: if that parameter is missing, the assumption is that it\u0027s false (the sensor is read-only, not read-write, from IPMI\u0027s point of view).",
      "parentUuid": "6d2c0533_afa3864b",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48911e11_784923cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-07T07:14:48Z",
      "side": 1,
      "message": "Why would anyone choose to set it to false?",
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02891986_414561de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T04:38:51Z",
      "side": 1,
      "message": "They wouldn\u0027t, but I needed some variable I could set to indicate presence of this choice, and bool is the simplest.",
      "parentUuid": "48911e11_784923cc",
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bad6f54_a7cec9b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-08T05:10:44Z",
      "side": 1,
      "message": "I get it now.  This is driving the SDR.",
      "parentUuid": "02891986_414561de",
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42a89d53_7f00575a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T16:55:36Z",
      "side": 1,
      "message": "Cool, good. It also isn\u0027t tied only to IPMI, it\u0027s a general thing that could also inform Redfish permissions in the future, if desired.",
      "parentUuid": "7bad6f54_a7cec9b5",
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fea6cc23_cf17b297",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-07T07:14:48Z",
      "side": 1,
      "message": "See comment in later files.  Why do 2 dbus requests instead of one?  Have IPMI try to call SetProperty, and if it fails, you know the sensor isn\u0027t writeable.  So far as I\u0027m aware, there isn\u0027t a \"this sensor is writeable\" field in the SDR we need to fill.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 57
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f909238c_9e230b1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T04:38:51Z",
      "side": 1,
      "message": "SetProperty should succeed for all sensors, since write commands aren\u0027t restricted over D-Bus. If you\u0027re local running on the BMC, you can change any sensor at will. We might not want this for all IPMI users, though. In the IPMI service we\u0027re using, all sensors default to read-only permission, so I needed a way to tell it to mark some of them as read-write permission, for sensors I want external users to be able to change.\n\nAs for \"this sensor is writeable\" field in the SDR, I checked the IPMI spec, and it\u0027s byte 11 bit 7 in the SDR, table 43-1 in the IPMI document.",
      "parentUuid": "fea6cc23_cf17b297",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 57
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c459ef1_b96fb72f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T16:55:36Z",
      "side": 1,
      "message": "An example is here: https://github.com/openbmc/phosphor-host-ipmid/blob/a8be7dc839e1dbf561dd255a4ee1e7b6fb091c8e/sensorhandler.cpp#L959\nI could change the name of \"ExtSettable\" to \"Mutability\" or \"Mutable\" if desired, it would make more sense against the naming in the code here.",
      "parentUuid": "f909238c_9e230b1d",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 57
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7df7908_8c9ada33",
        "filename": "src/PwmSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-07T07:14:48Z",
      "side": 1,
      "message": "Um...... Sensor override is a thing, and makes this statement false.  Basically every sensor is externally settable.",
      "range": {
        "startLine": 98,
        "startChar": 16,
        "endLine": 98,
        "endChar": 63
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53342969_e5940d4e",
        "filename": "src/PwmSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T04:38:51Z",
      "side": 1,
      "message": "By \"externally\" I meant somebody not on the BMC, perhaps using IPMI to communicate with the BMC. I thought all the sensors were read-only by default, from the point of view of somebody outside the BMC. Inside the BMC, of course, every sensor can be easily written with D-Bus.",
      "parentUuid": "c7df7908_8c9ada33",
      "range": {
        "startLine": 98,
        "startChar": 16,
        "endLine": 98,
        "endChar": 63
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32160ed1_181a34ca",
        "filename": "src/PwmSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-07T07:14:48Z",
      "side": 1,
      "message": "I\u0027m trying to understand the point of this.  Why do callers need to know if something is settable?  Can\u0027t they just try to set it, and if it returns that it\u0027s read only, they\u0027ll know.\n\nAlso, you\u0027ve added an config property, but you haven\u0027t actually enforced its behavior anywhere, by making the Value property read-only.",
      "range": {
        "startLine": 104,
        "startChar": 44,
        "endLine": 104,
        "endChar": 55
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b684fded_8ac2e8c0",
        "filename": "src/PwmSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2020-09-08T04:38:51Z",
      "side": 1,
      "message": "Again, it\u0027s not about D-Bus permissions. All sensors remain writeable in D-Bus. This is only a hint to the external service (IPMI in this case, but it\u0027s not limited to IPMI) that they should serve the sensor to their external users, outside the BMC, with read-write permissions instead of read-only permissions.",
      "parentUuid": "32160ed1_181a34ca",
      "range": {
        "startLine": 104,
        "startChar": 44,
        "endLine": 104,
        "endChar": 55
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6856111f_d625c11b",
        "filename": "src/PwmSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000502
      },
      "writtenOn": "2020-09-08T20:23:19Z",
      "side": 1,
      "message": "Ed, would you prefer if this was IPMI specific (e.g. calling it IPMISettable)? Or should we keep it general purpose?\n\nLooks like you\u0027ve come to an understanding of why we want this, but I\u0027ll restate it again just to be clear. We\u0027re looking for a way to configure which sensors should be advertised as settable in the IPMI SDR. We have a pretty hacky patch to add write support to intel-ipmi-oem/src/sensorcommands.cpp. This property would allow opting in to IPMI sensor writes.",
      "parentUuid": "b684fded_8ac2e8c0",
      "range": {
        "startLine": 104,
        "startChar": 44,
        "endLine": 104,
        "endChar": 55
      },
      "revId": "3abb40674b474d4f522f27696c4c372a3a597709",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}