{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb08b400_8bc33fa9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "net in support of this, would just like to see the reactor abstraction limited to only reactors.",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afb2ea10_958596f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "Thanks again for the feedback üëç",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "965bf07b_513465a6",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "Same as below, lets not re-invent an API that already exists in a sensor-specific context.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 6
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d222f39_5a6eb7e8",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "I feel like you are missing the point of my efforts on common code.\n\nIf we make requesting the sensor part of common code, at some point we could abstract that so an individual sensor implementation does not have to call this at all.\n\nI have not seen any sensor reactor in this repo which does not request a bus name so i do not see the point of duplicating this call to each sensor reactor.",
      "parentUuid": "965bf07b_513465a6",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 6
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d5688a_67221d2b",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "We shouldn\u0027t reinvent asio::post in a different namespace.",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7ec0743_3750f1b3",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "The point here is to avoid having to pass `io` into it.\n\nIMO this simplifies the API from the sensor perspective and makes the code more readable.",
      "parentUuid": "f5d5688a_67221d2b",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "876fa8bb_edbe2f8c",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "Why protected here?",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de52f06c_ee1c9735",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "Testing. I make things protected so a class can inherit from it and still access the members.\n\nIf i were to make it private then it would not be easily possible.",
      "parentUuid": "876fa8bb_edbe2f8c",
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de0bbc4c_13cfa36e",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "Probably don\u0027t need to store this as a bool in the constructor.  Just make the \"setupManufacturingModeMatch\" method available on the class.",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 52,
        "endChar": 40
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f73e396_87bf1d76",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "I am storing it here because for most reactors they call it just before `io.run()` function.\n\nIf we make it available to call then it may be called twice or at some different point in the code.\n\nAgain, i feel like this patch is hitting some misunderstanding. The point of common code is to provide all the control flows which are common between sensor applications.\n\nIt\u0027s simpler code for the sensor application to just pass a single bool in the constructor rather than call the function by itself.",
      "parentUuid": "de0bbc4c_13cfa36e",
      "range": {
        "startLine": 52,
        "startChar": 15,
        "endLine": 52,
        "endChar": 40
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a4afce5_31b72494",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "nit, line wrapping",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 53
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5bcc7fc_a238b274",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-21T17:53:23Z",
      "side": 1,
      "message": "in terms of an API, this really isn\u0027t something we should expose out of a \"general\" class.  It leaks the implementation that we\u0027re using dbus, sdbusplus, and gives raw access to the message.",
      "range": {
        "startLine": 72,
        "startChar": 9,
        "endLine": 72,
        "endChar": 17
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e6ab27c_e9f49288",
        "filename": "src/Reactor.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-21T18:30:24Z",
      "side": 1,
      "message": "I\u0027m aware the abstraction is suboptimal. But i would rather have a common abstraction which is suboptimal (and then refactor that)\n\nrather than each sensor application (and whoever maintains it) coming up with some \u0027clever\u0027 solution on their own, and then we get 5 flavors of the same problem.\n\n\nIf you bring the requirement to have a \u0027good\u0027 api to any common code, then we might as well abandon any attempt at creating such in the first place.\n\n\nIMO, basically you are saying that we cannot de-duplicate the code because it\u0027s a bad code.\n\nIf we want to de-duplicate this then we would have to fix it 5 times and then de-duplicate the result? That sounds like we are just making more work for ourselves.",
      "parentUuid": "b5bcc7fc_a238b274",
      "range": {
        "startLine": 72,
        "startChar": 9,
        "endLine": 72,
        "endChar": 17
      },
      "revId": "c09b32987670f0e510e5b5c3ca71eb1108f094dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}