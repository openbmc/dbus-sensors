{
  "comments": [
    {
      "key": {
        "uuid": "628eaeb2_c2562837",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "Please call this something over than \"Address\"  Maybe \"ID\"?  Ideally this would match whatever the term that\u0027s used in the ME EDS, such that one could reference it when finding these IDs.\n\n\nIs there no way to determine these IDs automatically?",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c3d6d9_0ec2403d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "628eaeb2_c2562837",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e403181_c5e203f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 26,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T21:59:17Z",
      "side": 1,
      "message": "Device Index is configured while making an IFWI. So can change, and that is why we keep it as configuration in BMC as well.",
      "parentUuid": "c7c3d6d9_0ec2403d",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b64691b_428e2829",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "Aren\u0027t both of these using \"IPMI\", just variations of the commands?  Maybe we need some better names here?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 52
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c751315_cfa2a78e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Yes both are IPMI, will address this.",
      "parentUuid": "1b64691b_428e2829",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 52
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21cedf99_114344c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "Why is this needed?  More details here, is this an index?  An enum?  an array?  Why can\u0027t we determine this automatically?  How does this relate to the PMbus specification.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 58
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8589e4cf_63786939",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Imagine a sensor X which has values for temperature, voltage and current. These values are stored in different registers. \nLet us assume a mapping.\n\nregisters 1 \u003d temperature\nregisters 2 \u003d voltage\nregisters 3 \u003d current\n\nIn \"Get PMBUS Readings\" we get all the registers in response, and our code should read the register corresponding to the type we are interested in. That is what this variable is for. \n\nAnd this mapping is taken as a configuration parameter while building the IFWI. And that is why it is kept as a configuration parameter in BMC.",
      "parentUuid": "21cedf99_114344c4",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 58
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa785136_7e4970ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-01T20:19:48Z",
      "side": 1,
      "message": "That would kind of imply that we now need a single config that takes a list of registers to produce as sensors, rather than breaking it up per sensor.  If they\u0027re all returned in one response, we shouldn\u0027t be duplicating the request for the same data, right?",
      "parentUuid": "8589e4cf_63786939",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 58
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b44121d_5b12a149",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2021-11-12T14:20:08Z",
      "side": 1,
      "message": "yes if Get PMBUS Reading is used instead of pmbus proxy, the response will contain reading  for all the mapped sensors",
      "parentUuid": "fa785136_7e4970ca",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 58
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63bfb7d6_f62a28de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "Does this sensor deserve a new \"Type\" in the configuration?  Given the level of changes it\u0027s going through, it feels like it would need one.",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ee64f3_06ab6fb1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "These are not a different type of sensors rt? The sensor class is still the same (like MpsBridgeTemp, PxeBridgeTemp etc). Only how we read is different, that is why we have introduced \"ReadMethod\" in configuration.",
      "parentUuid": "63bfb7d6_f62a28de",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e750b7a4_460b663d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "Please rephrase to \"the old implementation is still present\"  \"backward compatible\" implies that we replaced something.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 21
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bdfb084_be2d8f49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "e750b7a4_460b663d",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 21
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c298d8c7_f7fa5460",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "nit: This is stated previously on line 13, no need to repeat.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 11
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3978ee8_57387bbd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 45,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will remove this.",
      "parentUuid": "c298d8c7_f7fa5460",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 11
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee1aab0d_d90a21cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "nit: typo.",
      "range": {
        "startLine": 53,
        "startChar": 22,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bcd13bf_e7f4725a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 53,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "ee1aab0d_d90a21cb",
      "range": {
        "startLine": 53,
        "startChar": 22,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba35de8f_44399ad8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "As a general rule, I would like to see cleanups done in other commits, but I guess we\u0027re here now, so it is what it is.",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58eb666a_05a69cd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 56,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Yes I understand this. Clean up was not part of my original plan (you can check initial patch sets). \n\nBut I will keep this in mind for future patches.",
      "parentUuid": "ba35de8f_44399ad8",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be02c6c1_3136ae49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:08:20Z",
      "side": 1,
      "message": "ok, so from the comment above, I see that this is an index.  What does it index?  Why is it needed, when it wasn\u0027t needed previously?",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e735825e_ca2478f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Already answered in line 28.\n\nAnd in old method (proxy), we could send request to get just Temperature or Current Output. \n\nLike\n0x8D means read Temperature\n0x8C means read Current Output\n\nHere 8D means Temperature and is fixed, and it is sensor\u0027s responsibility to return the appropriate register. \n\nBut in new method we receive all mapped registers, typically 6 or 7 register values, we need to know which register is corresponding to  Temperature or Current Output etc. \n\nIn the above example register 1 of response is Temperature.",
      "parentUuid": "be02c6c1_3136ae49",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "155594b7_f921dde0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-01T20:19:48Z",
      "side": 1,
      "message": "please answer by making your commit message more clear.",
      "parentUuid": "e735825e_ca2478f1",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08cd4c5_c1a7672a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 83,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2021-11-15T18:33:23Z",
      "side": 1,
      "message": "updated",
      "parentUuid": "155594b7_f921dde0",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0603a9f_69640b3b",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 77,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "These shadow the names of the variables on line 46 (I realize they\u0027re in a different namespace).  Please make these names somewhat unique, instead of putting them in a namespace.  This makes them easier to search for later.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 42
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ef0597a_d0d35257",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 77,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will give a different name.",
      "parentUuid": "c0603a9f_69640b3b",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 42
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a1356f1_7c49bdb8",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "Please add a comment where these are coming from.  Is this the pmbus specification?",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a83858_8a984928",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will address this.",
      "parentUuid": "2a1356f1_7c49bdb8",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c7ee0c8_bc9ff92a",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "Please use size_t for offsets.",
      "range": {
        "startLine": 80,
        "startChar": 10,
        "endLine": 80,
        "endChar": 17
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e207c4c_0efd5f8d",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "1c7ee0c8_bc9ff92a",
      "range": {
        "startLine": 80,
        "startChar": 10,
        "endLine": 80,
        "endChar": 17
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f31c42_a1659b57",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 85,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "This seems like something we should rely on the user for, and in this code doesn\u0027t look neccesary, please remove.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 19
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "614e6fa4_c269e9a7",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 85,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will remove.",
      "parentUuid": "36f31c42_a1659b57",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 19
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e97eef0a_a3144fcd",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "Why not just make offset size_t on the line above and avoid the static_cast altogether.",
      "range": {
        "startLine": 90,
        "startChar": 43,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd0ab65f_558aa3e1",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "e97eef0a_a3144fcd",
      "range": {
        "startLine": 90,
        "startChar": 43,
        "endLine": 90,
        "endChar": 49
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac7724c9_96534f8a",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 177,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "Why does this need to be a method;  Wouldn\u0027t a switch statement be simpler and optimize better?",
      "range": {
        "startLine": 176,
        "startChar": 0,
        "endLine": 177,
        "endChar": 21
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51089dd8_e9f23ad1",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 13
      },
      "lineNbr": 177,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "read() is a function which is called continuously, with the interval of sensorPollMs. \nIt was a switch statement inside read() function, which means the switch is called every time. \nThere was a suggestion from one of the reviewers in one of the earlier patch to optimize the same. Hence I removed the switch case and added this readFunction. \n\nDuring init() we use the switch case (one time) to initialize the readFunction with the appropriate code. And in runtime read() function will use readFunction instead of switch case.",
      "parentUuid": "ac7724c9_96534f8a",
      "range": {
        "startLine": 176,
        "startChar": 0,
        "endLine": 177,
        "endChar": 21
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edfe8c17_4220eb27",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 528,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "This looks duplicated between the branches.",
      "range": {
        "startLine": 528,
        "startChar": 27,
        "endLine": 528,
        "endChar": 48
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b14c9c8_5a6877f1",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 528,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "I did not get you.\nThis code is same as line 367 in code to left.",
      "parentUuid": "edfe8c17_4220eb27",
      "range": {
        "startLine": 528,
        "startChar": 27,
        "endLine": 528,
        "endChar": 48
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f977d8f_a40cf5cc",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 545,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "nit, another set of whitespace.",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a6c637_16322cfb",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 545,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will remove.",
      "parentUuid": "6f977d8f_a40cf5cc",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b169f939_8abe78fa",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 755,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "nit: extra whitespace injected.",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6098fe6_615df021",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 755,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Will remove.",
      "parentUuid": "b169f939_8abe78fa",
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "502cdc4a_04b94b74",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-27T18:17:22Z",
      "side": 1,
      "message": "I\u0027m having a lot of trouble determining which parts of this are rearranging code, and which parts of this are new code for this new feature.  Please separate them into different patches.",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ab0d63e_d2026d24",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-10-27T20:37:26Z",
      "side": 1,
      "message": "Only line 807 (setReadMethod) is code corresponding to new feature.\n\nLines 808, 809, 810 are abstracted as part of clean up.",
      "parentUuid": "502cdc4a_04b94b74",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e8bb2cd_12e71578",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-01T20:19:48Z",
      "side": 1,
      "message": "If it\u0027s that trivial, then please split them into separate patches.",
      "parentUuid": "8ab0d63e_d2026d24",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9527a861_cc30a1e3",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2021-11-12T14:20:08Z",
      "side": 1,
      "message": "sure will do",
      "parentUuid": "9e8bb2cd_12e71578",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee5a9d3e_b8a1d8f7",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2021-11-15T18:33:23Z",
      "side": 1,
      "message": "splited the patch, will push the clean as another patch",
      "parentUuid": "9527a861_cc30a1e3",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3969243_51bb9b15",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 13
      },
      "lineNbr": 810,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-16T05:03:15Z",
      "side": 1,
      "message": "@Ed, Patch is spitted into separate patches. The patch is trivial.",
      "parentUuid": "ee5a9d3e_b8a1d8f7",
      "range": {
        "startLine": 807,
        "startChar": 3,
        "endLine": 810,
        "endChar": 61
      },
      "revId": "3179876a615234f71baeda21f59cf8a42dd92cc3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}