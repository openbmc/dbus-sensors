{
  "comments": [
    {
      "key": {
        "uuid": "723f6c0f_73c7112d",
        "filename": "include/sensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-18T19:23:48Z",
      "side": 1,
      "message": "If we\u0027re going to impose this new dependency, we should really be consistent.  We expose a number of APIs in dbus-sensors that aren\u0027t pulled from phosphor-dbus-interfaces.  For better or worse, that insulates dbus-sensors somewhat from breaking API changes that have happened on sensors in the past.\n\nIf we\u0027re going to go this route (which I\u0027m not convinced is the right way) I\u0027d rather we be consistent about it, and use phosphor-dbus-interfaces for all our interfaces, not just this new one.\n\nUnfortunately, that would be a lot of work, and would involve reworking a lot of phosphor-dbus-interfaces to be more IO aware, which I\u0027m guessing you don\u0027t want to do.\n\nSo in this case, I\u0027m going to recommend doing what we\u0027ve done in similar cases, by simply adding the direct string values as the \"unit\" and passing that value around (as either a std::string or a const char*).  That drops the dependency on phosphor-dbus-interfaces again, and would simplify dbus-sensors as a whole.",
      "range": {
        "startLine": 26,
        "startChar": 9,
        "endLine": 26,
        "endChar": 69
      },
      "revId": "1fdaa226573e5c405383fd31d6990b13cddae557",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aebc2b9_3c0ad557",
        "filename": "include/sensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-09-18T21:18:23Z",
      "side": 1,
      "message": "Ed,\nIf I understood correctly, you\u0027re tolking about using the hardcoding const stings, like\n\n``` \nconstexpr char * volts \u003d \"xyz.openbmc_project.Sensor.Value.Unit.Volts\";\n```\n\nOk, I\u0027m ready suggest a new patch set with following the recommendations for redressing the shortcomings identified, if there is no anybody objection. \n\nThanks.",
      "parentUuid": "723f6c0f_73c7112d",
      "range": {
        "startLine": 26,
        "startChar": 9,
        "endLine": 26,
        "endChar": 69
      },
      "revId": "1fdaa226573e5c405383fd31d6990b13cddae557",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78e1bbfd_ff579ddd",
        "filename": "include/sensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2020-09-19T11:52:02Z",
      "side": 1,
      "message": "I prefer we use phosphor-dbus-interfaces everywhere we can: that is how it suppose to work, isn\u0027t it?\nBut if this is lit of refactoring, this should be separate patchset.",
      "parentUuid": "4aebc2b9_3c0ad557",
      "range": {
        "startLine": 26,
        "startChar": 9,
        "endLine": 26,
        "endChar": 69
      },
      "revId": "1fdaa226573e5c405383fd31d6990b13cddae557",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23743e76_6662f6dd",
        "filename": "include/sensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-19T15:12:34Z",
      "side": 1,
      "message": "Igor, yes.  In this case, I suspect they might be inlined into each sensor, but I haven\u0027t actually tried it, so I\u0027m not sure how it ends up.\n\nAndrei,\n\nToday, dbus-sensors doesn\u0027t use phosphor-dbus-interfaces.  It was found to be a hindrance on development, and overall didn\u0027t provide the abstractions that dbus-sensors needed.  With that said, if you think it should, I\u0027m happy to have that discussion, especially if you\u0027re willing to put up the patchsets to move all of our APIs over to phosphor-dbus-interfaces, but that would very likely be outside the scope of this patch.  As is, having a single enum is not worth the dependency IMO.",
      "parentUuid": "78e1bbfd_ff579ddd",
      "range": {
        "startLine": 26,
        "startChar": 9,
        "endLine": 26,
        "endChar": 69
      },
      "revId": "1fdaa226573e5c405383fd31d6990b13cddae557",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "705f30dc_26c27331",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2020-09-19T11:52:02Z",
      "side": 1,
      "message": "Don\u0027t like this kind of stubs. I prefer you to put CFM from the beginning and just wait until corresponding commit to phopsphor-dbus-interface is merged.",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 164,
        "endChar": 3
      },
      "revId": "1fdaa226573e5c405383fd31d6990b13cddae557",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}