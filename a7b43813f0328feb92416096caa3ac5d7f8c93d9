{
  "comments": [
    {
      "key": {
        "uuid": "1e6b17e2_22355fa5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-16T15:02:15Z",
      "side": 1,
      "message": "This is the core of the problem.  This should be passed by a shared_ptr value.",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 61
      },
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c21c3b6_6e6d9456",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-16T14:58:27Z",
      "side": 1,
      "message": "Would suggest the \u0027conn\u0027 here is switched to a non-reference instead of making the parameter to this function a reference.  std::shared_ptrs really shouldn\u0027t be passed by reference.",
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac270dec_df89fba9",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-16T15:00:52Z",
      "side": 1,
      "message": "My rationale is:\n\nhttp://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-sharedptrparam\n\nThis function (monitorLanStatusChange) does not behave as suggested by R.35, so it should not take a shared_ptr by reference.",
      "parentUuid": "0c21c3b6_6e6d9456",
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fef5543a_48ea1386",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-16T15:02:15Z",
      "side": 1,
      "message": "This now is still UB if conn gets destroyed before the callback returns.  This should be passed by value.",
      "range": {
        "startLine": 429,
        "startChar": 10,
        "endLine": 429,
        "endChar": 14
      },
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5941c96_80128cde",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-16T17:17:25Z",
      "side": 1,
      "message": "I didn\u0027t realize initially these were statics.  This is totally incorrect, and them being statics will prevent the connection getting destroyed at the right time.  they need to be owned by something.\n\nFor the moment, we probably just need to do the capture by weak_ptr, and call lock() in the method to check to see if it\u0027s been destroyed.",
      "parentUuid": "fef5543a_48ea1386",
      "range": {
        "startLine": 429,
        "startChar": 10,
        "endLine": 429,
        "endChar": 14
      },
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89cb63a1_a835e934",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-03-17T01:48:45Z",
      "side": 1,
      "message": "\u003e I didn\u0027t realize initially these were statics.  This is totally incorrect.\n\nIt\u0027s a good point. It will be OK to move the matches into the main() after monitorLanStatusChange(), and make them non-static. That will make sure the objects being destroyed in the correct order.",
      "parentUuid": "f5941c96_80128cde",
      "range": {
        "startLine": 429,
        "startChar": 10,
        "endLine": 429,
        "endChar": 14
      },
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5382d0c8_6f4874aa",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 429,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-03-17T01:54:32Z",
      "side": 1,
      "message": "Yup, usually we either pass a shared_ptr by const reference, or by value.\nThe use case here is not really a good one.\nI will try to remove the shared_ptr for `conn` and just pass by reference.",
      "parentUuid": "ac270dec_df89fba9",
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e68ac494_56497d45",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 448,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-03-17T01:48:45Z",
      "side": 1,
      "message": "There is no need to use shared_ptr at all, I think I could send an extra patch to change it to \"raw\" sdbusplus::asio::connection, and pass the reference everywhere.",
      "revId": "a7b43813f0328feb92416096caa3ac5d7f8c93d9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}