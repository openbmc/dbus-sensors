{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f5ae3bb1_b8ffa212",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 46
      },
      "lineNbr": 0,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-09-23T05:53:37Z",
      "side": 1,
      "message": "Hai all,\nGentle remainder, Please review on this patch if possible.",
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcc2ca22_47e4e980",
        "filename": "include/IpmbPowerState.hpp",
        "patchSetId": 46
      },
      "lineNbr": 66,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-09-28T13:29:45Z",
      "side": 1,
      "message": "I see this data is something that doesn\u0027t change. If so then what about making it a static const. Each object don\u0027t have to keep it\u0027s own copy. All objects can share it ?",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 66,
        "endChar": 55
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ff887a7_f4f70021",
        "filename": "include/IpmbPowerState.hpp",
        "patchSetId": 46
      },
      "lineNbr": 66,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-09-30T11:06:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcc2ca22_47e4e980",
      "range": {
        "startLine": 66,
        "startChar": 1,
        "endLine": 66,
        "endChar": 55
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "425ecadd_d2db1a22",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 31,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-09-28T13:29:45Z",
      "side": 1,
      "message": "This looks to be error in object construction. Throw will be better way to handle it.\nhttps://isocpp.org/wiki/faq/exceptions#ctors-can-throw",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 31,
        "endChar": 9
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "067860b4_a7dd525d",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 31,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-09-30T11:06:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "425ecadd_d2db1a22",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 31,
        "endChar": 9
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba4b1444_b37be2de",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-09-28T13:29:45Z",
      "side": 1,
      "message": "Won\u0027t this throw kill the process if retry count goes beyond limit of 3 ? There is nobody to catch this throw ?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46ae41dc_d9b019a9",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-09-30T11:06:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba4b1444_b37be2de",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9d015b1_70317288",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-10-03T12:08:58Z",
      "side": 1,
      "message": "I think it\u0027s better to log a message and move on rather than throwing and catching within same function. That will serve exact same purpose here. Using exception doesn\u0027t seem to be bringing any value here. Just increasing lines of code.\nAlso catching std::exception is not good since it will catch everything(all childs of std::exception) even the once that should bubble up.",
      "parentUuid": "46ae41dc_d9b019a9",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36e1d7bf_6c047cbb",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-10-07T05:12:29Z",
      "side": 1,
      "message": "But logging will cause a flood in logs in case of this function executes, I have already got comments to remove the logs from this line.",
      "parentUuid": "a9d015b1_70317288",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2b14ce5_4eead0af",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-10-07T06:33:46Z",
      "side": 1,
      "message": "Are you planning to remove any error log from this method ?\nI was suggesting something like below. It will print as many error as existing exception thing does.\n\n\nvoid IpmbPowerMonitor::incrementError()\n{\n    if (retryCount \u003e\u003d 3)\n    {\n        retryCount \u003d 0;\n        std::cerr \u003c\u003c \"Error log\" \u003c\u003c \"\\n\";\n    }\n    retryCount++;\n}",
      "parentUuid": "36e1d7bf_6c047cbb",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03238356_11f9b92a",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-10-11T10:29:51Z",
      "side": 1,
      "message": "since this sensor polling part log may be frequent there is a chance this message got multiple times and will cause log overflow.",
      "parentUuid": "f2b14ce5_4eead0af",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0407ecb6_46966c8c",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 57,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-10-18T07:47:50Z",
      "side": 1,
      "message": "Frequency of logs in proposed changes and current implementation will be same, right ? In both cases a error log is given if fail count crosses a mark. If that is correct then there is no new additional logs are added.",
      "parentUuid": "03238356_11f9b92a",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867e476e_bbeceffd",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-09-28T13:29:45Z",
      "side": 1,
      "message": "There can be double call to self-\u003eread here one from self-\u003esetIpmbPowerState method and other here. Second call will happen before first ones ioTimer is expiered. Is this ok ?\nI think results will be similar even if read call is dropped from setIpmbPowerState.",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6724044_e88ea26a",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-09-30T11:06:30Z",
      "side": 1,
      "message": "It\u0027s okay to handle the Second call happens before the first expiered.",
      "parentUuid": "867e476e_bbeceffd",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1634639_71664ed8",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-10-03T12:08:58Z",
      "side": 1,
      "message": "First call is *always* redundant. After return from setIpmbPowerState read is always going to be called. So isn\u0027t it better to remove something that is completely redundant ?",
      "parentUuid": "a6724044_e88ea26a",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f85238b_47b13a5e",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-10-07T05:12:29Z",
      "side": 1,
      "message": "can specify the line which your suggesting about,\nI can see the duplicate read cases only on the error cases, it will not happening unless the error occurs.",
      "parentUuid": "e1634639_71664ed8",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7caf0611_63c3e6fc",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-10-07T06:33:46Z",
      "side": 1,
      "message": "Yes, that\u0027s right, In error case read is called twice. That doesn\u0027t seem to be necessary. caller is going to call read anyway.",
      "parentUuid": "5f85238b_47b13a5e",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "110fda42_aac2ca5a",
        "filename": "src/IpmbPowerState.cpp",
        "patchSetId": 46
      },
      "lineNbr": 120,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-10-11T10:29:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7caf0611_63c3e6fc",
      "range": {
        "startLine": 119,
        "startChar": 1,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "a3e9e1d37eb4c731c09d9c32b6277305f8b3ed54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}