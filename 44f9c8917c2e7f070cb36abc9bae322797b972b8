{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f9cd56cf_d585758d",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 498,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-07T04:34:25Z",
      "side": 1,
      "message": "reduce indentation using the following pattern:\nif interface !\u003d sdrInterface\n{\nreturn;\n}",
      "range": {
        "startLine": 498,
        "startChar": 4,
        "endLine": 498,
        "endChar": 34
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "251b34ee_12416302",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 498,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-06-10T08:12:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9cd56cf_d585758d",
      "range": {
        "startLine": 498,
        "startChar": 4,
        "endLine": 498,
        "endChar": 34
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb24ddd_450971d3",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 598,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-07T04:34:25Z",
      "side": 1,
      "message": "Why not only create SDRDevice record for busIndex that has sdrInterface",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 598,
        "endChar": 17
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aa5b864_960cdce9",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 598,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-06-10T08:12:51Z",
      "side": 1,
      "message": "Since the object creating is same for both IpmbSensor and SDRSensor, I have created device record for IpmbSensor also. If these two objects can be created separately, then it can be avoided.\n\nCould you please provide your suggestion on creating two objects for sensor?",
      "parentUuid": "2fb24ddd_450971d3",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 598,
        "endChar": 17
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93cc32df_8e8f629c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 598,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-10T17:14:42Z",
      "side": 1,
      "message": "After reading through the code couple times, I think I understand your logic here now. But I think using this \"fake\" entry in the sensorRecord and offset of ipmbBusIndex is hard to understand and maintain. \nPlus, I am not sure line625-629 is needed for the SDRSensor type.\n\nIt would be better to keep the logic simple:\n1. SDR config, create SDR sensor based on the map\n2. IpmbSensor config, keep the code unchanged",
      "parentUuid": "0aa5b864_960cdce9",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 598,
        "endChar": 17
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaee255e_d56e967c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 598,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-10T22:17:21Z",
      "side": 1,
      "message": "Additional question:\nHow are these SDRSensor value being updated? Does the read function and periodic polling from IpmbSesnor base class work for these sensor?",
      "parentUuid": "93cc32df_8e8f629c",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 598,
        "endChar": 17
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7490d180_cb064745",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 598,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-07-19T11:42:15Z",
      "side": 1,
      "message": "I have created separate if condition for SDR sensor and IpmbSensor code is unchanged.\n\nRead function and polling works based on the IpmbSensor base class. Same IpmbSensor constructor is used for SDR sensor to update the sensor value.",
      "parentUuid": "eaee255e_d56e967c",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 598,
        "endChar": 17
      },
      "revId": "44f9c8917c2e7f070cb36abc9bae322797b972b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}