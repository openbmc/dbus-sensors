{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "122dcf63_78a413fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-12-06T02:29:46Z",
      "side": 1,
      "message": "Zev can you please take a look at this?",
      "revId": "77be965d105149daf887cc9fb3956e613bdce907",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a74380d3_4a2b45fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-12-06T10:37:37Z",
      "side": 1,
      "message": "From the commit message and the comment (the latter unchanged despite the apparent semantics of the code changing to invalidate it I think) I don\u0027t really understand the exact nature of the problem, or how the patch fixes anything.  I tried reproducing the problem you\u0027ve described via redfish (since I don\u0027t have an IPMI sensor stack configured at the moment) on a romed8hm3 system, using a backplane temperature sensor with \u0027PowerState: \"On\"\u0027 in its config...\n\nWith the host off, I see the expected null value from it:\n```\n$ curl https://$BMC/redfish/v1/Systems/system | jq .PowerState\n\"Off\"\n$ curl https://$BMC/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal | jq \u0027.Temperatures|.[6]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal#/Temperatures/6\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"LowerThresholdNonCritical\": 5,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"Backplane\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"Backplane\",\n  \"ReadingCelsius\": null,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 115,\n  \"UpperThresholdNonCritical\": 110\n}\n```\n\nAfter then turning the host on I see normal-looking readings again (that do retrieve different values at different times):\n```\n$ curl -X POST -d \u0027{\"ResetType\":\"On\"}\u0027 https://$BMC/redfish/v1/Systems/system/Actions/ComputerSystem.Reset\n{\n  \"@Message.ExtendedInfo\": [\n    {\n      \"@odata.type\": \"#Message.v1_1_1.Message\",\n      \"Message\": \"The request completed successfully.\",\n      \"MessageArgs\": [],\n      \"MessageId\": \"Base.1.13.0.Success\",\n      \"MessageSeverity\": \"OK\",\n      \"Resolution\": \"None\"\n    }\n  ]\n}\n$ curl https://$BMC/redfish/v1/Systems/system | jq .PowerState\n\"On\"\n$ curl https://$MBC/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal | jq \u0027.Temperatures|.[6]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal#/Temperatures/6\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"LowerThresholdNonCritical\": 5,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"Backplane\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"Backplane\",\n  \"ReadingCelsius\": 21,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 115,\n  \"UpperThresholdNonCritical\": 110\n}\n$ curl https://$BMC/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal | jq \u0027.Temperatures|.[6]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/ASRock_ROMED8HM3/Thermal#/Temperatures/6\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"LowerThresholdNonCritical\": 5,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"Backplane\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"Backplane\",\n  \"ReadingCelsius\": 20,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 115,\n  \"UpperThresholdNonCritical\": 110\n}\n```\n\nLet me know if there\u0027s something I missing with this testing, but as far as I can tell hwmontempsensor itself is handling things as it should, which makes me suspect something misbehaving in the IPMI stack.",
      "revId": "77be965d105149daf887cc9fb3956e613bdce907",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17875e2b_2d86353d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001312
      },
      "writtenOn": "2022-12-07T06:54:46Z",
      "side": 1,
      "message": "The condition \u0027findI2CDev !\u003d devices.end()\u0027 will not activate sensors already exist when turning the host on. So I add this patch to HwmonTempSensor and it fixs this issue, or maybe you have other suggestions for modification.\n\nHere is my test on Redfish without this patch. \n```\n$ curl http://$BMC/redfish/v1/Systems/system | jq \u0027.PowerState\u0027\n\"On\"\n$ curl http://$BMC/redfish/v1/Chassis/Yertle/Thermal | jq \u0027.Temperatures|.[1]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/Yertle/Thermal#/Temperatures/1\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"cputemp\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"cputemp\",\n  \"ReadingCelsius\": 32.5,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 105\n}\n$curl -k -H \"X-Auth-Token: $token\" -H \"Content-Type: application/json\" \\\n  -X POST http://$BMC/redfish/v1/Systems/system/Actions/ComputerSystem.Reset \\\n  -d \u0027{\"ResetType\": \"ForceOff\"}\u0027\u0027\n{\n  \"@Message.ExtendedInfo\": [\n    {\n      \"@odata.type\": \"#Message.v1_1_1.Message\",\n      \"Message\": \"The request completed successfully.\",\n      \"MessageArgs\": [],\n      \"MessageId\": \"Base.1.13.0.Success\",\n      \"MessageSeverity\": \"OK\",\n      \"Resolution\": \"None\"\n    }\n  ]\n}\n$curl http://$BMC/redfish/v1/Systems/system | jq \u0027.PowerState\u0027\u0027\n\"Off\"\n$ curl http://$BMC/redfish/v1/Chassis/Yertle/Thermal | jq \u0027.Temperatures|.[1]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/Yertle/Thermal#/Temperatures/1\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"cputemp\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"cputemp\",\n  \"ReadingCelsius\": null,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 105\n}\n```\n\nAfter power on the host, it still can\u0027t get value.\n```\n$ curl -k -H \"X-Auth-Token: $token\" -H \"Content-Type: application/json\" \\\n  -X POST http://$BMC/redfish/v1/Systems/system/Actions/ComputerSystem.Reset \\\n  -d \u0027{\"ResetType\": \"On\"}\u0027\n{\n  \"@Message.ExtendedInfo\": [\n    {\n      \"@odata.type\": \"#Message.v1_1_1.Message\",\n      \"Message\": \"The request completed successfully.\",\n      \"MessageArgs\": [],\n      \"MessageId\": \"Base.1.13.0.Success\",\n      \"MessageSeverity\": \"OK\",\n      \"Resolution\": \"None\"\n    }\n  ]\n}\n$curl http://$BMC/redfish/v1/Systems/system | jq \u0027.PowerState\u0027\u0027\n\"On\"\n$curl http://$BMC/redfish/v1/Chassis/Yertle/Thermal | jq \u0027.Temperatures|.[1]\u0027\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/Yertle/Thermal#/Temperatures/1\",\n  \"@odata.type\": \"#Thermal.v1_3_0.Temperature\",\n  \"LowerThresholdCritical\": 0,\n  \"MaxReadingRangeTemp\": 127,\n  \"MemberId\": \"cputemp\",\n  \"MinReadingRangeTemp\": -128,\n  \"Name\": \"cputemp\",\n  \"ReadingCelsius\": null,\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"UpperThresholdCritical\": 105\n}\n```",
      "parentUuid": "a74380d3_4a2b45fd",
      "revId": "77be965d105149daf887cc9fb3956e613bdce907",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}