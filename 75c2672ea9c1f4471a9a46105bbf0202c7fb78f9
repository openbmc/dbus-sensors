{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "daace365_58088901",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "nit, please put a real address in here.  FF isn\u0027t a valid 7 bit address.",
      "range": {
        "startLine": 15,
        "startChar": 22,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9440b7ce_53da12ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "daace365_58088901",
      "range": {
        "startLine": 15,
        "startChar": 22,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4131b8a3_03813731",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9440b7ce_53da12ef",
      "range": {
        "startLine": 15,
        "startChar": 22,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4fe9aef_73eb2046",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "change to \"ReadOffset\"\n\nIs there a way we can not make these required?  I believe SMBPBI has known indexes, we could access by a named enum to simplify?",
      "range": {
        "startLine": 17,
        "startChar": 9,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40879fbf_ad24e508",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "a4fe9aef_73eb2046",
      "range": {
        "startLine": 17,
        "startChar": 9,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3370ae57_f12b1114",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40879fbf_ad24e508",
      "range": {
        "startLine": 17,
        "startChar": 9,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63d6f60_ea65bfb6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "Need a better type name here.  \"Sattelite\" is already taken by redfish aggregation, which it really shouldn\u0027t have been (it\u0027s on my list to propose a better name), but here we are.\n\nSMBPBI probably?",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44491d20_924d16c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "Changed to Smbpbi",
      "parentUuid": "e63d6f60_ea65bfb6",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7167066a_7698cd19",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44491d20_924d16c1",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5607e5f0_52d00388",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-17T19:43:10Z",
      "side": 1,
      "message": "Lets go with SMBPBI_VEEPROM, just to differentiate from other smbpbi stuff.",
      "parentUuid": "7167066a_7698cd19",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a10bb35b_135d5a53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T23:35:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5607e5f0_52d00388",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "116a2822_81b88a21",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "This really shouldn\u0027t be a template.  We should have one method that reads in a byte array, then we can have two methods that convert that byte array into the type (double or uint64_t)\n\nAs written this duplicates a bunch of code that\u0027s common between the two templates.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 21
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de25e812_7078e2b1",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T01:00:46Z",
      "side": 1,
      "message": "Refactored",
      "parentUuid": "116a2822_81b88a21",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 132,
        "endChar": 21
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c145d9c_f0491135",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Is there a reason to be using the raw i2c device rather than an eeprom?  The SMBPBI protocol is effectively a virtual eeprom.  The really nice thing with using the eeprom interface is you can easily write test cases against it (because you can create a fake blob and/or file to test against.)",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da636a1_8a16915d",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "I don\u0027t know of a particular reason why this was chosen, but I know that this works without a driver and without consuming the bus and address.\n\nI suspect you\u0027re right, it could use an eeprom in the future.  Not sure we need that in this commit?",
      "parentUuid": "4c145d9c_f0491135",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb1a66e_2f4370b2",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Please don\u0027t do this.\n\nI don\u0027t know why it is necessary for `open`.  If we can only make `ioctl` work with these, I\u0027d suggest we write a small wrapper function so we only need the NOLINT once.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac48587_35b9fee4",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "I suspect this can be made common in the RAII class proposed below.",
      "parentUuid": "ffb1a66e_2f4370b2",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc62d93_7ca2df21",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Can we use a RAII class for this?",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8158af0_dedc73b5",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9dc62d93_7ca2df21",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f197d61_c25e6f62",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "This is doing IO within the main loop, which will result in DBus blocking for some amount of time......  I\u0027m not sure how to solve that with the way this is structured, but this will cause slow sensor APIs.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4340fac9_2f956f17",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "nit: `readRawEEPROMData`.  EEPROM is an acronym.",
      "range": {
        "startLine": 225,
        "startChar": 21,
        "endLine": 225,
        "endChar": 38
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d99493bb_0765d716",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4340fac9_2f956f17",
      "range": {
        "startLine": 225,
        "startChar": 21,
        "endLine": 225,
        "endChar": 38
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d554e62_fbc564a2",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "I don\u0027t think this is safe between architectures, right?",
      "range": {
        "startLine": 245,
        "startChar": 34,
        "endLine": 245,
        "endChar": 50
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae96360e_3fa96467",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T01:00:46Z",
      "side": 1,
      "message": "power is 4B according to spec, I think it\u0027s handled in `reading2power`, please correct me if I\u0027m wrong",
      "parentUuid": "8d554e62_fbc564a2",
      "range": {
        "startLine": 245,
        "startChar": 34,
        "endLine": 245,
        "endChar": 50
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12276106_7b844cf1",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-17T19:43:10Z",
      "side": 1,
      "message": "You can\u0027t just cast a uint8_t[4] to an int 64.  It works in this case becasue we\u0027re matching endianness, but that\u0027s not gauranteed.",
      "parentUuid": "ae96360e_3fa96467",
      "range": {
        "startLine": 245,
        "startChar": 34,
        "endLine": 245,
        "endChar": 50
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd4e9546_b0a46408",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T23:35:20Z",
      "side": 1,
      "message": "Understood. Do we agree that it\u0027s being handled in this case or something more required here?",
      "parentUuid": "12276106_7b844cf1",
      "range": {
        "startLine": 245,
        "startChar": 34,
        "endLine": 245,
        "endChar": 50
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a23e1c4b_05879e2e",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "PLDM?  What is this function doing.",
      "range": {
        "startLine": 260,
        "startChar": 25,
        "endLine": 260,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb39cf07_e63a4c96",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "+1.  I really suspect this is just named poorly.",
      "parentUuid": "a23e1c4b_05879e2e",
      "range": {
        "startLine": 260,
        "startChar": 25,
        "endLine": 260,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56815852_cd42c257",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:56:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb39cf07_e63a4c96",
      "range": {
        "startLine": 260,
        "startChar": 25,
        "endLine": 260,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efbc77e2_d86562c9",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 304,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "same as above, this type probably needs a better name.",
      "range": {
        "startLine": 304,
        "startChar": 31,
        "endLine": 304,
        "endChar": 35
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa44327e_071ca401",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 304,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:56:08Z",
      "side": 1,
      "message": "renamed to `readDoubleEEPROMData`",
      "parentUuid": "efbc77e2_d86562c9",
      "range": {
        "startLine": 304,
        "startChar": 31,
        "endLine": 304,
        "endChar": 35
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "848bf968_a61ae29b",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 304,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-07T01:24:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa44327e_071ca401",
      "range": {
        "startLine": 304,
        "startChar": 31,
        "endLine": 304,
        "endChar": 35
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fa8afc7_63dace91",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "This whole lambda needs to be rolled into a method, per the coding standard.",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 328,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c421f1dd_c52ee55d",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "8fa8afc7_63dace91",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 328,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "846d8d98_d204cd7f",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c421f1dd_c52ee55d",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 328,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e36cc01_df055d94",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "Same here.  This lambda is way too big.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5418cc58_81fa6b93",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e36cc01_df055d94",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46b938cd_3ce66eaa",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5418cc58_81fa6b93",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3f9802_f6b83a75",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "I think there\u0027s a helper function for this now?  Check utils.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38165c9f_c600c2bf",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2025-01-17T01:00:46Z",
      "side": 1,
      "message": "I don\u0027t see one for starting a timer and setting up the sensor, can you please link if possible?",
      "parentUuid": "bc3f9802_f6b83a75",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9838a30c_903555d3",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-13T05:46:38Z",
      "side": 1,
      "message": "This needs to be rebased and reworked on top of master, as the source tree structure has been changed.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "354da924_f383acf6",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T16:53:47Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9838a30c_903555d3",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f31aad_e6691489",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "Ack, rebased",
      "parentUuid": "354da924_f383acf6",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaee4536_b6a0a243",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17f31aad_e6691489",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21b22049_42cc0e4e",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "Not sure what this does, and doesn\u0027t look like part of the build, remove.",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e137f200_f019b83e",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "21b22049_42cc0e4e",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d55d8047_6c5880a6",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e137f200_f019b83e",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac03b6ad_eb1d0dd6",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "nit, can you put this comment on another line.",
      "range": {
        "startLine": 94,
        "startChar": 15,
        "endLine": 94,
        "endChar": 78
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbf5a2dd_8dbfada4",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "ac03b6ad_eb1d0dd6",
      "range": {
        "startLine": 94,
        "startChar": 15,
        "endLine": 94,
        "endChar": 78
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b7c1df_fbb35ab2",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "nit, just declare on line 114",
      "range": {
        "startLine": 110,
        "startChar": 8,
        "endLine": 110,
        "endChar": 14
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31a43eed_c459c8b9",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "53b7c1df_fbb35ab2",
      "range": {
        "startLine": 110,
        "startChar": 8,
        "endLine": 110,
        "endChar": 14
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "081e54a2_d243b963",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:48:22Z",
      "side": 1,
      "message": "These should probably go in the cpp file to be consistent.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8063f94_e1b670d7",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:49:52Z",
      "side": 1,
      "message": "done",
      "parentUuid": "081e54a2_d243b963",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5069a5e_96337f75",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1002169
      },
      "writtenOn": "2024-12-18T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8063f94_e1b670d7",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}