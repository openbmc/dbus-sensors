{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "daace365_58088901",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "nit, please put a real address in here.  FF isn\u0027t a valid 7 bit address.",
      "range": {
        "startLine": 15,
        "startChar": 22,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4fe9aef_73eb2046",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "change to \"ReadOffset\"\n\nIs there a way we can not make these required?  I believe SMBPBI has known indexes, we could access by a named enum to simplify?",
      "range": {
        "startLine": 17,
        "startChar": 9,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63d6f60_ea65bfb6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "Need a better type name here.  \"Sattelite\" is already taken by redfish aggregation, which it really shouldn\u0027t have been (it\u0027s on my list to propose a better name), but here we are.\n\nSMBPBI probably?",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c145d9c_f0491135",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Is there a reason to be using the raw i2c device rather than an eeprom?  The SMBPBI protocol is effectively a virtual eeprom.  The really nice thing with using the eeprom interface is you can easily write test cases against it (because you can create a fake blob and/or file to test against.)",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb1a66e_2f4370b2",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Please don\u0027t do this.\n\nI don\u0027t know why it is necessary for `open`.  If we can only make `ioctl` work with these, I\u0027d suggest we write a small wrapper function so we only need the NOLINT once.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc62d93_7ca2df21",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "Can we use a RAII class for this?",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4340fac9_2f956f17",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "nit: `readRawEEPROMData`.  EEPROM is an acronym.",
      "range": {
        "startLine": 225,
        "startChar": 21,
        "endLine": 225,
        "endChar": 38
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a23e1c4b_05879e2e",
        "filename": "src/SmbpbiSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-13T17:11:41Z",
      "side": 1,
      "message": "PLDM?  What is this function doing.",
      "range": {
        "startLine": 260,
        "startChar": 25,
        "endLine": 260,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9838a30c_903555d3",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-13T05:46:38Z",
      "side": 1,
      "message": "This needs to be rebased and reworked on top of master, as the source tree structure has been changed.",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "354da924_f383acf6",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T16:53:47Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9838a30c_903555d3",
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21b22049_42cc0e4e",
        "filename": "src/SmbpbiSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-13T18:16:48Z",
      "side": 1,
      "message": "Not sure what this does, and doesn\u0027t look like part of the build, remove.",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 29
      },
      "revId": "75c2672ea9c1f4471a9a46105bbf0202c7fb78f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}