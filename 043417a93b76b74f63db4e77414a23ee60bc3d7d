{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "88781eab_54bd6c83",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-12T15:42:25Z",
      "side": 1,
      "message": "I\u0027m not in love with this kind of code, changing a parameter just to meet a data interface, but because this patchset is overall better, I guess I\u0027m ok with it.\n\nI\u0027d much prefer (and can be done in a later patch if you want) to just pass the struct into getConfiguration, and have it assemble the strings itself to avoid all the string allocations.\n\nWith that said, this happens at startup, so it\u0027s not the biggest deal.",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 489,
        "endChar": 5
      },
      "revId": "043417a93b76b74f63db4e77414a23ee60bc3d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "838b40d4_19faab93",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-12T19:23:17Z",
      "side": 1,
      "message": "Agreed, it\u0027s not pretty at the moment...I was sorta trying to avoid things that would require mucking around with other sensor daemons, but I guess making that change to the getConfiguration API probably shouldn\u0027t be too bad, maybe I\u0027ll slip in a patch before this to do that first.",
      "parentUuid": "88781eab_54bd6c83",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 489,
        "endChar": 5
      },
      "revId": "043417a93b76b74f63db4e77414a23ee60bc3d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d0f2ce1_2d16e76b",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-12T22:24:19Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "838b40d4_19faab93",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 489,
        "endChar": 5
      },
      "revId": "043417a93b76b74f63db4e77414a23ee60bc3d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88cd4817_876e9de6",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-18T23:01:56Z",
      "side": 1,
      "message": "\u003e but I guess making that change to the getConfiguration API probably shouldn\u0027t be too bad\n\n...alright, that turned out to be a bit more of a task than I was thinking, but is now available in https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/56648\n\nIf that looks roughly reasonable I\u0027ll rebase this on top of it and get rid of the manual prefix-management here.",
      "parentUuid": "2d0f2ce1_2d16e76b",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 489,
        "endChar": 5
      },
      "revId": "043417a93b76b74f63db4e77414a23ee60bc3d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be3756f7_9dc8e2a3",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-07T02:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88cd4817_876e9de6",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 489,
        "endChar": 5
      },
      "revId": "043417a93b76b74f63db4e77414a23ee60bc3d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}