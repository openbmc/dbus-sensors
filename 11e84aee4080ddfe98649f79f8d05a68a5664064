{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8e1396c3_8a8dddd6",
        "filename": "src/NVMeSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-10-19T02:45:37Z",
      "side": 1,
      "message": "Hmm, so spot-checking e.g. PSUSensor it doesn\u0027t seem to do this. The fix feels like it\u0027s sensible, but do we need to apply this more broadly? Or perhaps even flip the initial value from `true` to `false` in `setInitialProperties()`?\n\nhttps://github.com/openbmc/dbus-sensors/blob/b886bfc5dbb3633a21e1a25df89951a56647d194/src/sensor.hpp#L361",
      "revId": "11e84aee4080ddfe98649f79f8d05a68a5664064",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2ec9739_e1ae0e8a",
        "filename": "src/NVMeSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2023-10-19T06:59:15Z",
      "side": 1,
      "message": "Yes, PSUSensor might be affected as well. On my board all sensors are always powered, always reachable and soldered, so I\u0027ve never had this problem.\nAs PSUSensor uses a kernel driver, while NVMeSensor does raw I2C communication, and the kernel driver does communicate with the device while probing it\u0027s likely available when the driver was successfully loaded.",
      "parentUuid": "8e1396c3_8a8dddd6",
      "revId": "11e84aee4080ddfe98649f79f8d05a68a5664064",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3e2e006_5ff0f212",
        "filename": "src/NVMeSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-10-20T05:13:27Z",
      "side": 1,
      "message": "Yes, checking PSUSensor was more of a question of whether this was a specific oversight in NVMeSensor or whether it was a broader code-pattern. And the answer is the problem is a broader code-pattern but generally it doesn\u0027t matter for the reasons you outlined.",
      "parentUuid": "f2ec9739_e1ae0e8a",
      "revId": "11e84aee4080ddfe98649f79f8d05a68a5664064",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85bfc6d9_7ebcb044",
        "filename": "src/NVMeSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-10-24T01:16:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3e2e006_5ff0f212",
      "revId": "11e84aee4080ddfe98649f79f8d05a68a5664064",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}