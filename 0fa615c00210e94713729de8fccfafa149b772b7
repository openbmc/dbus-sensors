{
  "comments": [
    {
      "key": {
        "uuid": "45c1bf10_af450776",
        "filename": "include/IpmbSensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2021-10-01T18:06:09Z",
      "side": 1,
      "message": "Why you are adding new types in the middle instead of appending to existing defintions ?\nWouldn\u0027t this impact existing sensors using this definiton, for example, \n\u0027elevenBit\u0027 value was 2, now it will be 4, right ?\n\nPlease check for regression, i.e.) other sensors sharing this code (proxyRead\u003dtrue) are working correctly, before as well as after your changes.",
      "revId": "0fa615c00210e94713729de8fccfafa149b772b7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1690a537_1d5a8180",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2021-10-01T18:06:09Z",
      "side": 1,
      "message": "You can keep common things outside of if{}, else{}.\ni.e.) After line 167,\n            commandAddress \u003d meAddress;\n            netfn \u003d ipmi::me_bridge::netFn;\n\nApplicable to all places.",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 171,
        "endChar": 43
      },
      "revId": "0fa615c00210e94713729de8fccfafa149b772b7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2bfa6ca_3adc165c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 589,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2021-10-01T18:06:09Z",
      "side": 1,
      "message": "This will throw exception when invalid JSON file entries present. i.e.) ReadMethod\u003dIPMI, but no \"Register\" defined.\n\nBetter find them one by one like \n auto readMethod \u003d entry.second.find(\"Register\");, \n auto readMethod \u003d entry.second.find(\"SensorMeAddress\");\nAnd, if these entries are missing, you can log error and revert to default values, i.e) isProxyRead \u003d true, ....",
      "range": {
        "startLine": 587,
        "startChar": 31,
        "endLine": 589,
        "endChar": 79
      },
      "revId": "0fa615c00210e94713729de8fccfafa149b772b7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}