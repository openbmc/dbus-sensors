{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09aee4e3_8da55eba",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-03-07T00:11:28Z",
      "side": 1,
      "message": "Why are these changes, there could be new sensors need to be created when powerState changed to be on",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c02fd501_a4a731da",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-03-07T01:29:38Z",
      "side": 1,
      "message": "Hi Zhikui, I added the modification here base on Ed\u0027s comment.\n\n\u003e This line needs to go away, and become just \"sensor-\u003eactivate()\"\n\u003e https://github.com/openbmc/dbus-sensors/blame/16d6f17bec38b6c095dfb6bed224f17d941fb9b3/src/PSUSensorMain.cpp#L1191\n\u003e\n\u003eThen PSUSensor itself should be internally consistent that it can cancel outstanding operations and restart them (including if it require reiniting the device).\n\n\nDid I misunderstand the meaning?",
      "parentUuid": "09aee4e3_8da55eba",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f283f51c_0d5e10f3",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-03-08T18:09:44Z",
      "side": 1,
      "message": "But that is only when all the changes Ed mentioned are done.\n\n\u003e IMO, the core problem stems from the commit below going waaaaaay beyond what it should, destroying sensor objects on a power cycle:\n\u003e\n\u003e https://github.com/openbmc/dbus-sensors/commit/cafd72f6b9ebb6d3be02a8733489a7221d339e18\n\u003e\n\u003e The sensor object itself, and the dbus entries should ALWAYS instantiate, regardless of the power state. Turning the power on/off shouldn\u0027t create/destroy the sensor itself, it should only modify the underlying interfaces on the activate() call. If we need an activate() call, it needs to be handled from within the sensor object, so that when we destroy it on a config change, it does the right thing.\n\u003e\n\u003e This code needs to be\n\u003e\n\u003e // destroy the old sensor\n\u003e sensor \u003d nullptr;\n\u003e\n\u003e // Create the new sensor.\n\u003e sensors[sensorName] \u003d std::make_shared\u003cPSUSensor\u003e(...)\n\nAll these need to be done before this line can just be activate",
      "parentUuid": "c02fd501_a4a731da",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aed69a16_5be42d92",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-03-12T02:32:02Z",
      "side": 1,
      "message": "code updated, please have a review.",
      "parentUuid": "f283f51c_0d5e10f3",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06742a9a_64fe7b50",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-03-22T15:59:37Z",
      "side": 1,
      "message": "\u003e The sensor object itself, and the dbus entries should ALWAYS instantiate, regardless of the power state.\n\nThis is the key and precondition of only doing activate/deactivate for power state change in @Ed suggestion. The patchset still does not do this because sensors are only created if the hwmonPath is created, i.e. the driver is activated. \nPlease see:\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/69162/7/src/PSUSensorMain.cpp#b300\nSo if there are devices requires power state to be on, this patchset will break them causing those sensors not created sometime.",
      "parentUuid": "aed69a16_5be42d92",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75938645_d630738e",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1195,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-04-02T07:00:36Z",
      "side": 1,
      "message": "Hi @Zhikui \u0026 @Ed,\n\nSorry for late reply, it took me sometime to recheck your comments.\n\n\u003e The sensor object itself, and the dbus entries should ALWAYS instantiate, regardless of the power state. Turning the power on/off shouldn\u0027t create/destroy the sensor itself, it should only modify the underlying interfaces on the activate() call. If we need an activate() call, it needs to be handled from within the sensor object, so that when we destroy it on a config change, it does the right thing.\n\nBase @Ed\u0027s comment, we should create all sensor objects while psusensor start and only do activete() \u0026 deactivate() when poser state changes. \n\n\u003e https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/69162/7/src/PSUSensorMain.cpp#b300\nSo if there are devices requires power state to be on, this patchset will break them causing those sensors not created sometime.\n\nAnd from @Zhikui\u0027s comment, there might have some sensors not create initially due to the power state was off and those sensors will only be created when power state changes from off to on.\n\nDoes it means I still need to keep createSensors() here?\n```\n    if (newState)\n    {\n        for (auto\u0026 [path, sensor] : sensors)\n        {\n            if (sensor !\u003d nullptr \u0026\u0026 sensor-\u003ereadState \u003d\u003d type)\n            {\n                sensor-\u003eactivate();\n            }\n        }\n        createSensors(io, objectServer, dbusConnection, nullptr);\n    }\n```\n\nAnd remove the sensor-\u003eactivate() from createSensors()?\nhttps://github.com/openbmc/dbus-sensors/blob/b2a0f2e0bfb5bc28fce737339f67df6a842cb726/src/PSUSensorMain.cpp#L927-L930\n\nSo exist sensors will only do activate() \u0026 deactivate() when power state changes, and for those sensors was not exist will be created in createSensors() when power state changes to on.\n\nPlease kindly correct me if I am wrong or misunderstanding.",
      "parentUuid": "06742a9a_64fe7b50",
      "range": {
        "startLine": 1189,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 9
      },
      "revId": "e88e0227aef34feadbcb50504ff9e1c9217be1e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}