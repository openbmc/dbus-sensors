{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25154aba_58dbb865",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-15T20:54:01Z",
      "side": 1,
      "message": "It occurs to me that while there\u0027s still some debate to be had over the best default value to use for \u0027hysteresis,\u0027 if we just set the value to NaN for now, that will let the function header explicitly reflect what was implicitly happening before the Intel-specific \u00270\u0027 value was hardcoded into the function body, while giving caller a chance to set their own value.\n\nI\u0027m thinking I\u0027ll submit a \u0027follow-up\u0027 change to this one that tries to define the \u003d2.55 value again and see if folks care to engage and push that discussion forward, or just leave it like this (which at least avoids some previous pitfalls).\n\nEither way, I don\u0027t think that discussion should get in the way of adding a new parameter so that we don\u0027t have a \u0027hidden\u0027 Intel-specific value coded in for hysteresis for anyone who might decide to call ParseThesholdsFromAttr() in the future.",
      "revId": "f748ffe9a59822a3662064e898718dae91a72efd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed9b5d7_d60032bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-15T21:34:06Z",
      "side": 1,
      "message": "I checked again and realized that the hysteresis \u003d 2.55 value would only apply to certain sensors, not all, or even \u0027most\u0027 of them.\n\nI\u0027ve created a new Gerrit review where, instead of suggesting a different default value from NaN, it\u0027s about what kind of comment might make sense to add along-side the \u0027NaN\u0027 change this review now proposes - or other alternatives.\n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/66370",
      "parentUuid": "25154aba_58dbb865",
      "revId": "f748ffe9a59822a3662064e898718dae91a72efd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39ee29cc_969c7459",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-21T18:58:01Z",
      "side": 1,
      "message": "Additional note re: picking hysteresis default \u003d NaN; the parseThresholdsFromConfig() function also sets a default value of NaN for hysteresis, but then attempts to replace the value with data from config (if hysteresis is defined). -FromAttrib() appears to have no access to hysteresis data unless a value is explicitly passed  to it.",
      "parentUuid": "7ed9b5d7_d60032bc",
      "revId": "f748ffe9a59822a3662064e898718dae91a72efd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}