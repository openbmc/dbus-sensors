{
  "comments": [
    {
      "key": {
        "uuid": "5c44622d_47b4a76a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-01T16:47:44Z",
      "side": 1,
      "message": "Is this already defined in Entity Manager\u0027s schema?",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd7ba01_be2c0ad3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-02T06:00:33Z",
      "side": 1,
      "message": "Not yet. It seems \"Reg\", \"Mode\" and \"Length\" are not defined in schema currently.\nI\u0027m not familiar with schema. It means all properties in json have to pre-define in the schema?",
      "parentUuid": "5c44622d_47b4a76a",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a3b0b69_08290541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-02T21:51:05Z",
      "side": 1,
      "message": "Please refer here: https://github.com/openbmc/entity-manager/blob/master/schemas/README.schema#L56",
      "parentUuid": "dbd7ba01_be2c0ad3",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1688b470_6356a304",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-03T07:22:37Z",
      "side": 1,
      "message": "I commit the PR to add schemas properties.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/entity-manager/+/49287\nI change the name \"Mode\" to \"I2cMode\", \"Length\" to \"DataOffset\".",
      "parentUuid": "1a3b0b69_08290541",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f1d8743_0a926e69",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 138,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-01T16:47:44Z",
      "side": 1,
      "message": "This should depend on modeStr now",
      "range": {
        "startLine": 133,
        "startChar": 4,
        "endLine": 138,
        "endChar": 5
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c08a789_fae0bea4",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 138,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-02T06:00:33Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "5f1d8743_0a926e69",
      "range": {
        "startLine": 133,
        "startChar": 4,
        "endLine": 138,
        "endChar": 5
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6ae5a63_f927e24e",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-01T16:47:44Z",
      "side": 1,
      "message": "What do you want return? This does not look right.",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "440bdf8f_8c5e7e31",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-02T06:00:33Z",
      "side": 1,
      "message": "I want to get direct byte data and save to dbus.\nFor example, if length is 2, which means get 2 block byte data, the val will save the get result like (0x01 0x2f). I want to save 0x2f to dbus",
      "parentUuid": "a6ae5a63_f927e24e",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "572f10c5_8943b0bf",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-02T21:51:05Z",
      "side": 1,
      "message": "What is the use case for reading block data, only to keep one byte and throw away the rest?",
      "parentUuid": "440bdf8f_8c5e7e31",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec1e6d76_54212abd",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-03T07:22:37Z",
      "side": 1,
      "message": "Yes. In our system\u0027s microcontroller temperature, it\u0027s in a high byte data in register. If using i2c reading word data, the return value will like 0x2f01. So I want to use read block data to get direct byte data.",
      "parentUuid": "572f10c5_8943b0bf",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859986fe_6c3aff19",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-06T19:12:27Z",
      "side": 1,
      "message": "\u003c So I want to use read block data to get direct byte data.\n\nTo me, it is not intuitively obvious that Block mode is used to get the last single byte data, not the whole block of data. If currently, there is no need to return the data differently with Block mode, please add comments to clarify in the code.",
      "parentUuid": "ec1e6d76_54212abd",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e834a8a_c90f59d9",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-08T08:01:53Z",
      "side": 1,
      "message": "Hi Zhikui, thanks for the discussion. After serious consideration, I think I can use \"Word\" mode and another method to achieve my purpose.\nAbout \"Block\" mode, do you have any suggestions? I will try to modify to save the whole data to dbus first.",
      "parentUuid": "859986fe_6c3aff19",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 72
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5000921_a54beade",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 202,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-01T16:47:44Z",
      "side": 1,
      "message": "Make sure this is not 0 or overflow?",
      "range": {
        "startLine": 202,
        "startChar": 51,
        "endLine": 202,
        "endChar": 77
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dff74e7_392dc753",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 202,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-02T06:00:33Z",
      "side": 1,
      "message": "Done. Checking the input scale value is not 0 in the beginning.",
      "parentUuid": "d5000921_a54beade",
      "range": {
        "startLine": 202,
        "startChar": 51,
        "endLine": 202,
        "endChar": 77
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e69103c3_8ed271a3",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 283,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-12-01T16:47:44Z",
      "side": 1,
      "message": "To be backwards compatible, make \"Byte\" as default if these entries do not exist",
      "range": {
        "startLine": 265,
        "startChar": 20,
        "endLine": 283,
        "endChar": 69
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aee88805_8c7a81f2",
        "filename": "src/MCUTempSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 283,
      "author": {
        "id": 1000847
      },
      "writtenOn": "2021-12-02T06:00:33Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "e69103c3_8ed271a3",
      "range": {
        "startLine": 265,
        "startChar": 20,
        "endLine": 283,
        "endChar": 69
      },
      "revId": "ce8c0d03aaa46ecac48cbd17fd222d675c08415d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}