{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2343a9c1_f82f5eec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2022-10-26T15:58:49Z",
      "side": 1,
      "message": "Can you let me know the value of \"Status\" property in case the Chassis is covered and the \"Rearm\" is \"Manual\", but Redfish/IPMI-OEM set this status to \"HardwareIntrusion\"?",
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6563dc4_7462a0ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-10-27T17:02:01Z",
      "side": 1,
      "message": "I missed this case, but I think, whatever outside sets to \"Status\", it should always take it as a clear/reset action and therefore \"Normal\". I think I will update the case of the external set call in the setSensorValue function to set \"Normal\" to mDBusValue and \"Status\" property, whatever it takes as input. Do you think this makes sense?",
      "parentUuid": "2343a9c1_f82f5eec",
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99ff4be9_fa9b4417",
        "filename": "include/ChassisIntrusionSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-26T13:51:02Z",
      "side": 1,
      "message": "This isn\u0027t how dbus enumerations are named.  They\u0027re not the literal string \"Automatic\".\n\nIs there any reason you can\u0027t use the generated header file to get the C++ enumeration type?  Then you can use them as enumerations in code and let sdbusplus automatically convert them to/from dbus-strings.",
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e28fe40_f6574b2d",
        "filename": "include/ChassisIntrusionSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-10-27T17:02:01Z",
      "side": 1,
      "message": "It\u0027s just because I was not aware of the generated header file. Will modify it.",
      "parentUuid": "99ff4be9_fa9b4417",
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac9edf6d_24a7976a",
        "filename": "include/ChassisIntrusionSensor.hpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-10-29T14:33:21Z",
      "side": 1,
      "message": "I changed to using the enum. I think the CI fails because it\u0027s lacking the newly defined enum from phosphor-dbus-interfaces.",
      "parentUuid": "5e28fe40_f6574b2d",
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4157a782_9d2f6f8a",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2022-10-26T15:58:49Z",
      "side": 1,
      "message": "It seems that the \"Status\" property is not updated to \"HardwareIntrusion\" if the chassis is intrusive and \"Rearm\" property is \"Manual\".",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 9
      },
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6206dceb_0c327d31",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2022-10-26T16:06:37Z",
      "side": 1,
      "message": "I think the \"pRearm\" is used to indicate this is a pointer parameter, but in this case, it seems that the naming is incorrect",
      "range": {
        "startLine": 54,
        "startChar": 45,
        "endLine": 54,
        "endChar": 51
      },
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2aa8a82_b9fcf458",
        "filename": "src/IntrusionSensorMain.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-10-29T14:33:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6206dceb_0c327d31",
      "range": {
        "startLine": 54,
        "startChar": 45,
        "endLine": 54,
        "endChar": 51
      },
      "revId": "ab33f42879311cba55bd6c10f04afa219251e654",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}