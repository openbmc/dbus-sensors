{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a2fc8186_c71f78c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-18T14:14:24Z",
      "side": 1,
      "message": "One pretty minor nit, but arguably optional.",
      "revId": "79d8aef4302376992255989477fffd19022d5efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34748e21_376fd5b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-19T00:12:44Z",
      "side": 1,
      "message": "Do we have test cases that validate we\u0027re not changing behaviour?",
      "revId": "79d8aef4302376992255989477fffd19022d5efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10b71973_0bc014e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-19T00:52:55Z",
      "side": 1,
      "message": "Doesn\u0027t look like it; the test/ directory is fairly lightly populated, and `getSensorConfiguration()` is only called from IntelCPUSensorMain.cpp and IntrusionSensorMain.cpp, neither of which appears to have any coverage there.",
      "parentUuid": "34748e21_376fd5b2",
      "revId": "79d8aef4302376992255989477fffd19022d5efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bd88fc8_49bff8ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-08-19T01:31:56Z",
      "side": 1,
      "message": "I asked on the basis that setting a bool in a loop and then doing something outside the loop based on the bool means the something outside the loop can only happen either 0 or 1 times, whereas hoisting the something outside the loop into the loop (?? weird phrase perhaps) might make it execute multiple times. I\u0027m unsure of whether the types and preconditions prevent this, hence asking about tests :)",
      "parentUuid": "10b71973_0bc014e1",
      "revId": "79d8aef4302376992255989477fffd19022d5efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0abf0dc_7edd4650",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-19T01:48:43Z",
      "side": 1,
      "message": "\u003e hoisting the something outside the loop into the loop ... might make it execute multiple times.\n\nIn the general case sure, but when it\u0027s immediately followed by an unconditional `break` that still bounds to happening at most once, right?",
      "parentUuid": "0bd88fc8_49bff8ff",
      "revId": "79d8aef4302376992255989477fffd19022d5efb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}