{
  "comments": [
    {
      "key": {
        "uuid": "d4285424_f9feb992",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 25,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T20:58:23Z",
      "side": 1,
      "message": "How is use of dangling reference prevented?",
      "range": {
        "startLine": 23,
        "startChar": 2,
        "endLine": 25,
        "endChar": 36
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f041d049_df48a6de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 29,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T20:58:23Z",
      "side": 1,
      "message": "I am still relatively new to dbus. So this is just a question for my own education.\nWill there be problems if the new sensor is constructed with the same name, path, interfaces etc. before the old sensor is destructed? What happens if another service comes along and uses object mapper to get managed objects before the old sensor instance get destructed?",
      "range": {
        "startLine": 27,
        "startChar": 26,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f0aec2_331082ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T20:58:23Z",
      "side": 1,
      "message": "There are changes that affect sensors and thresholds lifetime. I am little concerned of potential new race conditions.\nMaybe test with randomized scan/rescan (construct and destruct) for sensors?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1710bc51_a3169517",
        "filename": "src/ADCSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 72,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T01:52:32Z",
      "side": 1,
      "message": "Need to match the dbus interface here, right?  There are other places too.",
      "range": {
        "startLine": 72,
        "startChar": 12,
        "endLine": 72,
        "endChar": 64
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e3e658_357af833",
        "filename": "src/ADCSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 189,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T20:58:23Z",
      "side": 1,
      "message": "If abort is caused by destruction, will \"this\" be invalid?",
      "range": {
        "startLine": 189,
        "startChar": 41,
        "endLine": 189,
        "endChar": 47
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d88021e_f0109438",
        "filename": "src/ADCSensorMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 278,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-02-25T20:58:23Z",
      "side": 1,
      "message": "This would construct the new one first and then destruct the obsolete one, right? If true, there would be a tiny window that both new sensor and old sensor exist. Will dbus be confused?",
      "range": {
        "startLine": 273,
        "startChar": 0,
        "endLine": 278,
        "endChar": 75
      },
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3362f74_b4acd272",
        "filename": "src/FanMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 174,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-02-24T02:04:24Z",
      "side": 1,
      "message": "It looks like a lot of changes took place here and below, with respect to PWM numbering and string path building. I am curious why? The old code worked, and was well tested.",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ebce238_09d5e892",
        "filename": "src/FanMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 174,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-25T21:33:01Z",
      "side": 1,
      "message": "This patchset has been rebased.  I suspect you looked at the diff between patchset 1 and patchset N.  If you compare patchset N to master, this has no diff.\n\nWith that said, happy to discuss outside the context of this patchset if you think this is wrong.",
      "parentUuid": "f3362f74_b4acd272",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b23482_5f42d3ec",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 40,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-02-24T02:04:24Z",
      "side": 1,
      "message": "Perhaps group this constant with the others in HwmonTempSensor.cpp file?",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1faee3ef_1657509a",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 213,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-02-24T02:04:24Z",
      "side": 1,
      "message": "Curious why float used here, not double.",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23711c10_e0cc81ce",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 21
      },
      "lineNbr": 213,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-25T21:33:01Z",
      "side": 1,
      "message": "This isn\u0027t part of the diff.  Happy to talk about this out of band.",
      "parentUuid": "1faee3ef_1657509a",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b20486d9_fa5c7940",
        "filename": "src/HwmonTempSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-02-24T02:04:24Z",
      "side": 1,
      "message": "The pollRate feature is new, not merely a code cleanup. As such, it will benefit from being in a second change. This change is already rather large.",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b22db1d_2dd90684",
        "filename": "src/HwmonTempSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-25T21:33:01Z",
      "side": 1,
      "message": "Pollrate was added in a different patch.  Please diff patchset N to master, not patchset 1 to patchset N.",
      "parentUuid": "b20486d9_fa5c7940",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b38aec97_4e693fb1",
        "filename": "src/HwmonTempSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 53,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-02-24T02:04:24Z",
      "side": 1,
      "message": "Multiplying floating-point should multiply by 1000.0",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c230e7_22315f3a",
        "filename": "src/HwmonTempSensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-25T21:33:01Z",
      "side": 1,
      "message": "Agreed, although this is equally as correct\n\nWith that said, see previous notes, I think you looked at the wrong diff.",
      "parentUuid": "b38aec97_4e693fb1",
      "revId": "1fa1b44924a7bda4ff89ed4cd2ad9c0ae1338f06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}