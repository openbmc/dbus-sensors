{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03a53128_3685cd34",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "nit: This could go for the previous commit and all the functions as well.  I thought generally if we had an acronym we keep it as an acronym.\n\nBMC or bmc not Bmc.\nMCTP or mctp not Mctp.\n\n(You can do whatever you want on this.)",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 10
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edec2224_94292a07",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "This class feels like a lot of code to pretty trivially wrap a map...\n\nMaybe it can be moved to a header file to reduce the noise in this file?  125 lines into the file and I\u0027m still not to anything interesting.",
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e427a3e7_267d92b8",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "I\u0027ll use upper-case acronyms throughout for consistency.",
      "parentUuid": "03a53128_3685cd34",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 10
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6449cb_08eb46fd",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "It would be great if there was a bi-directional map in `std`, however there isn\u0027t (that I could find). I wrote the class to separate out the logic of the reverse map lookups from the business logic of the `MctpReactor` class. This was a trade-off to avoid a dependency on yet more `boost`.\n\nI\u0027ll take your suggestion of moving it to a header to de-clutter the rest of the implementation here.",
      "parentUuid": "edec2224_94292a07",
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f2bc6bc_88b0adc5",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e427a3e7_267d92b8",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 30,
        "endChar": 10
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c924be6_53bc9eab",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c6449cb_08eb46fd",
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e24f562_b4332a83",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "nit: almost anywhere you use begin/end to the std algorithms you can do `std::ranges:algo(container...`.",
      "range": {
        "startLine": 69,
        "startChar": 11,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cfa2226_678b1315",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "Nice, thanks. I\u0027ll look at how I can clean this up.",
      "parentUuid": "7e24f562_b4332a83",
      "range": {
        "startLine": 69,
        "startChar": 11,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4504534e_923a642d",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cfa2226_678b1315",
      "range": {
        "startLine": 69,
        "startChar": 11,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2011e38d_5d50e94f",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "Isn\u0027t there only one of these?  I\u0027m not understanding the value of the extra code to put it in a shared_ptr instead of it being a reference.",
      "range": {
        "startLine": 127,
        "startChar": 18,
        "endLine": 128,
        "endChar": 1
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b38d14b8_8619966c",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "So maybe I\u0027ve cargo-culted this a bit. There is only one instance, but its object is referenced by jobs in the boost IO context. To ensure that there can\u0027t be any potential lifetime issues I leaned on a shared pointer. Happy to be reasoned out of that though.",
      "parentUuid": "2011e38d_5d50e94f",
      "range": {
        "startLine": 127,
        "startChar": 18,
        "endLine": 128,
        "endChar": 1
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b47f068_6d56eb5a",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "Isn\u0027t this application purely a dbus client?  Why add a manager (or even claim a busname)?\n\nOh... later on I see it has associations.",
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b66240_4cb4776b",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "`auto toSetup \u003d std::exchange(deferred, {});`",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 190,
        "endChar": 21
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1ba14d5_042c381c",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "85b66240_4cb4776b",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 190,
        "endChar": 21
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "238526c5_6cec6f69",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1ba14d5_042c381c",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 190,
        "endChar": 21
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2067f52_f0b8c0e8",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "This doesn\u0027t match the naming conventions for dbus associations.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/requirements.md#associations",
      "range": {
        "startLine": 285,
        "startChar": 55,
        "endLine": 285,
        "endChar": 69
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf092ff_240b7510",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "Why is this implied to be a chassis?  What if it is a NIC or an expansion board?",
      "range": {
        "startLine": 285,
        "startChar": 44,
        "endLine": 285,
        "endChar": 51
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a5d5691_031cf348",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "Sure, it needs fixing. I\u0027ll need to get a better grasp on how we make it correct though. Do you have references I can lean on?\n\nRegardless, it was just a direct reimplementation of what was proposed here:\n\nhttps://github.com/CodeConstruct/mctp/pull/17/files#diff-222eb3ffb54581db6e3d72a6efa39bf25a8145a7f8eab9b7f4474ea184675da9R1216-R1221",
      "parentUuid": "ccf092ff_240b7510",
      "range": {
        "startLine": 285,
        "startChar": 44,
        "endLine": 285,
        "endChar": 51
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53556dec_40d52f79",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "Right, it was just a direct reimplementation of what was proposed here:\n\nhttps://github.com/CodeConstruct/mctp/pull/17/files#diff-222eb3ffb54581db6e3d72a6efa39bf25a8145a7f8eab9b7f4474ea184675da9R1216-R1221",
      "parentUuid": "d2067f52_f0b8c0e8",
      "range": {
        "startLine": 285,
        "startChar": 55,
        "endLine": 285,
        "endChar": 69
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff97b6a_3ab8c6fa",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-27T01:09:26Z",
      "side": 1,
      "message": "https://github.com/openbmc/phosphor-dbus-interfaces/blob/806f178675aa6499e31a4a0f4b57e6f8f2f2d1ff/yaml/xyz/openbmc_project/Inventory/Item/README.md#L21\n\nWe have a number of documented associations to Items already.  I don\u0027t know if \u0027connected\u0027 is appropriate or \u0027managed\u0027.  We just need to come up with a verb that expresses the relationship.  It can be a verb already in use (I actually prefer we keep the set smaller than trying to make every verb unique).\n\nQuick and dirty set of all association names (though \"inventory\" is a bad one): https://gist.github.com/williamspatrick/22b4940091a212cb5b9538973119e453",
      "parentUuid": "7a5d5691_031cf348",
      "range": {
        "startLine": 285,
        "startChar": 44,
        "endLine": 285,
        "endChar": 51
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "916a4940_ae96d063",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "Going to punt this for now so I can address the other comments.",
      "parentUuid": "53556dec_40d52f79",
      "range": {
        "startLine": 285,
        "startChar": 55,
        "endLine": 285,
        "endChar": 69
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d536e0_744c46ff",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-28T06:51:05Z",
      "side": 1,
      "message": "I\u0027m going to punt on this for the moment pending more discussion.",
      "parentUuid": "2ff97b6a_3ab8c6fa",
      "range": {
        "startLine": 285,
        "startChar": 44,
        "endLine": 285,
        "endChar": 51
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e9d7e8_545543b9",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 285,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-29T02:58:18Z",
      "side": 1,
      "message": "Bikeshedding this some more, how about `configures` and `configured_by` for the relationship between the `MCTPDevice` exposes object and the `mctpd` endpoint object? There\u0027s also an opportunity for a `connects` / `connected_by` association between the `MCTPInterface` exposes object and the `mctpd` endpoint object.",
      "parentUuid": "84d536e0_744c46ff",
      "range": {
        "startLine": 285,
        "startChar": 44,
        "endLine": 285,
        "endChar": 51
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1102bf7c_7f99593d",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 561,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T13:28:08Z",
      "side": 1,
      "message": "nit: I\u0027d prefer this to be MCTPReactor.  The amount of inconsistencies we have is super annoying when trying to debug anything.",
      "range": {
        "startLine": 561,
        "startChar": 49,
        "endLine": 561,
        "endChar": 60
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "955f6d46_740aec30",
        "filename": "src/MctpReactor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 561,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-27T00:55:45Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "1102bf7c_7f99593d",
      "range": {
        "startLine": 561,
        "startChar": 49,
        "endLine": 561,
        "endChar": 60
      },
      "revId": "f68acb5c89653ffa797c1aede7ba0853c704124e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}