{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a3ffde7_3edde839",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-18T22:22:48Z",
      "side": 1,
      "message": "This seems rather unfortunate.  Can you give me a few days to see if I can come up with something better between this and lg2?\n\nHow are you testing compiling clang?  Are you leveraging meson subproject/wraps to do it?  I\u0027m slightly surprised that it doesn\u0027t work if you are because then both lg2 and this should be compiled with clang and use the experimental::source_location instead.  I can see it not working if you\u0027re attempting to use an SDK or something for lg2.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "2ed3bae14fe7566d9cd00695edf7cdc8e2a81864",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b187029e_3dedfdd8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-18T22:37:53Z",
      "side": 1,
      "message": "\u003e This seems rather unfortunate.  Can you give me a few days to see if I can come up with something better between this and lg2?\n\u003e \n\u003e How are you testing compiling clang?  Are you leveraging meson subproject/wraps to do it?  I\u0027m slightly surprised that it doesn\u0027t work if you are because then both lg2 and this should be compiled with clang and use the experimental::source_location instead.  I can see it not working if you\u0027re attempting to use an SDK or something for lg2.\n\n\n\nNo problem, I\u0027m not in a super huge rush.  My overall goal is to get:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/openbmc-build-scripts/+/51391\n\nmerged, which hopefully also answers how I\u0027m testing compiling with clang.  For what it\u0027s worth, I\u0027ve also pulled in meta-clang into my yocto builds, and compile with:\nTOOLCHAIN:pn-\u003crecipename\u003e \u003d \"clang\"\nin my local.conf.  Each give roughly the same results.  Sometimes yocto will find clang-specific 32/64 bitness issues, but it\u0027s pretty rare.\n\nI totally agree, this patch is a lame solution, happy to have a better one.",
      "parentUuid": "0a3ffde7_3edde839",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "2ed3bae14fe7566d9cd00695edf7cdc8e2a81864",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}