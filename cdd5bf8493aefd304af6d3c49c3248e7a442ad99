{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2167bcb_5e7c0d0c",
        "filename": "src/gpu/MctpSocket.hpp",
        "patchSetId": 23
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:48:14Z",
      "side": 1,
      "message": "Please make this a member variable rather than inheritence.  We\u0027d like to be able to review which interfaces are coming from socket and which are coming from MCTPSocket.",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 71
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45b3a0a9_43926ed5",
        "filename": "src/gpu/MctpSocket.hpp",
        "patchSetId": 23
      },
      "lineNbr": 27,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-23T06:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2167bcb_5e7c0d0c",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 71
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f9e280_e37d7eb2",
        "filename": "src/gpu/MctpSocket.hpp",
        "patchSetId": 23
      },
      "lineNbr": 79,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:48:14Z",
      "side": 1,
      "message": "nit, by convention please call these ec.",
      "range": {
        "startLine": 79,
        "startChar": 69,
        "endLine": 79,
        "endChar": 72
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "562e5f84_de6102dc",
        "filename": "src/gpu/MctpSocket.hpp",
        "patchSetId": 23
      },
      "lineNbr": 79,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-23T06:14:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3f9e280_e37d7eb2",
      "range": {
        "startLine": 79,
        "startChar": 69,
        "endLine": 79,
        "endChar": 72
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a89c997_43ce17ec",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:52:05Z",
      "side": 1,
      "message": "Remove, and just inline.  There are other Response classes that confuse this",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4414e616_42821fa9",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 32,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-23T06:14:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a89c997_43ce17ec",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b263019e_4f119946",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:52:05Z",
      "side": 1,
      "message": "Remove.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 22
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a132992f_d19adebf",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 38,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-23T06:14:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b263019e_4f119946",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 22
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1288e0b_e919f1dd",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:52:05Z",
      "side": 1,
      "message": "Please don\u0027t redefine base types for things like this.  If you need to hold an FD, use an RAII fd class (there are several options).",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 21
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15a7a392_f8bd58d7",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 44,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-23T06:14:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1288e0b_e919f1dd",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 21
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3742b20d_b22f9753",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 97,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-21T19:52:05Z",
      "side": 1,
      "message": "Lets use composition here.  We\u0027re adding one field, it\u0027s not clear that inheritance helps us in this case.",
      "range": {
        "startLine": 97,
        "startChar": 30,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f3b59a5_30e30811",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 97,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-05-27T02:31:24Z",
      "side": 1,
      "message": "There was a confusion with the earlier implementation as the fields were misplaced. The Request struct was carrying the timeout + callback related context for each request. The intention of having a Request struct was for it to hold the bare-minimum data (msgtype + the actual byte array) required for communication. The OcpVdmRequest will extend the Request struct and should hold the OCP VDM specific context (timeout + response callback + ocp instance id). If we want to use composition instead of inheritance the nomenclature around the OcpVdmRequest and the Request Queues in the Requester becomes a little awkward. I think with the recent patchset (26) the extension of OcpVdmRequest from Request makes more sense (I have properly defined the fields in the correct structs).",
      "parentUuid": "3742b20d_b22f9753",
      "range": {
        "startLine": 97,
        "startChar": 30,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2e6522c_cfe8b19d",
        "filename": "src/gpu/types.hpp",
        "patchSetId": 23
      },
      "lineNbr": 97,
      "author": {
        "id": 1002377
      },
      "writtenOn": "2025-06-11T17:06:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f3b59a5_30e30811",
      "range": {
        "startLine": 97,
        "startChar": 30,
        "endLine": 97,
        "endChar": 37
      },
      "revId": "cdd5bf8493aefd304af6d3c49c3248e7a442ad99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}