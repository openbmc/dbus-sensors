{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c6e5b6_53cc545e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "How does an individual HostSystem instance know its slot ID?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d331e0e_5f18f1d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "1. Did you verify that sensors with a different slotID are not affected by chassis7 state? Please add that result\n2. Did you verify that sensors without slotID are linked to chassis0 power state? Please add that result",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 12
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a78da82_1c651451",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-12T15:29:20Z",
      "side": 1,
      "message": "Seems ok to me.",
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ee3981_ed2fc9e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Only couple minor suggestions",
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca5e2a59_edcf2ddd",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "If these are no longer singletons, then these should no longer be global variables.  Wrap these in an appropriate class and instantiate with the sensors.",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0297921c_652fbcb1",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 313,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "nit, use std::format here.",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 313,
        "endChar": 60
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5b6a0dd_3fda48f7",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 328,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "Pass size_t by value.  Many other cases need fixed as well.",
      "range": {
        "startLine": 328,
        "startChar": 23,
        "endLine": 328,
        "endChar": 29
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bf2f7f6_54c7ab2e",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "move before use, i.e. line551",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 535,
        "endChar": 67
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "871d657f_6a34c2f9",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "stoi throws an exception that appears to be unhandled in this code.  Use from_chars, or handle these as strings.",
      "range": {
        "startLine": 535,
        "startChar": 12,
        "endLine": 535,
        "endChar": 21
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b92a07e_faa07439",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 722,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "Lets not make this lambda any worse until it\u0027s refactored into a normal method.\n\nThis diff is basically impossible to tell what changed.",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 722,
        "endChar": 15
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7dfdaea_083d77a6",
        "filename": "src/Utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Same here why are reference used here, it can be just pass by value IMO",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba9b415_292e6ef6",
        "filename": "src/psu/PSUSensor.hpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Why use reference here? this can be just pass by value IMO",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}