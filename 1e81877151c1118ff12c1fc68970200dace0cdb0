{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c6e5b6_53cc545e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "How does an individual HostSystem instance know its slot ID?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce8ebd64_f4f35114",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 13,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-09-17T13:00:25Z",
      "side": 1,
      "message": "We parse the slot ID from the EntityManager configuration. Specifically, we read the “SlotId” field from the sensor’s config and pass it through during construction.  \nExample:\n```\n{\n            \"Name\": \"MEDUSA_MB2_12VHSC\",\n            \"PowerState\": \"ChassisOn\",\n            \"SlotId\": \"2\",\n}\n```\nRef:\nSchema update of Emtity-Manager:\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/74072",
      "parentUuid": "e5c6e5b6_53cc545e",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d331e0e_5f18f1d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "1. Did you verify that sensors with a different slotID are not affected by chassis7 state? Please add that result\n2. Did you verify that sensors without slotID are linked to chassis0 power state? Please add that result",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 12
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3118d6fc_3b073ace",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-09-17T13:00:25Z",
      "side": 1,
      "message": "Thanks for the questions. I’ve added both verification results to the commit (Patch 28), under “Test Result”:\n\n1.Sensors with a different slotId are not affected by chassis7 state\n-Demonstrated by power off/on chassis7: only slot7 sensors were deactivated/activated \n\u003e slot7 Chassis power off\n```\nSep 17 15:15:02 bmc psusensor[2041]: PowerStateChanged: Slot 7, newState: Off, PowerState_type: ChassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 0, sensor FANBOARD0 ADC_3V3_STBY_VOLT_V  PowerState_type: ChassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 0, sensor FANBOARD0 ADC_48V_AUX_VOLT_V  PowerState_type: ChassisOn\n...\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 6, sensor MEDUSA_MB6_HSC_12V_TEMP_C  PowerState_type: ChassisOn\n...\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 7, sensor MEDUSA_MB7_HSC_12V_INPUT_1_PWR_W  PowerState_type: ChassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Deactivating slot 7, sensor MEDUSA_MB7_HSC_12V_INPUT_1_PWR_W, due to PowerState::chassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 7, sensor MEDUSA_MB7_HSC_12V_INPUT_VOLT_V  PowerState_type: ChassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Deactivating slot 7, sensor MEDUSA_MB7_HSC_12V_INPUT_VOLT_V, due to PowerState::chassisOn\n```\n\u003e slot7 Chassis power on\n```\nSep 17 15:19:18 bmc psusensor[2041]: PowerStateChanged: Slot 7, newState: On, PowerState_type: ChassisOn\nSep 17 15:19:18 bmc psusensor[2041]: Sensor properties - Name: MEDUSA_MB7_HSC_12V_OUTPUT_VOLT_V, Scale: 3, Min: 0.000000, Max: 255.000000, Offset: 0.\nSep 17 15:19:18 bmc psusensor[2041]: Activated existing \u0027MEDUSA_MB7_HSC_12V_OUTPUT_VOLT_V\u0027 sensor\nSep 17 15:19:18 bmc psusensor[2041]: Sensor properties - Name: MEDUSA_MB7_HSC_12V_1_CURR_A, Scale: 500, Min: 0.000000, Max: 255.000000, Offset: 0.000\nSep 17 15:19:18 bmc psusensor[2041]: Activated existing \u0027MEDUSA_MB7_HSC_12V_1_CURR_A\u0027 sensor\nSep 17 15:19:18 bmc psusensor[2041]: Sensor properties - Name: MEDUSA_MB7_HSC_12V_INPUT_1_PWR_W, Scale: 500000, Min: 0.000000, Max: 3000.000000, Offs\nSep 17 15:19:18 bmc psusensor[2041]: Activated existing \u0027MEDUSA_MB7_HSC_12V_INPUT_1_PWR_W\u0027 sensor\nSep 17 15:19:18 bmc psusensor[2041]: Sensor properties - Name: MEDUSA_MB7_HSC_12V_INPUT_VOLT_V, Scale: 3, Min: 0.000000, Max: 300.000000, Offset: 0.0\nSep 17 15:19:18 bmc psusensor[2041]: Activated existing \u0027MEDUSA_MB7_HSC_12V_INPUT_VOLT_V\u0027 sensor\nSep 17 15:19:18 bmc psusensor[2041]: Sensor properties - Name: MEDUSA_MB7_HSC_12V_TEMP_C, Scale: 3, Min: -128.000000, Max: 127.000000, Offset: 0.0000\nSep 17 15:19:18 bmc psusensor[2041]: Activated existing \u0027MEDUSA_MB7_HSC_12V_TEMP_C\u0027 sensor\n```\n\n2.Sensors without slotID are linked to chassis0 \n```\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 0, sensor FANBOARD0 ADC_3V3_STBY_VOLT_V  PowerState_type: ChassisOn\nSep 17 15:15:02 bmc psusensor[2041]: Checking slot 0, sensor FANBOARD0 ADC_48V_AUX_VOLT_V  PowerState_type: ChassisOn\n```",
      "parentUuid": "5d331e0e_5f18f1d1",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 12
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a78da82_1c651451",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-12T15:29:20Z",
      "side": 1,
      "message": "Seems ok to me.",
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ee3981_ed2fc9e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Only couple minor suggestions",
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca5e2a59_edcf2ddd",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "If these are no longer singletons, then these should no longer be global variables.  Wrap these in an appropriate class and instantiate with the sensors.",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cfca6ad_998803ae",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Hi @ed@tanous.net,\n\nThanks for the review. I understand the concern about moving from a singleton to multi-instance state. To make sure I’m aligned with your intent, here’s my understanding of the power/chassis/POST state related variables:\n\n1.These are system-level (process-wide) states, not sensor-specific.\n\n2,Multiple sensors (PSU/CPU/Hwmon/Fan) consume this state; none of them “own” it.\nThe state is owned/managed by the system/BMC; sensors are readers of that global state.\n\n3.Global accessibility is intentional — for example, an isPowerOn()-style query may be needed from many places.\n\n4.Moving from single-slot to multi-slot changes the cardinality but not the ownership nature (we’re tracking multiple systems, not changing who owns the state).\n\nCould you confirm if this matches what you had in mind? If so, do you still prefer these to be wrapped in a class (instead of raw globals)? If yes, any guidance on ownership/lifecycle would be very helpful (e.g., per-daemon shared instance vs. per-sensor instance, and where initialization should happen). I’ll follow your recommendation and update the patch accordingly. Thank you very much.",
      "parentUuid": "ca5e2a59_edcf2ddd",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0297921c_652fbcb1",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 313,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "nit, use std::format here.",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 313,
        "endChar": 60
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "496bb398_0c462370",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 313,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27",
      "parentUuid": "0297921c_652fbcb1",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 313,
        "endChar": 60
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5b6a0dd_3fda48f7",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 328,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "Pass size_t by value.  Many other cases need fixed as well.",
      "range": {
        "startLine": 328,
        "startChar": 23,
        "endLine": 328,
        "endChar": 29
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a86f5d7c_6b031b86",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 328,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27",
      "parentUuid": "f5b6a0dd_3fda48f7",
      "range": {
        "startLine": 328,
        "startChar": 23,
        "endLine": 328,
        "endChar": 29
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bf2f7f6_54c7ab2e",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "move before use, i.e. line551",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 535,
        "endChar": 67
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "871d657f_6a34c2f9",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "stoi throws an exception that appears to be unhandled in this code.  Use from_chars, or handle these as strings.",
      "range": {
        "startLine": 535,
        "startChar": 12,
        "endLine": 535,
        "endChar": 21
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9072b87c_35e5dfed",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27.\nPer your recommendation, I have updated the code to use std::from_chars and included robust error handling to prevent exceptions. Kindly let me know if anything else is needed.",
      "parentUuid": "871d657f_6a34c2f9",
      "range": {
        "startLine": 535,
        "startChar": 12,
        "endLine": 535,
        "endChar": 21
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e0b5f54_85e43cb3",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27",
      "parentUuid": "9bf2f7f6_54c7ab2e",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 535,
        "endChar": 67
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9d627c9_476ff484",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 535,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-09-17T13:00:25Z",
      "side": 1,
      "message": "Mark as resolved",
      "parentUuid": "9072b87c_35e5dfed",
      "range": {
        "startLine": 535,
        "startChar": 12,
        "endLine": 535,
        "endChar": 21
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b92a07e_faa07439",
        "filename": "src/Utils.cpp",
        "patchSetId": 26
      },
      "lineNbr": 722,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-02T23:55:32Z",
      "side": 1,
      "message": "Lets not make this lambda any worse until it\u0027s refactored into a normal method.\n\nThis diff is basically impossible to tell what changed.",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 722,
        "endChar": 15
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7dfdaea_083d77a6",
        "filename": "src/Utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Same here why are reference used here, it can be just pass by value IMO",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7189ec_d8d1da03",
        "filename": "src/Utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27",
      "parentUuid": "b7dfdaea_083d77a6",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89f06190_599e1241",
        "filename": "src/Utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 73,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-09-17T13:00:25Z",
      "side": 1,
      "message": "Mark as resolved",
      "parentUuid": "5b7189ec_d8d1da03",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba9b415_292e6ef6",
        "filename": "src/psu/PSUSensor.hpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-12-02T22:26:13Z",
      "side": 1,
      "message": "Why use reference here? this can be just pass by value IMO",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f190ef1b_abe165c4",
        "filename": "src/psu/PSUSensor.hpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1002229
      },
      "writtenOn": "2025-08-29T17:18:00Z",
      "side": 1,
      "message": "Fixed in patch27",
      "parentUuid": "3ba9b415_292e6ef6",
      "range": {
        "startLine": 29,
        "startChar": 14,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "1e81877151c1118ff12c1fc68970200dace0cdb0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}