{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4bec4548_5e784bee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T14:50:04Z",
      "side": 1,
      "message": "Could you explain why?",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70dbbcb9_55cee308",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T14:50:04Z",
      "side": 1,
      "message": "How longer you mean? day or weeks?",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d23dfc5_5768caf1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T15:12:12Z",
      "side": 1,
      "message": "let’s get more details on what this patch thinks it’s fixing.  it’s possible changing these to volatile changes some optimizations enough that it LOOKS like it fixed a bug, but really it just moved the bug somewhere else.\n\nwe’re not accessing memory attached hardware here, so there’s no reason we should be using volatile.  for multi threading we should be using std::atomic, but this application isn’t multi threaded, so I’m not really sure where to go from here without more details.",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83fbf53a_21cfa5f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T15:32:41Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "0d23dfc5_5768caf1",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ffe8ed4_5fca2502",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-02-09T01:32:43Z",
      "side": 1,
      "message": "Agreed. There was an issue with the old async read call get stuck. But that issue was addressed by using io_uring. How do you know that sensor value is not getting updated and what do you think the reason is?",
      "parentUuid": "83fbf53a_21cfa5f9",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2897d80_2d21ebf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000416
      },
      "writtenOn": "2024-02-09T09:55:27Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6ffe8ed4_5fca2502",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d571fa12_f0d1b60d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000416
      },
      "writtenOn": "2024-02-09T09:55:27Z",
      "side": 1,
      "message": "Thanks for the review comments. Working other way to fix this issue.",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f1136c_9fc214a8",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T14:50:04Z",
      "side": 1,
      "message": "sensor factor also varies over time?",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e18bc75d_14757664",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T14:50:04Z",
      "side": 1,
      "message": "Is it necessary to have intermediate variable? can\u0027t we have rawValue as volatile?",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5193e65d_17b161de",
        "filename": "src/PSUSensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2024-02-08T15:08:32Z",
      "side": 1,
      "message": "Use of volatile function parameters is deprecated from C++20.",
      "revId": "dfa03746698822bf541d4374465508195c20221e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}