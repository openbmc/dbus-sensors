{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "968878b1_e41476d4",
        "filename": "include/AmpereCPU.hpp",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "what is this scale factor here? Is int type adequate?",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7630faa_2b91d930",
        "filename": "include/AmpereCPU.hpp",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Default device scale factor for its\u0027 sensor. In Ampere case it is 1.\nI updated it to double for more flexible.",
      "parentUuid": "968878b1_e41476d4",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4053228_70251529",
        "filename": "include/AmpereCPU.hpp",
        "patchSetId": 19
      },
      "lineNbr": 57,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e7630faa_2b91d930",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4aafbac4_d0c6ad35",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "should it be under extern \"C\" { } to preserve c type conventions ..?",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85c86f78_54a8cad9",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "I don\u0027t see others code add this include in \"C\"{}. Is need necessary?",
      "parentUuid": "4aafbac4_d0c6ad35",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb3d0292_ce2f6850",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-31T12:47:08Z",
      "side": 1,
      "message": "extern \"C\" {} used to preserve  C code from C++ type conversation i.e preserving  the C-language calling convention present in C header included in .CPP files.",
      "parentUuid": "85c86f78_54a8cad9",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8d63a4a_90d91a4c",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T13:39:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eb3d0292_ce2f6850",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "017a6fa2_3fe891ba",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "nit : should it be defined 10000.000 for more readability ..?",
      "range": {
        "startLine": 36,
        "startChar": 38,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a63fbb05_3dd178e6",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 36,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "017a6fa2_3fe891ba",
      "range": {
        "startLine": 36,
        "startChar": 38,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a41b08ec_4faf5730",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 54,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "??",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 55
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "006b69c5_82685039",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 54,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Please reference others code to understand the meaning.open is C code that why you need those lines.",
      "parentUuid": "a41b08ec_4faf5730",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 55
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc88a9b1_4f515cc1",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 58,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "include path and sensor name to help troubleshoot?",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed7e7328_800bf2f4",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 58,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cc88a9b1_4f515cc1",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45dfed75_0503bf0d",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 59,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "Constructors generally do not return  ..so does this return statement valid here ..?\nRefer https://github.com/openbmc/dbus-sensors/blob/9eb0cc3d8272bcdc58ead70c9a39fe8cecd5b6b5/src/ADCSensor.cpp#L65 \nI don\u0027t see return statement there .",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35d6ec94_8da13897",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 59,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45dfed75_0503bf0d",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4098cef3_3aea32be",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 129,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "what is the difference between sensorScaleFactor and sensorFactor?",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dcb988c_e6a26358",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 129,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "sensorScaleFactor is hwmon scale. It is 1000. The sensorFactor is individual sensor Scale, it is configurable.",
      "parentUuid": "4098cef3_3aea32be",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d03ed57_6760cac9",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 129,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8dcb988c_e6a26358",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b15fcd4_da68ccf2",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 140,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "else if",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d547025_ee6f911b",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 140,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1b15fcd4_da68ccf2",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "451d50f0_967fe090",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 148,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Why are we closing and reopening the file every time?",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 148,
        "endChar": 42
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1db1d679_d6808d97",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 148,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "The sysfs can be used by others services but not only ampereCpuSensor.",
      "parentUuid": "451d50f0_967fe090",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 148,
        "endChar": 42
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35412b77_2557357c",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 160,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "move before use",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdf22bcc_77e230ed",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 160,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "35412b77_2557357c",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c58edaf_00283d65",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 160,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bdf22bcc_77e230ed",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f12e804e_3d81cfaa",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Can the logic be re-written like calling setupRead again?\nYou will have to add waitTimer.expires_from_now in setupread, that\u0027s all right?",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b1001da_b4ab0025",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Or abstract out to a different function, like restartRead.",
      "range": {
        "startLine": 157,
        "startChar": 4,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35cc6487_4a09c711",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Just coding style.",
      "parentUuid": "4b1001da_b4ab0025",
      "range": {
        "startLine": 157,
        "startChar": 4,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dcd4196_bfac30dd",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "I don\u0027t see any reason to do that. This logic is used by many other sensor service in dbus-sensor. It proved the correction of this logic.",
      "parentUuid": "f12e804e_3d81cfaa",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "433d9319_2b36bcca",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 173,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "nit : better to make this function as const ..?",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41e58db2_c5e6acf1",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 173,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Is it necessary? I don\u0027t see any code in dbus-sensors make this function as const.",
      "parentUuid": "433d9319_2b36bcca",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffa85075_dfac370c",
        "filename": "src/AmpereCPU.cpp",
        "patchSetId": 19
      },
      "lineNbr": 173,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "41e58db2_c5e6acf1",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1ec54d2_70c81fda",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "I don\u0027t see this header used here . You can removed it if unsued .",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7469189e_6e90c31d",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 35,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d1ec54d2_70c81fda",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c4b453_a3af8931",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 58,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "can you add more details about what signify 3 here ..?",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a8a228e_52a1e027",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 58,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "The \"device\" file is in 1e78a0c0.i2c-bus/i2c-2/2-004f/smpro-hwmon.0.auto/device. That why the match size is 3.",
      "parentUuid": "60c4b453_a3af8931",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d628b642_73298d94",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 58,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a8a228e_52a1e027",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5324daa9_059196d7",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Can we pass by reference? and avoid pointer?",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f6d8d94_2bf40a61",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Just coding style. No need to do that.",
      "parentUuid": "5324daa9_059196d7",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1ba26c8_ca8f0598",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-05-12T19:35:36Z",
      "side": 1,
      "message": "It is more than a coding style. Reference and smart pointers are much safer. Please do not use raw pointers.",
      "parentUuid": "8f6d8d94_2bf40a61",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c30012a6_94d5bde8",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "All of pointer in this functions is updated inside the function. That why I use pointer.\nIf you preference the others code, they don\u0027t add findMatchConfig(). All of the finding and matching configuration code is in a long function createSensorsCallback().",
      "parentUuid": "e1ba26c8_ca8f0598",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c59ddd1d_7e5d765e",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c30012a6_94d5bde8",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4127a047_774ecefd",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-20T19:57:01Z",
      "side": 1,
      "message": "I don\u0027t see this fixed.  Generally the convention for this is non-const reference, as the reviewer noted.  Otherwise all pointers need to be checked for validity, which adds quite a bit of boilerplate.",
      "parentUuid": "c59ddd1d_7e5d765e",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83582904_2c4fc301",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 87,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-08-03T15:19:15Z",
      "side": 1,
      "message": "Updated in patch set 24.",
      "parentUuid": "4127a047_774ecefd",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 87,
        "endChar": 76
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f725b4f0_7830ae0c",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 135,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "This is a very big function doing lot of things. \nAs a suggestion, can we split into smaller functions?",
      "range": {
        "startLine": 135,
        "startChar": 12,
        "endLine": 135,
        "endChar": 32
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24a109c2_bd09d89b",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 135,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "If you look at other codes in D-Bus sensors, the functions are even bigger. These functions are split as small as possible.",
      "parentUuid": "f725b4f0_7830ae0c",
      "range": {
        "startLine": 135,
        "startChar": 12,
        "endLine": 135,
        "endChar": 32
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0681ed7_c4849360",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 157,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "How are we sure there is a value here?",
      "range": {
        "startLine": 157,
        "startChar": 34,
        "endLine": 157,
        "endChar": 37
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a954c811_2d7229d6",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 157,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "We are matching the sysfs which created by Ampere driver. So we are sure about that.",
      "parentUuid": "d0681ed7_c4849360",
      "range": {
        "startLine": 157,
        "startChar": 34,
        "endLine": 157,
        "endChar": 37
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebc7b624_2a3b0c6f",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 157,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Added try catch.\nI preference PSUSensor code on this.",
      "parentUuid": "a954c811_2d7229d6",
      "range": {
        "startLine": 157,
        "startChar": 34,
        "endLine": 157,
        "endChar": 37
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7675a266_9f546366",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 188,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "it might have a .bad property.",
      "range": {
        "startLine": 188,
        "startChar": 8,
        "endLine": 188,
        "endChar": 25
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9d8361a_17e90627",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 188,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Just condition using. Just make sure the condition to be corrected. Both .good() and .bad() are ok.",
      "parentUuid": "7675a266_9f546366",
      "range": {
        "startLine": 188,
        "startChar": 8,
        "endLine": 188,
        "endChar": 25
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b767f974_1e50ed21",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 382,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Can we pass as reference and avoid pointer?\nnumSensors too.",
      "range": {
        "startLine": 380,
        "startChar": 4,
        "endLine": 382,
        "endChar": 19
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b70d875_bfd0d5e4",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 382,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Yes, but no need to do that.",
      "parentUuid": "b767f974_1e50ed21",
      "range": {
        "startLine": 380,
        "startChar": 4,
        "endLine": 382,
        "endChar": 19
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec2fef7_e9504966",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 501,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2022-05-07T19:46:06Z",
      "side": 1,
      "message": "Can retVal variable be avoided and function be called in if condition directly?",
      "range": {
        "startLine": 501,
        "startChar": 13,
        "endLine": 501,
        "endChar": 19
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab1e67d3_b7c3526e",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 501,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-08T11:36:23Z",
      "side": 1,
      "message": "Just coding style. It can.",
      "parentUuid": "aec2fef7_e9504966",
      "range": {
        "startLine": 501,
        "startChar": 13,
        "endLine": 501,
        "endChar": 19
      },
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83205897_430256cc",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 545,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2022-05-12T09:15:36Z",
      "side": 1,
      "message": "nit: I see you followed function_name(void) for function which dont have any parameters .so you should apply same for main i.e int main(void).",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07457eea_4a415185",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 545,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-05-31T11:26:50Z",
      "side": 1,
      "message": "Sync up other function to use main() format.",
      "parentUuid": "83205897_430256cc",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97c4eae4_de7010cd",
        "filename": "src/AmpereCPUMain.cpp",
        "patchSetId": 19
      },
      "lineNbr": 545,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-06-16T01:13:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "07457eea_4a415185",
      "revId": "73f9aabd47637c771f5c497f1d8a284dd9560328",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}