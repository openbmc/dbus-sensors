{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0079df7e_ba768c48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-04T00:17:24Z",
      "side": 1,
      "message": "Any test done with the new PECI driver?",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51e4274e_89d23d01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-04T06:51:44Z",
      "side": 1,
      "message": "Basic testing was performed on a Tioga Pass board (ast2500 BMC, Xeon Skylake SKX host CPUs) with Linux version 6.1.15-0e94476-dirty-3631c2d, basically, current OpenBMC master with minor unrelated tweaks. Worked as expected. The DIMM temperatures appeared automatically a bit later, probably after POST was done.",
      "parentUuid": "0079df7e_ba768c48",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2517bb3f_370fa808",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-08T04:05:07Z",
      "side": 1,
      "message": "Please add Tested section in commit message",
      "parentUuid": "51e4274e_89d23d01",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aab81291_92d5739b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-08T07:19:56Z",
      "side": 1,
      "message": "Sure, will do. I\u0027m surprised nobody else is testing this, as my QA options are quite limited. Current OpenBMC is not doing one of the main functions on Intel servers, how come there\u0027s so little interest in fixing it?",
      "parentUuid": "2517bb3f_370fa808",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "713e1161_4c626d95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-08T07:19:56Z",
      "side": 1,
      "message": "Iwona, during the last testing of this code with a slightly different memory configuration I faced a condition when this daemon didn\u0027t show any DIMM temperatures while they were already available in hwmon.\n\nPlease describe how exactly the new API is supposed to be used. Under which conditions should the userspace trigger rescan? I noticed if triggered right after host is turned on it often isn\u0027t creating the memory temperature hwmon nodes. Should userspace retrigger it after a while (fixed amount of time?)? Also, after doing rescan how long exactly should one wait for all hwmon devices to appear? Or should intelcpusensor be constantly polling /sys/bus/peci/ to see if some hwmon directories appeared or disappeared? Please explain how you see the ideal userspace for your code.",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "605b870d_619f469a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000461
      },
      "writtenOn": "2023-04-11T21:12:46Z",
      "side": 1,
      "message": "When PECI subsystem loads on BMC, it\u0027s possible that the platform is in e.g. S5 state, which means that PECI subsystem won\u0027t be able to communicate with CPUs in order to discover their properties (and create PECI devices corresponding with a given CPU).\nThat\u0027s the reason for exposing rescan - userspace running on BMC needs to call it once the platform is up (since currently we don\u0027t have any mechanism to detect it on the kernel side). Once PECI devices are created, their corresponding drivers (peci_cpu in this case) will bind to them, and will create auxiliary devices for HWMONs. Assuming there are no changes in physical devices on the platform during BMC kernel lifetime, rescan can be called once (as long as CPUs will respond and PECI devices will be created). If CPUs were responding during PECI subsystem initialization on BMC, there would be no need to call rescan at all.\n\nWhen it comes to dimmtemp, HWMON registration can potentially be delayed (even though PECI device already exists). Calling rescan multiple times won\u0027t change anything in this case.\nNote that this behavior didn\u0027t change between \"legacy\" PECI subsystem and the current one.",
      "parentUuid": "713e1161_4c626d95",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f5566b7_556f9f47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-20T17:59:06Z",
      "side": 1,
      "message": "What happens when CPU reset/powers down after these peci_cpus are created. They will still work after CPUs powers backup? legacy PECI works that way I think.",
      "parentUuid": "605b870d_619f469a",
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bba0b697_63e93023",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 467,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-20T17:59:06Z",
      "side": 1,
      "message": "\u003e When PECI subsystem loads on BMC, it\u0027s possible that the platform is in e.g. S5 state, which means that PECI subsystem won\u0027t be able to communicate with CPUs in order to discover their properties (and create PECI devices corresponding with a given CPU).\n\u003e That\u0027s the reason for exposing rescan - userspace running on BMC needs to call it once the platform is up (since currently we don\u0027t have any mechanism to detect it on the kernel side). Once PECI devices are created, their corresponding drivers (peci_cpu in this case) will bind to them, and will create auxiliary devices for HWMONs.\n\nBased on Iwona\u0027s comment, I think config.state should be set based on HWMONs. State::ON is HWMONs for cpus are created, State::Ready is HWMONs for DIMM are created. Keep periodically do rescan until all configs are in READY state.",
      "range": {
        "startLine": 467,
        "startChar": 0,
        "endLine": 467,
        "endChar": 40
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b823358_4dd35823",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 470,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-04T00:17:24Z",
      "side": 1,
      "message": "With new upstream PECI driver, is it guaranteed that the rescan path always exists?",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 470,
        "endChar": 9
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01e7b424_b91b3600",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 470,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-04T06:51:44Z",
      "side": 1,
      "message": "I\u0027d say it\u0027s created unconditionally:\nhttps://elixir.bootlin.com/linux/latest/source/drivers/peci/core.c#L209\nhttps://elixir.bootlin.com/linux/latest/source/drivers/peci/sysfs.c#L36",
      "parentUuid": "0b823358_4dd35823",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 470,
        "endChar": 9
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74970a1a_043027bf",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 470,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-08T04:05:07Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "01e7b424_b91b3600",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 470,
        "endChar": 9
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83768426_9ded79d1",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-04T00:17:24Z",
      "side": 1,
      "message": "nit: Legacy PECI API (open to discuss whether it is better than \"downstream\"\nActually, we probably don\u0027t need to log anything since there is nothing wrong and it can flood the logging for users still use legacy driver.",
      "range": {
        "startLine": 473,
        "startChar": 30,
        "endLine": 473,
        "endChar": 45
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa93fb9f_7de55403",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-04T06:51:44Z",
      "side": 1,
      "message": "During normal operation it prints \"CPU configs are parsed\" and \"Sensors are created\" even though there\u0027s nothing wrong, and the logs weren\u0027t considered flooded with that, so I thought one more informational message wouldn\u0027t harm but might help someone bringing up a new board and dealing with configuration options.\nI personally prefer to always have \"strace\" to run any daemon under that when in doubt about what\u0027s really happening, but seeing a message is a bit more straightforward.\nI do not mind eiher way, just tell me how you like it and I\u0027ll send an amended version.",
      "parentUuid": "83768426_9ded79d1",
      "range": {
        "startLine": 473,
        "startChar": 30,
        "endLine": 473,
        "endChar": 45
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d39d23f2_a4c9386e",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-04-08T04:05:07Z",
      "side": 1,
      "message": "But parse config only happen once ( or few times when config is updated). detectCpu on the other hand can happen periodically (every few seconds) during run time. I prefer not to have this printed repeatedly.",
      "parentUuid": "fa93fb9f_7de55403",
      "range": {
        "startLine": 473,
        "startChar": 30,
        "endLine": 473,
        "endChar": 45
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ecd4345_3a8df244",
        "filename": "src/IntelCPUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-04-08T07:19:56Z",
      "side": 1,
      "message": "Will remove the message, no problem.",
      "parentUuid": "d39d23f2_a4c9386e",
      "range": {
        "startLine": 473,
        "startChar": 30,
        "endLine": 473,
        "endChar": 45
      },
      "revId": "b79d52632f477a00d82636e975a1868168a942e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}