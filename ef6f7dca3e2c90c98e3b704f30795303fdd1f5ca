{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "318577c5_4622b805",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-04-19T16:04:06Z",
      "side": 1,
      "message": "I like the idea to make it consistent within the same config file. \nThere is still an issue for this change. Please see inline comments.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 34,
        "endChar": 0
      },
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d8815ca_3d267f59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000478
      },
      "writtenOn": "2024-04-26T20:51:39Z",
      "side": 1,
      "message": "Don\u0027t want to steal this review but I\u0027ve encountered similar issue with CPU presence recently and not knowing about this review prepared alternative solution which additionally extracts common code to utils and doesn\u0027t create hwmon if required CPU is not needed.\nProposed change is at https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/71090\nBeing open to discussion how to address all identified issues so far and merge common work.",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f236c376_48e83c2a",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1020,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-04-19T16:04:06Z",
      "side": 1,
      "message": "This is actually matching for xyz.openbmc_project.Inventory.Item Present property from smbios service, which has the 0 index:\n/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0\nhttps://github.com/openbmc/smbios-mdr/blob/master/src/cpu.cpp#L159\nhttps://github.com/openbmc/smbios-mdr/blob/master/src/cpu.cpp#L159\n\nintelcpusensor path is slightly different and does not match here:\n/xyz/openbmc_project/inventory/system/chassis/motherboard/CPU_1",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a22697_16f01472",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1020,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-04-24T08:47:06Z",
      "side": 1,
      "message": "Not sure what you want me to do here.\nChecking intelcpusensor the inventory path is read from entity-manager configuration and thus it might be 0based or 1based index. intelcpusensor doesn\u0027t make any asumptions about it.",
      "parentUuid": "f236c376_48e83c2a",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8aabbe2_691e32f2",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1020,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-05-11T00:39:45Z",
      "side": 1,
      "message": "see the other comment",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39774045_c3f3ac63",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-04-19T16:04:06Z",
      "side": 1,
      "message": "This line works for both interfaces from intelcpusensor and smbios - whoever is the last one wins. \nThe two handler should be made the same and use intelcpusensor interface to achieve what was said in commit message - consistent within one config file",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84ee7c29_071fd183",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-04-24T08:47:06Z",
      "side": 1,
      "message": "What is \"intelcpusensor interface\" and why would psusensors need to depend on it?",
      "parentUuid": "39774045_c3f3ac63",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "788ae327_2edcd492",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-05-06T19:00:34Z",
      "side": 1,
      "message": "What I meant is that there are multiple service provide the dbus objects with different name cpuX (smbios-mdrv2) or CPU_X (intelcpusensor)\nIt is better to use the one from intelcpusensor since it use the index found in json config, where smbios-mdrv1 is currently hard coded to be 0 based.",
      "parentUuid": "84ee7c29_071fd183",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71cbab7c_b143fee2",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-05-07T07:57:39Z",
      "side": 1,
      "message": "I cannot follow. I don\u0027t care who provides dbus objects, in my case it\u0027s neither smbios-mdrv2 nor intelcpusensor, and why should I? What JSON config? psusensor uses the entity-manager configuration.\n\nThis change is to make psusensor consistent within itself, not consistent with some other service using different configurations or hardcoding configurations and making different assumptions.",
      "parentUuid": "788ae327_2edcd492",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4348713_01ad99c4",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-05-11T00:39:45Z",
      "side": 1,
      "message": "This code has dependency on the service that host the present interface because it extracts cpu index from the path. Two different ways get the index from the path is the issue when multiple services provide this interface. The services include smbios, intelcpusensor and gpio_present.\n\n1. line 1020 \ncpuIndex \u003d std::stoi(obj.substr(obj.find_last_of(\"cpu\") + 1));\ncpuIndex will be 0 based because it only work with \"cpuX\" (smbios or gpio_present service)\n\n2. line 1267\nindex \u003d std::stoi(path.substr(path.size() - 1));\nindex can end up 0 based or 1 based because it works with both cpuX (smbios or gpio_present service) and \"cpu_X\" (intelcpusensor, 1 baes index)\n\nchange #2 to #1 will ensure the both places, index is 0 based and then it is consistent within psu sensor.",
      "parentUuid": "71cbab7c_b143fee2",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94d5239_db7aa685",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1267,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-05-13T07:26:28Z",
      "side": 1,
      "message": "OK, got it. You point is totally unrelated to the index (be it 0 based or 1 based), but is rather about parsing the index.",
      "parentUuid": "b4348713_01ad99c4",
      "revId": "ef6f7dca3e2c90c98e3b704f30795303fdd1f5ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}