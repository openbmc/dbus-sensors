{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "75416f58_cdd7ae86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-05T23:20:34Z",
      "side": 1,
      "message": "It\u0027s quite helpful if you prefix the subject with the affected component, e.g:\n\n```\nDeviceMgmt: add driver binding support for existing devices\n```",
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3a38413_a922bd01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T23:38:16Z",
      "side": 1,
      "message": "Good point. I\u0027ll do that for my other (related) PRs.",
      "parentUuid": "75416f58_cdd7ae86",
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4eadfd6_d018093e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-05T23:20:34Z",
      "side": 1,
      "message": "What does this mean?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 12
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "164818d6_023431b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T23:38:16Z",
      "side": 1,
      "message": "In HPE\u0027s case, there\u0027s a GXP-I2C driver that scans each bus, adding sensor devices from outside userspace -- which guarantees write attempts to delete_device from userspace for affected devices will fail.\n\nI would need to confirmed specifics on any GXP-I2C driver behaviors, but at the end of the day, we\u0027ve got devices added from outside userspace that add_device and delete_device sysfs calls won\u0027t work on as a result.",
      "parentUuid": "a4eadfd6_d018093e",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 12
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9847805_9aa09aed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T23:50:04Z",
      "side": 1,
      "message": "I went ahead and changed up the phrasing a bit",
      "parentUuid": "164818d6_023431b0",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 12
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb36d024_b20b70cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T21:39:15Z",
      "side": 1,
      "message": "This solves for situations where a device is added to I2C bus from outside userspace, but the device hasn\u0027t been bound to a driver yet.",
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f44e5212_514d1fab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-05T23:20:34Z",
      "side": 1,
      "message": "Hi Christopher, do you mind looking over the following change?\n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75497",
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0238da0_714f72ac",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-05T23:20:34Z",
      "side": 1,
      "message": "We\u0027ve already taken an early exit following the test for the inverse condition above, so this is always true, right?",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 29
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c193808_cce0b21d",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T23:38:16Z",
      "side": 1,
      "message": "This was mostly chosen by the CI tool rules.\n\nMy original setup was something closer to:\nif (deviceReady)\n.. //do nothing\nelse if (devicePresent)\n.. // bind driver\nelse if (!devicePresent)\n.. // add_device -- original behavior",
      "parentUuid": "a0238da0_714f72ac",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 29
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec0bd0db_ea49c9f5",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-06T23:59:05Z",
      "side": 1,
      "message": "What do you mean by \"mostly chosen by the CI tool rules?\n\nYour original code suffers the same observation and could have been written:\n\n```\nif (deviceReady) {\n    ...\n} else if (devicePresent) {\n    ...\n} else {\n    ...\n}\n```\n\nNo need for the `(!devicePresent)` condition, as we already know its true by nature of not taking the `else if (devicePresent)` branch.",
      "parentUuid": "1c193808_cce0b21d",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 29
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be5a7791_7e20948b",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-07T01:00:41Z",
      "side": 1,
      "message": "The chain of blame is a little murky-- \n\nI mean I coded one thing, aiming to make it \u0027obvious\u0027 what\u0027s being done, rather than brief-- made some tweaks and tested, ran the CI tool locally, accepted the changes and pushed to gerrit-- then had a \"What the heck did I upload again?\" moment when looking over that if-else section.\n\nI either uploaded an older iteration of my if-else chain, or the CI scripts suggested a rewrite for it (I think this one) -- or some combination.\n\nEither way, I\u0027ll try explicitly setting your version of the if-else and see what happens tomorrow.",
      "parentUuid": "ec0bd0db_ea49c9f5",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 29
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27970c33_1f3b2f49",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-10T20:07:30Z",
      "side": 1,
      "message": "...maybe it\u0027d make sense to have DeviceMgmt keep track of paths for anything it successfully did a driver binding for, then only unbind on delete_device fail if it\u0027s on that list. \n\nI\u0027ll do some experimenting there -- assuming no one chimes in to say it\u0027s not needed in the meantime...",
      "parentUuid": "be5a7791_7e20948b",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 29
      },
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48b4687f_ba50ed08",
        "filename": "src/DeviceMgmt.cpp",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2025-02-05T21:46:10Z",
      "side": 1,
      "message": "I have an update for this section here-- to check if a driver needs to be unbound on destroy() for devices added from outside userspace (delete_device writes will always fail on those).\n\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/78014\n\nIt\u0027s a separate fix because I didn\u0027t think about it until I was already uploading this change to Gerrit. It\u0027s uploaded for any comments on methodology, but will be marked WIP until I\u0027ve tested it on a live system.",
      "revId": "6b0f4f66bad4b940a34a51917173d8132ceb76c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}