{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62fdb3ad_af50cda5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "Did you delete the old method, so even if the HW supports interrupt, it only polls periodically? The old method needs to be preserved",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a93a0d0d_52fff7cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62fdb3ad_af50cda5",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a705483_5b0154ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T20:40:16Z",
      "side": 1,
      "message": "As written, this moves ALL systems to polling, regardless of whether they\u0027re capable of polling or not.  For this to make it on master, it needs to add some kind of detection logic to determine if the GPIO in question can be interrupred, and fall back to polling only in the case where the gpio didn\u0027t support interrupts.",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bcaf6f4_0022b470",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a705483_5b0154ac",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5365a1c_3d4a2c5d",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "erase from staticGpioMap?",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fec06f6d_0166fb85",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5365a1c_3d4a2c5d",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "936babda_6496a2ed",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 266,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "This is used multiple places, consider add a member variable for it",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 30
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0023027_bfe08286",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 266,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "936babda_6496a2ed",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 30
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b984dae4_bf262778",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "use constexpr for magic number",
      "range": {
        "startLine": 271,
        "startChar": 27,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "babca1c2_7d4f05e8",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b984dae4_bf262778",
      "range": {
        "startLine": 271,
        "startChar": 27,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b017c7_8b7397dc",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "Use weak_ptr to prevent accessing invalid pointers",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 13
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0776ace0_06211ef9",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2022-07-08T07:28:28Z",
      "side": 1,
      "message": "Could there be an invalid pointer here?",
      "parentUuid": "72b017c7_8b7397dc",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 13
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f9ac14b_f9b3270b",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-20T03:46:41Z",
      "side": 1,
      "message": "The answer is \"It depends\", but it\u0027s not possible for weak_ptr to be incorrect.",
      "parentUuid": "0776ace0_06211ef9",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 13
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f42afc8f_11fe365f",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1001000
      },
      "writtenOn": "2022-07-26T04:08:50Z",
      "side": 1,
      "message": "I am unable to understand why the pointer is valid that depends. However, some codes using \"class TachSensor: public enable_shared_from_this\u003cTachSensor\u003e\" to resolve the issue.",
      "parentUuid": "4f9ac14b_f9b3270b",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 13
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}