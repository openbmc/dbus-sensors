{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62fdb3ad_af50cda5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "Did you delete the old method, so even if the HW supports interrupt, it only polls periodically? The old method needs to be preserved",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a705483_5b0154ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T20:40:16Z",
      "side": 1,
      "message": "As written, this moves ALL systems to polling, regardless of whether they\u0027re capable of polling or not.  For this to make it on master, it needs to add some kind of detection logic to determine if the GPIO in question can be interrupred, and fall back to polling only in the case where the gpio didn\u0027t support interrupts.",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5365a1c_3d4a2c5d",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "erase from staticGpioMap?",
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "936babda_6496a2ed",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 266,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "This is used multiple places, consider add a member variable for it",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 30
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b984dae4_bf262778",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "use constexpr for magic number",
      "range": {
        "startLine": 271,
        "startChar": 27,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b017c7_8b7397dc",
        "filename": "src/TachSensor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-06-23T03:48:25Z",
      "side": 1,
      "message": "Use weak_ptr to prevent accessing invalid pointers",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 13
      },
      "revId": "0a0cba2381944481151f2fd7edc8b3c5188c0eea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}