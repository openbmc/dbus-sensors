{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78ad8545_f54184dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-08T18:17:42Z",
      "side": 1,
      "message": "Lets run some more tests by changing thresholds of existing sensors, and ensuring that they get re-initted, and the runtime-modification behavior you\u0027re changing the code for isn\u0027t effected.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e311ad96_d013e5dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-09T09:29:46Z",
      "side": 1,
      "message": "Do you have examples of commands to change the thresholds? I don\u0027t use the feature of thresholds, so am unsure how to test. I\u0027ve tested sensors matching against \"PSU names\" given in the incoming change notification messages, and these correctly work: named sensors are re-created, but sensors not named in the allowlist are unaffected.",
      "parentUuid": "78ad8545_f54184dc",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84a9b1bd_5f693861",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-09-09T20:15:32Z",
      "side": 1,
      "message": "IPMI sensor commands can be used:\nread sensor value and thresholds: ipmitool raw 0x04 0x27 sensor_number \nset sensor threshold thresholds: ipmitool raw 0x04 0x26 sensor_number 0x1b low-non-critical low-critical 0x00 upper-non-critical upper-critical 0x00",
      "parentUuid": "e311ad96_d013e5dd",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a2a8964_0cfb7836",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-10T19:46:50Z",
      "side": 1,
      "message": "Thanks for these IPMI commands! I will try them soon.",
      "parentUuid": "84a9b1bd_5f693861",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "139103c2_ead2bf82",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-09-09T23:12:21Z",
      "side": 1,
      "message": "I am not following the purpose of keeping not consumed changes in sensorsChanged. Is it going to be used in a scan later and be consumed? Any risk of this becomes a memory leak?",
      "range": {
        "startLine": 940,
        "startChar": 0,
        "endLine": 954,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27de9f76_8f4be499",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-10T19:46:50Z",
      "side": 1,
      "message": "This preserves existing behavior. I wanted to stay true to the existing behavior, by fixing merely a bug in implementation, not changing behavior. If a PSU name comes in that does not match any existing sensor, yes, it will stay in memory. However, that is mitigated by the fact the main loop coalesces duplicate PSU names together. It\u0027s a set, not a list. Somebody could still wrongly fill up memory by sending lots of bogus D-Bus messages under a variety of made-up PSU names, though. This vulnerability also exists in the original code. Should this be addressed? If so, should we have a hardcoded limit on the number of outstanding PSU names that can be addressed by notification messages?",
      "parentUuid": "139103c2_ead2bf82",
      "range": {
        "startLine": 940,
        "startChar": 0,
        "endLine": 954,
        "endChar": 0
      },
      "revId": "e8c9b63b83d65959fa0920a6f6635c26e2de18c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}