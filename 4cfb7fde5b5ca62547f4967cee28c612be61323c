{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b04d886d_4116dcf8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-12-18T21:45:05Z",
      "side": 1,
      "message": "Where is this check? The code sets it to `nullptr` unconditionally.",
      "range": {
        "startLine": 10,
        "startChar": 37,
        "endLine": 11,
        "endChar": 26
      },
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac078fbe_d2da1668",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1001023
      },
      "writtenOn": "2023-12-18T23:23:41Z",
      "side": 1,
      "message": "I removed the check since it wasn\u0027t necessary.  I\u0027ve updated the commit message to better reflect the change.",
      "parentUuid": "b04d886d_4116dcf8",
      "range": {
        "startLine": 10,
        "startChar": 37,
        "endLine": 11,
        "endChar": 26
      },
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf233980_29649c1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-12-18T21:45:05Z",
      "side": 1,
      "message": "Hi Matt, maybe I haven\u0027t had enough coffee this morning but I\u0027m not entirely following why this works. I\u0027ve left a couple of comments inline.",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af7be1d8_5790f72c",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-12-18T21:45:05Z",
      "side": 1,
      "message": "Can you unpack for me the mechanics of why this is correct? Ideally in a comment in the code?",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9250c5e3_d29e4976",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1001023
      },
      "writtenOn": "2023-12-18T23:23:41Z",
      "side": 1,
      "message": "This is done is most of the sensor classes. Setting the sensor to nullptr will call the deconstructor which will remove the dbus interfaces.  We need this to happen first otherwise when we make the new ExitAirTempSensor object we\u0027ll create interface properties that already exist causing the service to crash.",
      "parentUuid": "af7be1d8_5790f72c",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7637afe_8bf0e4e7",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-12-19T22:44:47Z",
      "side": 1,
      "message": "\u003e Setting the sensor to nullptr will call the deconstructor which will remove the dbus interfaces.\n\nGiven exitAirSensor is a `std::shared_ptr\u003cExitAirTempSensor\u003e` there\u0027s additional reasoning required to demonstrate that the destructor is guaranteed to be called here, right? Can you add some comments covering that reasoning?\n\n\u003e We need this to happen first otherwise when we make the new ExitAirTempSensor object we\u0027ll create interface properties that already exist causing the service to crash.\n\nIn the commit message you mention:\n\n\u003e Tested: Added two ExitAirTempSensor in entity-manager configuration to\n\u003e simulate two sensors getting created.  Without fix I observed a crash\n\u003e with the error: \"exitairtempsensor:   what():  sd_bus_add_object_vtable:\n\u003e org.freedesktop.DBus.Error.FileExists: File exists\".  With the fix the\n\u003e service doesn\u0027t crash and a new sensor is created.\n\nI\u0027m stuck at an assumption that if there are two configurations exposed EM then we should be hosting two ExitAirTempSensor D-Bus objects concurrently. If that\u0027s the case then why are we trying to destroy one of them?\n\nAre both configurations specified with the same `Name` property, causing a collision? Isn\u0027t the configuration wrong in that case? If so, shouldn\u0027t ExitAirTempSensor log the problem and skip the colliding configuration rather than destroy the original sensor?",
      "parentUuid": "9250c5e3_d29e4976",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04879288_8e4f07f6",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-12-20T01:01:40Z",
      "side": 1,
      "message": "\u003e \n\u003e I\u0027m stuck at an assumption that if there are two configurations exposed EM then we should be hosting two ExitAirTempSensor D-Bus objects concurrently. If that\u0027s the case then why are we trying to destroy one of them?\n\u003e \n\nCurrently, exitAirSensor is a one global variable, it does not support two. The issue being fixed here is if the exitAirSensor config is updated, it needs to be reinitialized. Before the new one can be created on the bus, the old one needs to be destroyed, which is accomplished here by the new line of code.",
      "parentUuid": "f7637afe_8bf0e4e7",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "107dcc0d_26b0807d",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-12-20T03:34:44Z",
      "side": 1,
      "message": "\u003e The issue being fixed here is if the exitAirSensor config is updated, it needs to be reinitialized. \n\nOkay, can we say as much in the commit message then? Currently it says:\n\n\u003e Tested: Added two ExitAirTempSensor in entity-manager configuration to\nsimulate two sensors getting created.\n\nIt seems like these are descriptions of two distinct problems, and the patch as it stands can only address the one that isn\u0027t in the commit message.",
      "parentUuid": "04879288_8e4f07f6",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b03d5ed_a8defb61",
        "filename": "src/ExitAirTempSensor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1001023
      },
      "writtenOn": "2023-12-21T20:08:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "107dcc0d_26b0807d",
      "revId": "4cfb7fde5b5ca62547f4967cee28c612be61323c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}