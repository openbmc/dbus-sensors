{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9d409f8_8ab95e82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 55
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "The implementation largely looks fine, though I left a few comments on the inotify handling. The main concern is the cable configuration file. I guess that\u0027s an implementation detail to some degree - it doesn\u0027t prevent us from providing the equivalent information via EM at some point down the track. I\u0027d like some acknowledgement from @ed@tanous.net though.",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa5abe82_634cb83d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 55
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-18T01:47:20Z",
      "side": 1,
      "message": "The intent on EM reactors (from the original author, not me) is that they follow the EM configuration file for compile time config, and use the createobject dbus interface for runtime config.  I understand that meta wants to update this config at runtime using some package install system?  That needs to be called out in the commit.\n\n@paligill@gmail.com were you able to look at the addObject dbus method?\n\nhttps://github.com/openbmc/entity-manager/blob/809fbdc2d7052dc7eb3612562eb7b0d2820b924b/src/entity_manager/dbus_interface.cpp#L271\n\nCould your package interact with that to configure how many/what detectors are available.\n\nIf this really comes down to only the config file... I\u0027m willing to let that go, but I\u0027d like to know that we at least looked at the methods intended for this, and can articulate why we need config files instead.\n\nFWIW, the addObject methods are already used in Redfish to create/destroy pid loops and fan control config, so if that\u0027s your goal, we know this essentially already works.",
      "parentUuid": "f9d409f8_8ab95e82",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a15f4ba6_6935d743",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 86,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "You need to make sure this correctly aligned if you\u0027re casting buffer pointers to multi-byte quantities and dereferencing the pointers. See the example here:\n\nhttps://www.man7.org/linux/man-pages/man7/inotify.7.html#EXAMPLES",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dd9af80_00fcb4cd",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 86,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-15T02:05:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a15f4ba6_6935d743",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df4f3670_aabd26d3",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "could use `buffer.size()` here and eliminate the need for `maxBytes`?",
      "range": {
        "startLine": 88,
        "startChar": 41,
        "endLine": 88,
        "endChar": 49
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d13e5e0_22c6e6b5",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 88,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-15T02:05:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df4f3670_aabd26d3",
      "range": {
        "startLine": 88,
        "startChar": 41,
        "endLine": 88,
        "endChar": 49
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73438ccb_c304f3f1",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 100,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "Would it not be less tedious to `reinterpret_cast\u003cinotify_event\u003e(buffer.data())` and dereference the members directly rather than do all the pointer math throughout. Admittedly there\u0027s a flexible array involved and you\u0027ll still need move over the name bytes, but once you\u0027ve reached the next `inotify_event` (if there are multiple) then you should be okay.\n\nThe wording of `man 7 inotify` suggests that there can be multiple null bytes accounted for in `len`, in which case I expect the kernel is padding appropriately to maintain alignment for the subsequent `inotify_event`.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ec53f81_cbe14766",
        "filename": "src/NotifyWatch.cpp",
        "patchSetId": 55
      },
      "lineNbr": 100,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-15T02:05:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73438ccb_c304f3f1",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73480dd6_8e03aff4",
        "filename": "src/cable-monitor/CableConfig.hpp",
        "patchSetId": 55
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "Why `.d`? Are we accumulating the configurations underneath it?",
      "range": {
        "startLine": 14,
        "startChar": 64,
        "endLine": 14,
        "endChar": 66
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4fbedef_981c0d91",
        "filename": "src/cable-monitor/CableConfig.hpp",
        "patchSetId": 55
      },
      "lineNbr": 14,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-15T00:18:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73480dd6_8e03aff4",
      "range": {
        "startLine": 14,
        "startChar": 64,
        "endLine": 14,
        "endChar": 66
      },
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bc75fca_3acc6f7f",
        "filename": "src/cable-monitor/CableConfig.hpp",
        "patchSetId": 55
      },
      "lineNbr": 15,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-14T03:25:27Z",
      "side": 1,
      "message": "This makes it seem like the answer is no.",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ab4f80f_b1ada733",
        "filename": "src/cable-monitor/CableConfig.hpp",
        "patchSetId": 55
      },
      "lineNbr": 15,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-15T00:18:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bc75fca_3acc6f7f",
      "revId": "b451b7a8aea5d9ef692322012732f003cca229cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}