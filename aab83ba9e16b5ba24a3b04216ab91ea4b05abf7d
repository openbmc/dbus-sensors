{
  "comments": [
    {
      "key": {
        "uuid": "f7043bfc_77cd5382",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "Please wrap your commit message 52/70",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 79
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df5cf957_8cd51f0c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 13,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-05T09:11:52Z",
      "side": 1,
      "message": "Will fix in new patch.",
      "parentUuid": "f7043bfc_77cd5382",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 79
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "523492d2_6184509d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1000866
      },
      "writtenOn": "2021-09-03T06:42:01Z",
      "side": 1,
      "message": "Is there a plan to implement PDR? if the PDR is supported and implemented we don\u0027t need to statically configure the sensors.",
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc7f0347_1e494ded",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-03T07:00:08Z",
      "side": 1,
      "message": "The PDR is planned to be implemented in another service. The service  fetchs the PDR from PLDM terminus and exposes the setting to dbus. I would like to keep PldmSensor to get setting from dbus like other dbus-sensor dose. So that the sensor settings can be from PDR or EntityManage\u0027s json files.",
      "parentUuid": "523492d2_6184509d",
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5537003_c8da79dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T19:28:07Z",
      "side": 1,
      "message": "\u003e The PDR is planned to be implemented in another service. The service  fetchs the PDR from PLDM terminus and exposes the setting to dbus. I would like to keep PldmSensor to get setting from dbus like other dbus-sensor dose.\n\nI\u0027m assuming for a moment that PDR is equivalent to IPMIs SDR.  If it\u0027s not, feel free to ignore the following.\n\nIn that case, we should be getting both.  dbus should be invoking the openbmc specific configurations, which in this case might just be \"has a PLDM device\", then the pldm daemon can go read the PDR to determine which sensors it needs to expose, and that their units and thresholds are.  I could imagine wanting to have a list of sensor names to expose, but \n\n\u003e So that the sensor settings can be from PDR or EntityManage\u0027s json files.\n\nI\u0027d like to minimize the amount of information we\u0027re pulling from entity-manager for things that already have a mechanism for dynamically publishing a sensor list if we can.  This isolates entity-manager configs from firmware changes that might add, remove, or change sensors on dependent devices.",
      "parentUuid": "cc7f0347_1e494ded",
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "701ba4c8_0758d2a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "You should mention the similarities and differences between this and IPMB sensor.",
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7618cf48_f0459d13",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "Do PLDM sensors not publish their units to the bus?  It seems odd that they don\u0027t have that covered in the standard.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "467d80c0_ccd3b7ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-03T09:45:45Z",
      "side": 1,
      "message": "Yes, PLDM does publish their units in DSP0248 Table 74-sensorUnits enumeration table.\nMy idea is that SensorUnit here is used for dbus sensor, so it should follow the defines in phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/Sensor/Value.interface.yaml.\nThe provider of the xyz.openbmc_project.Configuration.PldmNumericSensor should take care to convert PLDM\u0027s units to dbus-interface\u0027s units.\n\nIs my understanding correct?",
      "parentUuid": "7618cf48_f0459d13",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7e5fac_e5785c85",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T19:28:07Z",
      "side": 1,
      "message": "\u003e Yes, PLDM does publish their units in DSP0248 Table 74-sensorUnits enumeration table.\n\u003e My idea is that SensorUnit here is used for dbus sensor, so it should follow the defines in phosphor-dbus-interfaces/blob/master/xyz/openbmc_project/Sensor/Value.interface.yaml.\n\nLooking at table 74, it looks like a simple lookup table of PLDM ID to dbus sensor units could be put into code, which would remove the need for the user to explicitly set the type.  We should do that.  At the moment, the only place we generally set Units is for ExternalSensor, where the units are unknowable by any API at runtime, and not provided by any specification.\n\n\u003e The provider of the xyz.openbmc_project.Configuration.PldmNumericSensor should take care to convert PLDM\u0027s units to dbus-interface\u0027s units.\n\nConsidering that provider is entity-manager, no, entity-manager should not have PLDM specific lookup tables or code in it, that should be kept within the PLDM sensor implementation.\n\n\u003e \n\u003e Is my understanding correct?\n\nNot quite.  Let me know if my above descriptions help you.",
      "parentUuid": "467d80c0_ccd3b7ce",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a0527ac_fac7b487",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-05T09:11:52Z",
      "side": 1,
      "message": "Thanks for the feedback, I will update the commit message. The new patch will use PLDM ID instead of dbus sensor unit string and implement a lookup table in pldmsensor to covert the unit.",
      "parentUuid": "6c7e5fac_e5785c85",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "850835cd_ee233c06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "Some things that might be missing:\nMinValue/Maxvalue?\nOffset/scale?  (might not be required)\nThresholds?",
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b4521ed_470723ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "Does PLDM have the equivalent of the IPMI SDR command?  SHould we be using that instead of adding it to the config?  That duplicates some information that we probably shouldn\u0027t be.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 21
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b031cd_01f2055f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-03T09:45:45Z",
      "side": 1,
      "message": "Yes, PLDM has PDR like what IPMI SDR does. According to the DSP0248 8.3.1, the PDR is not mandatory. BMC uses PLDM only as a mechanism for accessing monitoring and control functions.\nThis proposal let pldmsensor always gets the setting from dbus interface.\nFor use case of PLDM for access only, the sensor settings are defined in configurations json file of EntityManager.\nFor the use case of PLDM with PDR, there will be a service to fetch PDR and expose to dbus interface directly",
      "parentUuid": "0b4521ed_470723ad",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 21
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c74d65d6_f6b42353",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T19:28:07Z",
      "side": 1,
      "message": "\u003e Yes, PLDM has PDR like what IPMI SDR does. According to the DSP0248 8.3.1, the PDR is not mandatory.\n\nA quick reading of the spec shows that this is only for \"static devices\", which generally wouldn\u0027t populate sensors?  Are you developing for a device that doesn\u0027t expose a PDR?\n\n\u003e BMC uses PLDM only as a mechanism for accessing monitoring and control functions.\n\u003e This proposal let pldmsensor always gets the setting from dbus interface.\n\u003e For use case of PLDM for access only, the sensor settings are defined in configurations json file of EntityManager.\n\u003e For the use case of PLDM with PDR, there will be a service to fetch PDR and expose to dbus interface directly\n\nI think I answered my above question.  The devices you are using have PDRs, so we should be using that to drive our decisions to keep the entity-manager configs small and self contained.",
      "parentUuid": "13b031cd_01f2055f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 21
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6de7a8_48bba571",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-05T09:11:52Z",
      "side": 1,
      "message": "\u003e A quick reading of the spec shows that this is only for \"static devices\", which generally wouldn\u0027t populate sensors?  Are you developing for a device that doesn\u0027t expose a PDR?\n\nYes, I am developing for a device that doesn\u0027t expose a PDR.I think the \"static device\" shows in \"figure 1-PLDM used for access only\" does populate sensor. \nBecause the device is without PDR, the semantic or descriptive information should be in a vendor-specific configuration provided by the system integrator. In this implementation, it is expected to be defined in one of configs of EntityManager.\n \n\u003e I think I answered my above question.  The devices you are using have PDRs, so we should be using that to drive our decisions to keep the entity-manager configs small and self contained.\n\nAgree with that for device with PDR, PldmSensor can be implemented to fetch all setting from PDR directly to keep entity-manager configs small and self contained. But for the device that is \"PLDM for access only\" still needs these properties in dbus-interface.",
      "parentUuid": "c74d65d6_f6b42353",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 21
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df21c32f_ff37253c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T22:33:06Z",
      "side": 1,
      "message": "This would imply that we need 4 different commits.  Lets pick which one is most important (I\u0027m guessing NumericSensor, as it\u0027s very similar to IPMBsensor), then lets add the rest of these in later commits.\n\nIt looks like you\u0027ve done that, but lets remove it from the commit message.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 19
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a286a21_5462bac3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-09-05T09:11:52Z",
      "side": 1,
      "message": "I will remove it from commit message in new patch.",
      "parentUuid": "df21c32f_ff37253c",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 19
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce66d71f_18496900",
        "filename": "src/PLDMSensor.cpp",
        "patchSetId": 12
      },
      "lineNbr": 49,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-09-03T08:19:29Z",
      "side": 1,
      "message": "Where this variable is used ?",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 40
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b996ab92_2d0f3a40",
        "filename": "src/PLDMSensor.cpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-09-03T08:19:29Z",
      "side": 1,
      "message": "Suggest to use variable instead of hardcoded string here.",
      "range": {
        "startLine": 72,
        "startChar": 18,
        "endLine": 72,
        "endChar": 47
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2edeb1b4_a9e33e6c",
        "filename": "src/PLDMSensor.cpp",
        "patchSetId": 12
      },
      "lineNbr": 145,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-08-31T17:25:46Z",
      "side": 1,
      "message": "Can the function be made bool and return false or true? \nWhy are we using -1 and 0. I am not able to find a reason by looking at the code.\n\nIf you still want to keep int as function type, define static constexpr int \u0027pldmSuccess\u0027 and \u0027pldmFailure\u0027 and use that.",
      "range": {
        "startLine": 145,
        "startChar": 8,
        "endLine": 145,
        "endChar": 18
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf8c0af_2f0f530a",
        "filename": "src/PLDMSensor.cpp",
        "patchSetId": 12
      },
      "lineNbr": 225,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-08-31T17:25:46Z",
      "side": 1,
      "message": "Can we make pollTime a member of the class as in other sensor classes.",
      "range": {
        "startLine": 225,
        "startChar": 39,
        "endLine": 225,
        "endChar": 40
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35557d23_5e19681a",
        "filename": "src/PLDMSensor.cpp",
        "patchSetId": 12
      },
      "lineNbr": 245,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-09-03T08:19:29Z",
      "side": 1,
      "message": "Suggest to use meaningful variable.",
      "range": {
        "startLine": 245,
        "startChar": 19,
        "endLine": 245,
        "endChar": 20
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b83b039_35548f63",
        "filename": "src/PLDMSensorMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2021-09-03T08:19:29Z",
      "side": 1,
      "message": "Any config file submitted for PLDM sensor?",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 90,
        "endChar": 77
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "939874b7_8c6d6309",
        "filename": "src/PLDMSensorMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 171,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-08-31T17:25:46Z",
      "side": 1,
      "message": "Either just use \u0027return;\u0027, or define success and failure and then use that to return.",
      "range": {
        "startLine": 171,
        "startChar": 8,
        "endLine": 171,
        "endChar": 18
      },
      "revId": "aab83ba9e16b5ba24a3b04216ab91ea4b05abf7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}