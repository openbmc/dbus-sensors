{
  "comments": [
    {
      "key": {
        "uuid": "d5be3914_8bc4af33",
        "filename": "src/CPUSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-18T15:25:26Z",
      "side": 1,
      "message": "FWIW, I dislike that the design makes these non-RAII objects that have to be explicitly deleted, but it\u0027s the design we have right now.\n\nAny thoughts or patchset you have on making writing correct code more trivial would be appreciated.",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b782eec69267206863c07f9ea26b475be7f0f291",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "402172d6_1e2bb347",
        "filename": "src/CPUSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-10-18T16:02:58Z",
      "side": 1,
      "message": "Yep. \nPromoting the use of unique_ptr d-bus interfaces instead of shared_ptr can help in this context. In that case we don\u0027t need to worry about destructing it explicitly.\nAlso, in our internal discussion I got a question why Sensor class can\u0027t have a destructor which removes the interfaces. I am not exactly sure why we are not doing it as a generic way. Any thoughts?",
      "parentUuid": "d5be3914_8bc4af33",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b782eec69267206863c07f9ea26b475be7f0f291",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a38480_6559f1cf",
        "filename": "src/CPUSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-10-18T17:45:11Z",
      "side": 1,
      "message": "I have the same question. @Arun did you observe some  specific issues/failures without the remove? All sensors should have the same issue, this should be fixed in sensor\u0027s destructor.",
      "parentUuid": "402172d6_1e2bb347",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b782eec69267206863c07f9ea26b475be7f0f291",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33a2be86_86ed0122",
        "filename": "src/CPUSensor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-10-20T06:28:48Z",
      "side": 1,
      "message": "The issue i observed in cpusensor service unsuccessful exit. The resulting coredump was pointing to operationalInterface-\u003eset_property() in sensor.hpp. This is the same issue which I mentioned in the review https://gerrit.openbmc-project.xyz/c/openbmc/dbus-sensors/+/47838/2//COMMIT_MSG#10.\n\nBut the issue was seen only once and not able to reproduce. So I am not 100% sure this is the cause. But since the interface here is a shared_ptr, an unclean exit can cause some issues if it is not destructed fully. In some other cases(different repo) i have seen interfaces exposed on D-Bus even after the class object is destroyed. That issue was solved after adding remove_interface() to to the class destructor.",
      "parentUuid": "e4a38480_6559f1cf",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "b782eec69267206863c07f9ea26b475be7f0f291",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}