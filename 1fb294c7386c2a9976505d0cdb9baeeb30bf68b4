{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "95048e72_dbe07170",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-29T23:09:39Z",
      "side": 1,
      "message": "What?\n\nCan you elaborate on this? Links to bugs?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "998dffb7_78b18e79",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-29T23:22:06Z",
      "side": 1,
      "message": "This was an error I saw, then a quick googling of the error.  I can get more details together (probably tomorrow).",
      "parentUuid": "95048e72_dbe07170",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8459a36b_1e09f3d6",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-30T18:08:56Z",
      "side": 1,
      "message": "I added links to a couple of bugs where others have done the same thing.",
      "parentUuid": "998dffb7_78b18e79",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71749e9_ebb690de",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-10-01T01:42:21Z",
      "side": 1,
      "message": "Sure, but what _specifically_ is the problem? And what\u0027s being done to fix it at the source? These are work-arounds.",
      "parentUuid": "8459a36b_1e09f3d6",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef06284_234fa244",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T18:45:03Z",
      "side": 1,
      "message": "\u003e Sure, but what specifically is the problem? \n\nCode doesn\u0027t compile and warns about mismatching enums (because they do mismatch)\n\nSpecifically, the headers are mismatched between some specific linux versions and glibc.  My understanding is that the source is already fixed, but you can\u0027t really backport the new user API headers, so the workaround seems to be to make sure that you #include headers in the right order, which is what we did before, just implicitly.  I also don\u0027t understand this fully, I just rearranged the #includes and triggered this issue.\n\nIf there\u0027s a better fix, I\u0027m happy to do it, I just don\u0027t see what that would be.",
      "parentUuid": "e71749e9_ebb690de",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34474106_84a47718",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-10-01T22:54:17Z",
      "side": 1,
      "message": "\u003e If there\u0027s a better fix, I\u0027m happy to do it, I just don\u0027t see what that would be.\n\nI\u0027m trying to understand that and I already asked for the specifics. To clarify, I\u0027d like to see the actual compiler error output of this specific problem, which may help me pinpoint patches that might fix it, if they exist. Not trying to be painful here, just if something\u0027s broken with the headers, it\u0027s broken for more than just dbus-sensors, and so deserves a fix that isn\u0027t a work-around specific to dbus-sensors.\n\nMaybe it\u0027s the case that this is the best we can do in the circumstances, but it certainly isn\u0027t clear to me that it\u0027s true, yet.",
      "parentUuid": "aef06284_234fa244",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 80
      },
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ba89a03_7dcecd30",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-29T23:09:39Z",
      "side": 1,
      "message": "Can we consider unifying this with `src/mctp/MctpEndpoint.[ch]pp`? Maybe promote it under `src/`?",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84353fea_22bfbff0",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-29T23:22:06Z",
      "side": 1,
      "message": "Happy to unify if we can, but I don\u0027t really see how.  To use the asio sockets, we explicitly need something that can explicitly use\n\nboost::asio::generic::datagram_protocol::endpoint\n\nI\u0027m not sure Making the exiting MCTPEndpoint inherit from that class makes sense.  Maybe we just make this asio class inherit from MCTPEndpoint?   Although I\u0027m not sure the interfaces quite match up.\n\nWhat are your thoughts?",
      "parentUuid": "5ba89a03_7dcecd30",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95591ad2_d232af40",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-30T01:19:36Z",
      "side": 1,
      "message": "Yeah, I understand there\u0027s a bit of a mismatch in the current needs, but I think that points to it all needing some design thought (which I haven\u0027t done). It just doesn\u0027t seem great to have two similarly named classes floating around doing completely different things.",
      "parentUuid": "84353fea_22bfbff0",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de50dadb_78a6ea4c",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-30T15:27:36Z",
      "side": 1,
      "message": "Specifically here, what are you thinking?  I could pull the asio dependency into MctpEndpoint? (maybe through an ifdef?). That doesn\u0027t seem right.\n\nIt looks like these might be two objects with the same name but different purposes.  This one is a wrapper to reasonably get at the sockaddr_mctp in a safe way.  src/mctp/MCTPEndpoint.hpp looks like a wrapper around dbus to watch for endpoint changes.  I suspect we should just name them appropriately?\n\nMCTPAddress for this one?\nExisting could go to MCTPDBusEndpoint\nand this one becomes MCTPNetEndpoint.",
      "parentUuid": "95591ad2_d232af40",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a094d10_d3bb1a35",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-10-01T01:42:21Z",
      "side": 1,
      "message": "So my comment was more idle musing than something actionable.\n\nHowever, I expect it\u0027s not worth trying to talk to an endpoint if it\u0027s not represented in the mctpd object tree. Given that instances of the classes in `src/mctp/MCTPEndpoint.[ch]pp` reflect the MCTP endpoint\u0027s lifecycle, it would seem sensible for that `MCTPEndpoint` to be able to produce one of these ASIO wrappers?\n\nAgain, just musing on an possible direction, not intending to hold anything up necessarily. Maybe fixing naming does solve the problem, though I\u0027d more lean towards incorporating `ASIO` or `Socket` for this class, given they\u0027re fundamental to its implementation.",
      "parentUuid": "de50dadb_78a6ea4c",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42d6b8d9_75c1011e",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T18:45:03Z",
      "side": 1,
      "message": "\u003e So my comment was more idle musing than something actionable.\n\u003e \n\u003e However, I expect it\u0027s not worth trying to talk to an endpoint if it\u0027s not represented in the mctpd object tree. Given that instances of the classes in `src/mctp/MCTPEndpoint.[ch]pp` reflect the MCTP endpoint\u0027s lifecycle, it would seem sensible for that `MCTPEndpoint` to be able to produce one of these ASIO wrappers?\n\nMy thought there is to not impose an asio requirement for applications that didn\u0027t otherwise need it.  I could move this into something like src/mctp/asio/x.hpp just so it\u0027s common, then at least we have something common?\n\n\u003e \n\u003e Again, just musing on an possible direction, not intending to hold anything up necessarily. Maybe fixing naming does solve the problem, though I\u0027d more lean towards incorporating `ASIO` or `Socket` for this class, given they\u0027re fundamental to its implementation.\n\nI can rename, I think that\u0027s a good idea.",
      "parentUuid": "0a094d10_d3bb1a35",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6d79d45_0de0716c",
        "filename": "src/nvidia-gpu/MctpEndpoint.hpp",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T19:57:42Z",
      "side": 1,
      "message": "updated to do that.\n\nI agree, a generic socket class would be a good thing.  That\u0027s where I\u0027m hoping to get cleaning up MctpRequester:\n\nhttps://github.com/openbmc/dbus-sensors/blob/master/src/nvidia-gpu/MctpRequester.hpp\n\nWhich I\u0027m starting to hack together here:\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/84097",
      "parentUuid": "42d6b8d9_75c1011e",
      "revId": "1fb294c7386c2a9976505d0cdb9baeeb30bf68b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}