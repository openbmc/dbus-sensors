{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d70f172c_c6721bf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-01-10T07:01:26Z",
      "side": 1,
      "message": "Hai all,\nGentle remainder, Please review on this patch if possible.",
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "805c9166_12951000",
        "filename": "src/GpioStateSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 139,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-01-10T21:11:28Z",
      "side": 1,
      "message": "Need skip line 141-143\nAlso, should it be counted as error?",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 139,
        "endChar": 17
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf63187c_7e790b58",
        "filename": "src/GpioStateSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 139,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-01-25T17:10:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "805c9166_12951000",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 139,
        "endChar": 17
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9114582c_57c51b2c",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 497,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2021-12-25T20:05:16Z",
      "side": 1,
      "message": "Rearrange the code so that diff is readable for the reviewer.",
      "range": {
        "startLine": 497,
        "startChar": 19,
        "endLine": 497,
        "endChar": 58
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "141dc901_39920042",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 497,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2021-12-30T06:28:01Z",
      "side": 1,
      "message": "The reason it is clubbed together with ipmb sensor  is that this gpio sensor is kind of ipmb  sensor where we read the gpio state via ipmb. Also  it needs to be instantiated from the createsensors function.\nApart from the object creation, all other logics are move under seperate class.\nHai @Ed Tanuos,\nDo we need to create a seperate main function and createsensor function for this gpio state via ipmb?\nplease suggest your opinion on this.",
      "parentUuid": "9114582c_57c51b2c",
      "range": {
        "startLine": 497,
        "startChar": 19,
        "endLine": 497,
        "endChar": 58
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bbe26d2_2a097ef9",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 497,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-23T02:45:55Z",
      "side": 1,
      "message": "\u003e The reason it is clubbed together with ipmb sensor  is that this gpio sensor is kind of ipmb  sensor where we read the gpio state via ipmb.\n\nThen it should use the same internals.  It shouldn\u0027t need to host the same object.\n\n\u003e Also  it needs to be instantiated from the createsensors function.\n\nThis doesn\u0027t mean that you\u0027re not required to abstract out your functionality appropriately.  Use methods and classes where appropriate, while breaking things into common implementations.\n\n\u003e Apart from the object creation, all other logics are move under seperate class.\n\u003e Hai @Ed Tanuos,\n\u003e Do we need to create a seperate main function and createsensor function for this gpio state via ipmb?\n\u003e please suggest your opinion on this.\n\nThere needs to be a signfican refactoring here.  There is way too much logic going into the config files (admittedly that was true with ipmbsensor before you made this change).  We need to abstract things cleanly;  The ideal declaration a user would make is a Type\u003d\"my piece of hardware\" in the config file, with the rest being dealt with by software.\n\nThis doesn\u0027t necessarily mean you need your own main, but it does mean that you need some reasonable abstractions, and reuse the methods that exist.\n\n\nFWIW, the original comment was just telling you those two variables needed to go on their own lines (and be initialized).",
      "parentUuid": "141dc901_39920042",
      "range": {
        "startLine": 497,
        "startChar": 19,
        "endLine": 497,
        "endChar": 58
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af34d3e4_28ded7ba",
        "filename": "src/IpmbSensor.cpp",
        "patchSetId": 9
      },
      "lineNbr": 497,
      "author": {
        "id": 1001135
      },
      "writtenOn": "2022-03-22T11:27:31Z",
      "side": 1,
      "message": "Ack, the most of the configuration form the config files has been removed and just device name is specified in the config file and rest is done as code logic.",
      "parentUuid": "6bbe26d2_2a097ef9",
      "range": {
        "startLine": 497,
        "startChar": 19,
        "endLine": 497,
        "endChar": 58
      },
      "revId": "f7f454b104f93341fd8a6b87e49b8d35f3887779",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}