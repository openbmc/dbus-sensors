{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0e0d9833_2ca0b054",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-12-17T18:44:46Z",
      "side": 1,
      "message": "Is this newly proposed entity-manager config? https://github.com/openbmc/entity-manager/tree/master/schemas needs to be updated to support this",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 18,
        "endChar": 1
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4896b9c_da4d060e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-12-17T18:44:46Z",
      "side": 1,
      "message": "can you link to the said driver? Is it supported in https://github.com/openbmc/linux?",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d0d4e9d_e903da7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-12-19T09:36:24Z",
      "side": 1,
      "message": "Hi, thanks for your review. The driver is still in Aspeed\u0027s linux https://github.com/AspeedTech-BMC/linux/blob/aspeed-master-v5.15/drivers/hwmon/aspeed-chassis.c",
      "parentUuid": "e4896b9c_da4d060e",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8d57d6_9e53525b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1001496
      },
      "writtenOn": "2022-12-19T09:54:29Z",
      "side": 1,
      "message": "Is there any plan to upstream?",
      "parentUuid": "1d0d4e9d_e903da7e",
      "range": {
        "startLine": 20,
        "startChar": 55,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a942ed_6fd8e08a",
        "filename": "include/ChassisIntrusionSensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-12-17T18:44:46Z",
      "side": 1,
      "message": "Instead of just copying and duplicating the functions, please refactor the code to use inheritance and function override.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 70,
        "endChar": 31
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a31173_43138b0c",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 289,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-12-20T17:28:07Z",
      "side": 1,
      "message": "Can we keep only second log message dropping first one. Same information is conveyed by both lines.",
      "range": {
        "startLine": 288,
        "startChar": 1,
        "endLine": 289,
        "endChar": 74
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea66e9f6_987c90b0",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-12-20T17:28:07Z",
      "side": 1,
      "message": "This be if constexpr. constexpr version will save on binary size.",
      "range": {
        "startLine": 286,
        "startChar": 1,
        "endLine": 290,
        "endChar": 9
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc981a5f_691088f6",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 296,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-12-20T17:28:07Z",
      "side": 1,
      "message": "newValue can either be \"HardwareIntrusion\" or \"Normal\" making comparison with \"unknown\" redundant. First part of if check will always be true.",
      "range": {
        "startLine": 291,
        "startChar": 1,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1a8669a_7f0430b3",
        "filename": "src/ChassisIntrusionSensor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 386,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2022-12-20T17:28:07Z",
      "side": 1,
      "message": "Depending on first argument type only subset of later argument will be meaningful. There doesn\u0027t seem to be any meaning of having gpioInterted, slaveAddr, busId if howmon is going to be used used for intrusion. Similarly pollSensorStatusByPch and pollSensorStatusByGpio will be dead code.\nChassisIntrusionSensor is holding three classes PCHIntrusionSensor, GPIOIntrusionSensor and now hwmonIntrusionSensor. Is this observation correct ? if so shouldn\u0027t we keep three separate classes rather pushing three things in one class with \"type\" as field to differentiate ? Would like to others thought on this.",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 386,
        "endChar": 64
      },
      "revId": "847e90bdf5180ba35cf87cb22a855d8469251c4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}