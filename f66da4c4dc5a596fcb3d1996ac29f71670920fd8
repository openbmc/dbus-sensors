{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0cd3d023_68cae673",
        "filename": "meson.build",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-07T16:25:04Z",
      "side": 1,
      "message": "I have seen some intermittent invalid reading from CPUSensor service with my test. Does this change affect all boost async read/write calls? I have not isolate to this change only yet, but wanted to give a heads-up and also understand the scope of the change.",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 26,
        "endChar": 45
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "147422b0_98059bfe",
        "filename": "meson.build",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T18:39:18Z",
      "side": 1,
      "message": "yes, it changes the underlying reactor, but I\u0027d be surprised if it had any specific effects.  What might be happening is that things that were previously serial are now parallel, it exposed a timing bug?\n\nIf you disable these build options on cpusensor only, does the issue go away?",
      "parentUuid": "0cd3d023_68cae673",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 26,
        "endChar": 45
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0194866_def0359d",
        "filename": "meson.build",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T20:10:51Z",
      "side": 1,
      "message": "I ask the question because maybe a path forward would be to leave CPUSensor running in epoll mode until we can debug the issue, but move the rest of them forward.",
      "parentUuid": "147422b0_98059bfe",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 26,
        "endChar": 45
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc9e3602_b27aa13c",
        "filename": "meson.build",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-11T16:13:39Z",
      "side": 1,
      "message": "ACK. I will test with CPUSensor running in epoll",
      "parentUuid": "b0194866_def0359d",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 26,
        "endChar": 45
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbcf5104_0bdf724c",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 204,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-05T16:22:09Z",
      "side": 1,
      "message": "\\n",
      "range": {
        "startLine": 204,
        "startChar": 41,
        "endLine": 204,
        "endChar": 43
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9682fed6_27bb2588",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 204,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T16:37:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fbcf5104_0bdf724c",
      "range": {
        "startLine": 204,
        "startChar": 41,
        "endLine": 204,
        "endChar": 43
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84da9c30_6d32d436",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 210,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-05T16:22:09Z",
      "side": 1,
      "message": "is it possible for this to return part of the data, which will result in wrong data value?",
      "range": {
        "startLine": 210,
        "startChar": 8,
        "endLine": 210,
        "endChar": 67
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baefe814_c9bb8f41",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T16:37:01Z",
      "side": 1,
      "message": "I don\u0027t believe so.  The hwmon interface I believe guarantees that the whole value will be returned on a single read.",
      "parentUuid": "84da9c30_6d32d436",
      "range": {
        "startLine": 210,
        "startChar": 8,
        "endLine": 210,
        "endChar": 67
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54037635_422901d7",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 210,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-07T16:25:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "baefe814_c9bb8f41",
      "range": {
        "startLine": 210,
        "startChar": 8,
        "endLine": 210,
        "endChar": 67
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2bcada_94aa4be9",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-05T16:22:09Z",
      "side": 1,
      "message": "bufferRef",
      "range": {
        "startLine": 265,
        "startChar": 34,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca240917_347f42d7",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T16:37:01Z",
      "side": 1,
      "message": "ACK.  FWIW, this code is completely changing in the next patch to not rely on std::stoi (usese from_chars instead).  But sure, i\u0027m happy to make this patch correct.  ACK.",
      "parentUuid": "8c2bcada_94aa4be9",
      "range": {
        "startLine": 265,
        "startChar": 34,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8472cf4d_d2a37f43",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-07T16:25:04Z",
      "side": 1,
      "message": "Can you please share the next patch?",
      "parentUuid": "ca240917_347f42d7",
      "range": {
        "startLine": 265,
        "startChar": 34,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee01701d_73721b1b",
        "filename": "src/PSUEvent.cpp",
        "patchSetId": 10
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T18:39:18Z",
      "side": 1,
      "message": "It\u0027s next in the series above, but yes, here\u0027s the link:\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/55041/2",
      "parentUuid": "8472cf4d_d2a37f43",
      "range": {
        "startLine": 265,
        "startChar": 34,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18b72c7_d7660a5e",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-05T16:22:09Z",
      "side": 1,
      "message": "\\n",
      "range": {
        "startLine": 124,
        "startChar": 41,
        "endLine": 124,
        "endChar": 43
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57074b76_e246867f",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T16:37:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a18b72c7_d7660a5e",
      "range": {
        "startLine": 124,
        "startChar": 41,
        "endLine": 124,
        "endChar": 43
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd92a1bd_176d5743",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-05T16:22:09Z",
      "side": 1,
      "message": "not used, is it only for keeping buffer alive until the callback?",
      "range": {
        "startLine": 135,
        "startChar": 15,
        "endLine": 135,
        "endChar": 29
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e8e735f_d52cfd6f",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T16:37:01Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "dd92a1bd_176d5743",
      "range": {
        "startLine": 135,
        "startChar": 15,
        "endLine": 135,
        "endChar": 29
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a23e5463_e70f0a1e",
        "filename": "src/PSUSensor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-07T16:25:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5e8e735f_d52cfd6f",
      "range": {
        "startLine": 135,
        "startChar": 15,
        "endLine": 135,
        "endChar": 29
      },
      "revId": "f66da4c4dc5a596fcb3d1996ac29f71670920fd8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}