{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ee46251_bf493e56",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 538,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-22T16:41:17Z",
      "side": 1,
      "message": "bool is the same number of characters as auto, please just use bool in the future.\n\nI\u0027ve made this edit directly, so nothing to fix here.",
      "range": {
        "startLine": 538,
        "startChar": 14,
        "endLine": 538,
        "endChar": 18
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a04c2c79_daaca49b",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-22T16:04:58Z",
      "side": 1,
      "message": "return lNan !\u003d rNan;\nWill this be slightly more efficient or the compiled code would be the same?",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec4996af_f05a55e0",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-22T16:41:17Z",
      "side": 1,
      "message": "It\u0027s all dependent on what the optimizer can do with isnan(), which, without going into the generated assembly, we can only really speculate about.",
      "parentUuid": "a04c2c79_daaca49b",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67b8bcbf_822ac885",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2022-07-22T17:12:08Z",
      "side": 1,
      "message": "I\u0027m not sure, as I use online compiler https://godbolt.org/, lNan !\u003d rNan produces shorter assembly.",
      "parentUuid": "ec4996af_f05a55e0",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4b6c35a_21a85bdb",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-07-22T17:34:05Z",
      "side": 1,
      "message": "I think we should change it \"return lNan !\u003d rNan;\"\nThe one logic operation is slightly easier to understand to me also.",
      "parentUuid": "67b8bcbf_822ac885",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f63b6a9_93082ef9",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-22T20:23:46Z",
      "side": 1,
      "message": "I have no strong opinion between the two, but arj seems to have strong opinions, so lets see what he has to say.\n\nI\u0027m fine with either variant.",
      "parentUuid": "b4b6c35a_21a85bdb",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccbab234_baf8bfa9",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-22T21:54:36Z",
      "side": 1,
      "message": "I don\u0027t mind either way. I\u0027m surprised the optimiser can\u0027t figure out how to reduce my suggestion. The two key things I wanted were to minimise the if statements and to derive the return value from an expression of the variables. Whichever we choose here doesn\u0027t impact the fact that the code now achieves this.",
      "parentUuid": "1f63b6a9_93082ef9",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "688ad649_1d2fa373",
        "filename": "include/sensor.hpp",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-22T22:33:07Z",
      "side": 1,
      "message": "Zhikui/Chau, sounds like it\u0027s between the two of you which variant we want.  Get the patchset updated with whatever you decide, and this should be good to go.",
      "parentUuid": "ccbab234_baf8bfa9",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 35
      },
      "revId": "4aa6b8d1275e327fcf592fbd99f571a4a959886c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}