{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "00aa9abc_48189de2",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 258,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-06T01:41:37Z",
      "side": 1,
      "message": "same as util function: readingStateGood",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 62
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d95f6285_ded5ca4d",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 258,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-06T03:59:07Z",
      "side": 1,
      "message": "Good point, will do.",
      "parentUuid": "00aa9abc_48189de2",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 62
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "847811eb_996d47b6",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 258,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-09T00:02:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d95f6285_ded5ca4d",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 62
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31469b38_32be0658",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 565,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-06T01:41:37Z",
      "side": 1,
      "message": "this means all the sensors will be recreated regardless of readState when power state changes to on and postComplete. Should only create the missing ones ie readState \u003d\u003d type",
      "range": {
        "startLine": 565,
        "startChar": 8,
        "endLine": 565,
        "endChar": 74
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e576600_e3dc911b",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 565,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-06T03:59:07Z",
      "side": 1,
      "message": "Yeah, it\u0027s a bit heavy-handed at the moment...I\u0027ll see if I can find a simple way of making it more fine-grained.",
      "parentUuid": "31469b38_32be0658",
      "range": {
        "startLine": 565,
        "startChar": 8,
        "endLine": 565,
        "endChar": 74
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b2de1c6_bf5d3814",
        "filename": "src/HwmonTempMain.cpp",
        "patchSetId": 12
      },
      "lineNbr": 565,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-09T00:02:24Z",
      "side": 1,
      "message": "Added a `createSensors()` parameter to filter it down to just newly-created objects in the latest revision; I\u0027d be open to suggestions for a more elegant solution but I think it should basically do what we want here.",
      "parentUuid": "6e576600_e3dc911b",
      "range": {
        "startLine": 565,
        "startChar": 8,
        "endLine": 565,
        "endChar": 74
      },
      "revId": "3971d3eb916d30f6e25d01e33037e06e161a0cb9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}