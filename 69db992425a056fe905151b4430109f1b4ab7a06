{
  "comments": [
    {
      "key": {
        "uuid": "75af1d7e_16b4766b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-03T17:40:08Z",
      "side": 1,
      "message": "I did not find changes for external sensor",
      "range": {
        "startLine": 7,
        "startChar": 25,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4deb2c8_7bb22bc7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-04T00:24:41Z",
      "side": 1,
      "message": "It is in sensor.hpp. We reuse the `isSettable` flag for this mutability interface.",
      "parentUuid": "75af1d7e_16b4766b",
      "range": {
        "startLine": 7,
        "startChar": 25,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11e31eed_341a3f3e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-08-04T00:59:30Z",
      "side": 1,
      "message": "In ExternalSensor, the flag is \"true\" always, as should be the case for ExternalSensor sensors (the entire purpose of ExternalSensor is to accept externally-issued values, thus, the sensor must be writable by external users).\n\nhttps://github.com/openbmc/dbus-sensors/blob/5cf0f99210890d0cd52d5929e919316d238a5701/src/ExternalSensor.cpp#L35\n\nUnfortunately, the comment above this line was not removed, but we can do that in another patch. The work was already done, but the TODO comment was not removed.",
      "parentUuid": "b4deb2c8_7bb22bc7",
      "range": {
        "startLine": 7,
        "startChar": 25,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7ef1187_01a5d2e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-06T15:44:34Z",
      "side": 1,
      "message": "ACK. My confusion came from not seeing changes in external sensor. This change affects all sensors that have isSettable set to true. Please clarify in the commit message",
      "parentUuid": "11e31eed_341a3f3e",
      "range": {
        "startLine": 7,
        "startChar": 25,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f20f1c5_fc8f8ac0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-03T17:40:08Z",
      "side": 1,
      "message": "Is the Mutability only used through ipmi? How would manufacturing unsecure mode work with this change?",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 54
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595ea174_4afa3f07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-04T00:24:41Z",
      "side": 1,
      "message": "IIUC, manufacturing unsecure mode is intel oem? It is included in `phopshor-host-ipmid`? This is for phosphor-host-ipmid user. Set the mutability bit in ipmi SDR.",
      "parentUuid": "0f20f1c5_fc8f8ac0",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 54
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc1d18d1_ae383ca5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-06T15:44:34Z",
      "side": 1,
      "message": "sensors value can be overwritten when in manufacturing mode regardless of is settable to aid manufacturing test.\nhttps://github.com/openbmc/dbus-sensors/blob/master/include/sensor.hpp#L183\nThis change would break the feature if it is blocked at IPMI level base on Mutability at construct time and sensors are default to readonly unless config files are updated.",
      "parentUuid": "595ea174_4afa3f07",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 54
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3de199d8_2d00d3e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-06T19:22:46Z",
      "side": 1,
      "message": "I do not know how the manufacturing mode works before. phoshor-host-ipmid always block if no mutability property, unless you override the ipmi Set command.\n\nhttps://github.com/openbmc/phosphor-host-ipmid/blob/43a88109831d8e62150575e200af449194a5b6a8/sensorhandler.cpp#L376",
      "parentUuid": "cc1d18d1_ae383ca5",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 54
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3facdbd_80ac7c7c",
        "filename": "include/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-03T17:40:08Z",
      "side": 1,
      "message": "should valueMutabilityInterface set back to be nullptr?",
      "range": {
        "startLine": 324,
        "startChar": 12,
        "endLine": 328,
        "endChar": 13
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3cf8a2_f76d1d99",
        "filename": "include/sensor.hpp",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-04T00:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3facdbd_80ac7c7c",
      "range": {
        "startLine": 324,
        "startChar": 12,
        "endLine": 328,
        "endChar": 13
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f819767c_77a3db40",
        "filename": "src/FanMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 383,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-03T17:40:08Z",
      "side": 1,
      "message": "Should this be only for pwm sensor, ie. inside line 398?",
      "range": {
        "startLine": 373,
        "startChar": 16,
        "endLine": 383,
        "endChar": 17
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80c3f969_bd852213",
        "filename": "src/FanMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 383,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-04T00:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f819767c_77a3db40",
      "range": {
        "startLine": 373,
        "startChar": 16,
        "endLine": 383,
        "endChar": 17
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2781537e_08362c06",
        "filename": "src/FanMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 383,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-06T16:26:56Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "80c3f969_bd852213",
      "range": {
        "startLine": 373,
        "startChar": 16,
        "endLine": 383,
        "endChar": 17
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7aae112_45042c1c",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 246,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-03T17:40:08Z",
      "side": 1,
      "message": "The default behavior should be the same - PSU\u0027s pwm and other pwm. Here the default is true while pwm needs to opt in - add it in config file.",
      "range": {
        "startLine": 246,
        "startChar": 71,
        "endLine": 246,
        "endChar": 75
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c72cb902_2f8f6e33",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 246,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-08-04T00:24:41Z",
      "side": 1,
      "message": "Done. Change the constructor. Default value is false.",
      "parentUuid": "e7aae112_45042c1c",
      "range": {
        "startLine": 246,
        "startChar": 71,
        "endLine": 246,
        "endChar": 75
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ab2d816_97ec1daa",
        "filename": "src/PSUSensorMain.cpp",
        "patchSetId": 5
      },
      "lineNbr": 246,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-08-06T16:26:56Z",
      "side": 1,
      "message": "Sorry, looking back I think I made a mistake. PwmSensor does not inherit from sensor and PwmSensor should default to be isSettable\u003dtrue if we want to be backwards compatible and not break phosphor-pid-control.\nActually, since it has its own setValue function, isSettable flag is not checked like in sensors.hpp, so pid-control still works regardless of this flag here.",
      "parentUuid": "c72cb902_2f8f6e33",
      "range": {
        "startLine": 246,
        "startChar": 71,
        "endLine": 246,
        "endChar": 75
      },
      "revId": "69db992425a056fe905151b4430109f1b4ab7a06",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}